openapi: "3.1.0"
info:
  title: "Tax Platform"
  version: "1.0.0"
paths:
  "/health": {}
  "/integration": {}
  "/metrics": {}
  "/v1/address_validation/search":
    post:
      tags:
        - "Address Validation"
      summary: "Search"
      description: "This API validates and enriches address information\n    submitted by the user. It ensures that the address is standardized, accurate,\n    and compliant with geographical and postal standards.\n    The API also adds additional fields, such as county, when possible."
      operationId: "search_v1_address_validation_search_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AddressBase"}
            example: {"phone": "555-123-4567", "street_1": "1600 Amphitheatre Parkway", "street_2": "Building 40", "city": "Mountain View", "county": "Santa Clara", "state": "CA", "postal_code": "94043", "country": "US", "full_address": "1600 Amphitheatre Parkway, Mountain View, CA 94043"}
        required: true
      responses:
        "200":
          description: "Address found successfully"
          content:
            "application/json":
              schema:
                items: {"$ref": "#/components/schemas/AddressSearchResponse"}
                type: "array"
                title: "Response 200 Search V1 Address Validation Search Post"
              example: [{"address_submitted": {"street_1": "1600 Amphitheatre Parkway", "street_2": "", "city": "Mountain View", "county": "", "state": "CA", "postal_code": "94043", "country": "US", "full_address": ""}, "response_address": {"street_1": "1600 AMPHITHEATRE PARKWAY", "street_2": "", "city": "MOUNTAIN VIEW", "county": "SANTA CLARA", "state": "CA", "postal_code": "94043", "country": "US", "full_address": ""}, "verification_status": "VERIFIED", "enrich_fields": ["county"]}]
        "401":
          description: "The request is missing a valid x-api-key."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
              example: {"detail": "Authorization header is missing or token is invalid."}
        "422":
          description: "Validation error - Address fields failed validation or are incomplete"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__src__address_validation__responses__ValidationErrorResponse"}
              example: {"detail": [{"type": "missing", "loc": ["body"], "msg": "Field required"}]}
        "500":
          description: "An unexpected server error occurred."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
              example: {"detail": "An unexpected error occurred."}
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      x-public: true
      x-speakeasy-group: addressValidation
      x-speakeasy-name-override: search
  "/v1/address_validation/suggestions":
    post:
      tags:
        - "Address Validation"
      summary: "Suggestions"
      description: "This API endpoint provides address suggestions based on\n    partial input data. It helps users auto-complete and validate addresses efficiently\n    by returning a list of suggested addresses that match the input criteria.\n    This improves accuracy, increases speed, reduces errors,\n    and streamlines the data entry process."
      operationId: "suggestions_v1_address_validation_suggestions_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ValidationAddress"}
            example: {"line1": "1600 Amphitheatre Parkway", "line2": "", "line3": "", "city": "Mountain View", "state": "CA", "postalCode": "94043", "id": 215, "county": "", "full_address": "1600 Amphitheatre Parkway, Mountain View, CA 94043", "country": "US"}
      responses:
        "200":
          description: "Successfully retrieved address suggestions"
          content:
            "application/json":
              schema: {}
              example: [{"city": "MOUNTAIN VIEW", "county": "Santa Clara County", "state": "CA", "postal_code": "94043", "country": "US"}, {"city": "MOUNTAIN VIEW", "county": "Santa Clara County", "state": "CA", "postal_code": "94040", "country": "US"}]
        "401":
          description: "The request is missing a valid x-api-key."
          content:
            "application/json":
              example: {"detail": "Authorization header is missing or token is invalid."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error - Address fields failed validation or are incomplete"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["body"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__address_validation__responses__ValidationErrorResponse"}
        "500":
          description: "An unexpected server error occurred."
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-group: addressValidation
      x-speakeasy-name-override: suggestions
  "/v1/address_validation/bulk_suggestions": {}
  "/v1/attachments": {}
  "/v1/attachments/{attachment_id}": {}
  "/v1/attachments/{attachment_id}/download": {}
  "/v1/admin/attachments": {}
  "/v1/admin/attachments/{attachment_id}/download": {}
  "/v1/internal/batches/run/delete_expired_archived_organization": {}
  "/v1/internal/batches/run": {}
  "/v1/internal/batches/run/{organization_id}": {}
  "/v1/internal/batches/run/{organization_id}/{batch_stage}": {}
  "/v1/connections": {}
  "/v1/connections/{connection_id}": {}
  "/v1/connections/{connection_id}/transactions": {}
  "/v1/connections/shopify/{shop_id}": {}
  "/v1/connections/shopify_oauth/{shop_id}": {}
  "/v1/connections/chargebee/{site_id}": {}
  "/v1/connections/stripe/{publishable_key}": {}
  "/v1/connections/{connection_id}/sync": {}
  "/v1/connections/{connection_id}/status": {}
  "/v1/connections/apideck/{service_id}": {}
  "/v1/connections/apideck/session/{connection_id}": {}
  "/v1/connections/{connection_id}/reset": {}
  "/v1/internal/connections/run/{organization_id}/{connection_id}": {}
  "/v1/connections/{connection_id}/delete": {}
  "/v1/connections/apideck/{consumer_id}/import": {}
  "/v1/connections/apideck/webhooks": {}
  "/v1/quickbooks/webhook/listener": {}
  "/v1/connections/{connection_id}/set_tax_collection": {}
  "/v1/admin/connections": {}
  "/v1/connections/apideck/{connection_id}/activate": {}
  "/v1/webhooks/stripe/{mode}/connect": {}
  "/v1/webhooks/stripe/organizations/{organization_id}/connections/{connection_id}": {}
  "/v1/stripe/apps/oauth/authorize": {}
  "/v1/stripe/apps/oauth/callback": {}
  "/v1/stripe/apps/oauth/exchange/token": {}
  "/v1/stripe/apps/oauth/logout": {}
  "/v1/stripe/apps/connections": {}
  "/v1/customers":
    get:
      tags:
        - "Customers"
      summary: "Get Customers"
      description: "The Get Customers API retrieves\n    a paginated list of customers based on specified filters.\n    This API allows searching, filtering by country and state, and sorting the results."
      operationId: "get_customers_v1"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "search_query"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Search term to filter customers by name or other details"
            title: "Search Query"
          description: "Search term to filter customers by name or other details"
          example: "John"
        - name: "country"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items:
                  anyOf:
                    - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    - type: "string"
              - type: "null"
            description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US')"
            title: "Country"
          description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US')"
          example: "US"
        - name: "state"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "State or province code to filter customers"
            title: "State"
          description: "State or province code to filter customers"
          example: "CA"
        - name: "source__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter customers by source (comma-separated)"
            title: "Source  In"
          description: "Filter customers by source (comma-separated)"
          example: "SHOPIFY,API"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Comma-separated list of fields to sort results by."
            title: "Order By"
          description: "Comma-separated list of fields to sort results by."
          example: "created_at,street_1,street_2,city,state,postal_code,country,status"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 1
            description: "Page number"
            default: 1
            title: "Page"
          description: "Page number"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            maximum: 100
            minimum: 1
            description: "Page size"
            default: 50
            title: "Size"
          description: "Page size"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved customers"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Page_CustomerRead_"}
              example: {"items": [{"id": "cust_123abc", "organization_id": "org_456xyz", "name": "John Doe", "external_id": "cust_123", "status": "ACTIVE", "email": "john.doe@example.com", "phone": "+1234567890", "street_1": "123 Main Street", "street_2": "Apt 4B", "city": "San Francisco", "county": "San Francisco County", "state": "CA", "postal_code": "94105", "country": "US", "full_address": "123 Main Street, Apt 4B, San Francisco, CA 94105", "source": "BIGCOMMERCE", "connection_id": "conn_12345", "address_status": "UNVERIFIED"}], "total": 1, "page": 1, "size": 50, "pages": 1}
        "404":
          description: "Entered an incorrect URL."
          content:
            "application/json":
              example: {"detail": "Resource Not Found"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "The request is missing a valid x-api-key."
          content:
            "application/json":
              example: {"detail": "Authorization header is missing or token is invalid."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Query parameters failed validation, such as an out-of-range page number."
          content:
            "application/json":
              example: {"detail": [{"type": "greater_than_equal", "loc": ["query", "page"], "msg": "Input should be greater than or equal to 1", "input": "0", "ctx": {"ge": 1}}]}
              schema: {"$ref": "#/components/schemas/backend__src__customers__responses__ValidationErrorResponse"}
        "500":
          description: "An unexpected server error occurred."
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: list
    post:
      tags:
        - "Customers"
      summary: "Create Customer"
      description: "The Create Customer API enables the creation of a new customer record with essential\ndetails like name, contact information, and address, along with optional metadata."
      operationId: "create_customer_v1_customers_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerCreate"}
            example: {"phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "name": "Jane Smith", "external_id": "cust_002", "status": "ARCHIVED", "email": "jane.smith@example.com", "source": "SHOPIFY", "address_status": "PARTIALLY_VERIFIED"}
      responses:
        "200":
          description: "Successfully created customer"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerRead"}
              example: {"id": "cust_H5NTxERcncfEN", "name": "Jane Smith", "external_id": "cust_002", "status": "ARCHIVED", "email": "jane.smith@example.com", "phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "source": "SHOPIFY", "address_status": "UNVERIFIED", "organization_id": "orgn_argaLQwMy2fJc"}
        "404":
          description: "Entered an incorrect URL."
          content:
            "application/json":
              example: {"detail": "Resource Not Found"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "The request is missing a valid x-api-key."
          content:
            "application/json":
              example: {"detail": "Authorization header is missing or token is invalid."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Query parameters failed validation, such as an out-of-range page number."
          content:
            "application/json":
              example: {"detail": [{"type": "greater_than_equal", "loc": ["query", "page"], "msg": "Input should be greater than or equal to 1", "input": "0", "ctx": {"ge": 1}}]}
              schema: {"$ref": "#/components/schemas/backend__src__customers__responses__ValidationErrorResponse"}
        "500":
          description: "An unexpected server error occurred."
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: create
  "/v1/customers/{customer_id}":
    get:
      tags:
        - "Customers"
      summary: "Get Customer By Id"
      description: "The Get Customer By ID API retrieves the details of a single customer\n    using their unique identifier. It returns customer-specific data,\n    including contact information, address, name and metadata, etc."
      operationId: "get_customer_by_id_v1_customers__customer_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "customer_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "Unique identifier of the customer"
            title: "Customer Id"
          description: "Unique identifier of the customer"
          example: "cust_abc123"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved customer"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerRead"}
              example: {"phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "full_address": "456 Elm St, Suite 202, Metropolis, NY 10001", "name": "Jane Smith", "external_id": "cust_002", "status": "ACTIVE", "email": "jane.smith@example.com", "source": "SHOPIFY", "connection_id": "conn_12345", "address_status": "UNVERIFIED", "id": "cust_H5NTxERcncfEN", "organization_id": "orgn_argaLQwMy2fJc"}
        "404":
          description: "Resource Not Found"
          content:
            "application/json":
              example: {"detail": "Customer with id 'cust_01' not found for orgn_argaLQwMy2fJc"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-openapi-exclude-422: true
      x-public: true
      x-speakeasy-name-override: get
    put:
      tags:
        - "Customers"
      summary: "Update Customer"
      description: "The Update Customer API allows you to modify an existing customer's\n    information using their unique identifier,\n    enabling updates to their details as needed."
      operationId: "update_customer_v1_customers__customer_id__put"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "customer_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "Unique identifier of the customer to be retrieved."
            title: "Customer Id"
          description: "Unique identifier of the customer to be retrieved."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerUpdate"}
            example: {"phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "full_address": "456 Elm St, Suite 202, Metropolis, NY 10001, US", "name": "Jane Smith", "status": "ACTIVE", "email": "john.doe@example.com", "source": "SHOPIFY", "address_status": "VERIFIED", "external_id": "cust_002"}
      responses:
        "200":
          description: "Successfully updated customer"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerRead"}
              example: {"id": "cust_H5NTxERcncfEN", "name": "Jane Smith", "external_id": "cust_002", "status": "ACTIVE", "email": "jane.smith@example.com", "phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "source": "SHOPIFY", "address_status": "UNVERIFIED", "organization_id": "orgn_argaLQwMy2fJc"}
        "404":
          description: "Entered an incorrect URL."
          content:
            "application/json":
              example: {"detail": "Resource Not Found"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "The request is missing a valid x-api-key."
          content:
            "application/json":
              example: {"detail": "Authorization header is missing or token is invalid."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Query parameters failed validation, such as an out-of-range page number."
          content:
            "application/json":
              example: {"detail": [{"type": "greater_than_equal", "loc": ["query", "page"], "msg": "Input should be greater than or equal to 1", "input": "0", "ctx": {"ge": 1}}]}
              schema: {"$ref": "#/components/schemas/backend__src__customers__responses__ValidationErrorResponse"}
        "500":
          description: "An unexpected server error occurred."
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: update
  "/v1/customers/external/{external_id}":
    get:
      tags:
        - "Customers"
      summary: "Get Customer By External Id"
      description: "The Get Customer By External ID API retrieves the details of a single customer using\ntheir external identifier. This endpoint is useful for accessing customer data when only\nan external ID is available."
      operationId: "get_customer_by_external_id_v1_customers_external__external_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "external_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The external identifier of the customer to retrieve."
            title: "External Id"
          description: "The external identifier of the customer to retrieve."
          example: "external_12345"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved customer"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerRead"}
              example: {"phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "full_address": "456 Elm St, Suite 202, Metropolis, NY 10001", "name": "Jane Smith", "external_id": "cust_002", "status": "ACTIVE", "email": "jane.smith@example.com", "source": "SHOPIFY", "connection_id": "conn_12345", "address_status": "UNVERIFIED", "id": "cust_H5NTxERcncfEN", "organization_id": "orgn_argaLQwMy2fJc"}
        "404":
          description: "Resource Not Found"
          content:
            "application/json":
              example: {"detail": "Customer with id 'cust_01' not found for orgn_argaLQwMy2fJc"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: getByExternalId
  "/v1/customers/{customer_id}/transactions":
    get:
      tags:
        - "Customers"
      summary: "Get Transactions By Customer Id"
      description: "Get a list of transactions for a customer by their unique ID."
      operationId: "get_transactions_by_customer_id_v1_customers__customer_id__transactions_get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "customer_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Customer Id"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/TransactionRead"}
                title: "Response Get Transactions By Customer Id V1 Customers  Customer Id  Transactions Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: getTransactions
    post:
      tags:
        - "Customers"
      summary: "Create Transaction By Customer Id"
      description: "Create a new transaction for a specific customer."
      operationId: "create_transaction_by_customer_id_v1_customers__customer_id__transactions_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "customer_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Customer Id"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TransactionCreate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TransactionRead"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: createTransaction
  "/v1/internal/email/send": {}
  "/v1/email_groups": {}
  "/v1/email/groups/list/members": {}
  "/v1/email_groups/": {}
  "/v1/organizations/physical_mail": {}
  "/v1/organizations/physical_mail/external_id": {}
  "/v1/organizations/physical_mail/onboard": {}
  "/v1/stable/webhook": {}
  "/v1/exemptions":
    get:
      tags:
        - "Exemptions"
      summary: "Get Exemptions"
      description: "Retrieve a list of exemptions based on filters."
      operationId: "get_exemptions_v1_exemptions_get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "search_query"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Search term to filter exemptions by exemption ID, customer name, or customer email"
            title: "Search Query"
          description: "Search term to filter exemptions by exemption ID, customer name, or customer email"
          example: "John"
        - name: "status__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter exemptions by their status"
            default: "ACTIVE,INACTIVE,EXPIRED"
            title: "Status  In"
          description: "Filter exemptions by their status"
        - name: "country_code"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items:
                  anyOf:
                    - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    - type: "string"
              - type: "null"
            description: "Country code in ISO 3166-1 alpha-2 format"
            title: "Country Code"
          description: "Country code in ISO 3166-1 alpha-2 format"
          example: "US"
        - name: "jurisdiction"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Jurisdiction identifier"
            title: "Jurisdiction"
          description: "Jurisdiction identifier"
          example: "CA"
        - name: "start_date"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date"
              - type: "null"
            description: "Start date for filtering exemptions"
            title: "Start Date"
          description: "Start date for filtering exemptions"
          example: "2024-01-01"
        - name: "end_date"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date"
              - type: "null"
            description: "End date for filtering exemptions"
            title: "End Date"
          description: "End date for filtering exemptions"
          example: "2024-01-01"
        - name: "customer_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Customer ID to filter exemptions"
            title: "Customer Id"
          description: "Customer ID to filter exemptions"
          example: "cust_1234"
        - name: "transaction_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Transaction ID to filter exemptions"
            title: "Transaction Id"
          description: "Transaction ID to filter exemptions"
          example: "trans_1234"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Fields to sort by (comma-separated)"
            default: "end_date,FEIN,sales_tax_id,status"
            title: "Order By"
          description: "Fields to sort by (comma-separated)"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 1
            description: "Page number"
            default: 1
            title: "Page"
          description: "Page number"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            maximum: 100
            minimum: 1
            description: "Page size"
            default: 50
            title: "Size"
          description: "Page size"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved exemptions"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/fastapi_pagination__default__Page_ExemptionRead___2"}
              example: {"items": [{"id": "exem_123abc", "organization_id": "org_456xyz", "exemption_type": "wholesale", "jurisdiction": "CA", "country_code": "US", "start_date": "2024-01-01", "end_date": "2025-01-01", "customer_id": "cust_123", "transaction_id": "txn_456", "reseller": true, "FEIN": "12-3456789", "sales_tax_id": "ST-98765", "status": "ACTIVE"}], "total": 1, "page": 1, "size": 50, "pages": 1}
        "401":
          description: "The request is missing a valid x-api-key or x-organization-id"
          content:
            "application/json":
              example: {"detail": "Authorization header is missing or token is invalid"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation issues, such as missing required fields or invalid field values."
          content:
            "application/json":
              example: {"detail": [{"type": "value_error", "loc": ["query", "start_date"], "msg": "Invalid date format. Expected 'YYYY-MM-DD'.", "input": "2023/01/01"}]}
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal Server Error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: list
    post:
      tags:
        - "Exemptions"
      summary: "Create Exemption"
      description: "The Create Exemption API allows you to create a new exemption record.\n    This includes defining details such as exemption type, jurisdiction,\n    Country, State, validity dates, etc."
      operationId: "create_exemption_v1_exemptions_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ExemptionCreate"}
            example: {"exemption_type": "wholesale", "jurisdiction": "CA", "country_code": "US", "start_date": "2024-01-01", "end_date": "2026-01-01", "customer_id": "cust_001", "transaction_id": "txn_123", "reseller": true, "FEIN": "12-3456789", "sales_tax_id": "ST-98765", "status": "ACTIVE"}
      responses:
        "200":
          description: "Successfully created exemption"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__serializers__ExemptionRead"}
              example: {"country_code": "US", "jurisdiction": "CA", "start_date": "2024-01-01", "end_date": "2026-01-01", "reseller": true, "FEIN": "random", "sales_tax_id": "ST", "id": "exmp_HMV56Cb5jYuRD", "customer": {"phone": "987-654-3210", "street_1": "456 Elm St", "street_2": "Suite 202", "city": "Metropolis", "county": "Wayne", "state": "NY", "postal_code": "10001", "country": "US", "full_address": "456 Elm St, Suite 202, Metropolis, NY 10001, US", "name": "Jane Smith", "external_id": "cust_002", "status": "ARCHIVED", "email": "", "source": "SHOPIFY", "address_status": "UNVERIFIED", "id": "cust_H5NTxERcncfEN", "organization_id": "orgn_argaLQwMy2fJc"}, "attachment": [], "exemption_type": "wholesale", "status": "ACTIVE"}
        "401":
          description: "The request is missing a valid x-api-key or x-organization-id"
          content:
            "application/json":
              example: {"detail": "Authorization header is missing or token is invalid"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation issues, such as missing required fields or invalid field values."
          content:
            "application/json":
              example: {"detail": [{"type": "value_error", "loc": ["query", "start_date"], "msg": "Invalid date format. Expected 'YYYY-MM-DD'.", "input": "2023/01/01"}]}
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal Server Error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: create
  "/v1/exemptions/{exemption_id}":
    get:
      tags:
        - "Exemptions"
      summary: "Get Exemption By Id"
      description: "The Get Exemption By ID API retrieves a specific exemption record by\n    its unique ID. This API is useful for retrieving detailed information\n    about a particular exemption, including its associated\n    customer, organisation id, status, etc."
      operationId: "get_exemption_by_id_v1_exemptions__exemption_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "exemption_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique identifier for the exemption being retrieved."
            title: "Exemption Id"
          description: "The unique identifier for the exemption being retrieved."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved exemption by id"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__models__ExemptionRead"}
              example: {"updated_at": "2025-01-11T14:36:51.305151", "created_at": "2025-01-11T14:36:51.302033", "jurisdiction": "CA", "start_date": "2024-01-01", "customer_id": "cust_H5NTxERcncfEN", "sales_tax_id": "ST", "id": "exmp_vtWfyrER36irZ", "exemption_type": "wholesale", "country_code": "US", "end_date": "2025-01-01", "reseller": true, "FEIN": "random", "status": "ACTIVE", "organization_id": "orgn_argaLQwMy2fJc"}
        "422":
          description: "Validation issues, such as missing required fields or invalid field values."
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__responses__ValidationErrorResponse"}
        "404":
          description: "Resource not found"
          content:
            "application/json":
              example: {"detail": "Exemption with id exmp_JqrwqvonUzdXS not found for orgn_argaLQwMy2fJc"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "500":
          description: "Internal Server Error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: get
  "/v1/exemptions/{exemption_id}/attachments":
    post:
      tags:
        - "Exemptions"
      summary: "Upload Exemption Certificate"
      description: "The Upload Exemption Certificate API allows you\n    to upload a file attachment (e.g., exemption certificate) for a specific exemption.\n    This is primarily used to associate supporting documents with an exemption record\n    to ensure compliance and facilitate verification."
      operationId: "upload_exemption_certificate_v1_exemptions__exemption_id__attachments_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "exemption_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique identifier for the exemption to which the attachment will be associated."
            title: "Exemption Id"
          description: "The unique identifier for the exemption to which the attachment will be associated."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "multipart/form-data":
            schema: {"$ref": "#/components/schemas/Body_upload_exemption_certificate_v1_exemptions__exemption_id__attachments_post"}
      responses:
        "200":
          description: "Successfully retrieved exemption by id"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AttachmentRead"}
              example: {"related_entity_id": "exmp_vtWfyrER36irA", "related_entity_type": "EXEMPTION", "id": "atch_ZgxKo5vffwyBB"}
        "422":
          description: "Validation issues, such as missing required fields or invalid field values."
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["body", "file"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal Server Error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "The request is missing a valid x-api-key or x-organization-id"
          content:
            "application/json":
              example: {"detail": "Unauthenticated request."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: uploadCertificate
    get:
      tags:
        - "Exemptions"
      summary: "Get Attachments For Exemption"
      description: "The Get Attachments for Exemption API retrieves all\n    attachments associated with a specific exemption.\n    This is used to view and manage supporting documents\n    like exemption certificates uploaded for a particular exemption record."
      operationId: "get_attachments_for_exemption_v1_exemptions__exemption_id__attachments_get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "exemption_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique identifier for the exemption\n        whose attachments are being retrieved."
            title: "Exemption Id"
          description: "The unique identifier for the exemption\n        whose attachments are being retrieved."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved attachments for exemption"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/AttachmentRead"}
                title: "Response 200 Get Attachments For Exemption V1 Exemptions  Exemption Id  Attachments Get"
              example: [{"related_entity_id": "exmp_JqrwqvonUzdXs", "related_entity_type": "EXEMPTION", "id": "atch_7qPLke8KvSCnX"}, {"related_entity_id": "exmp_JqrwqvonUzdXs", "related_entity_type": "EXEMPTION", "id": "atch_qAVqXdCavmtm3"}]
        "422":
          description: "Validation issues, such as missing required fields or invalid field values."
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__exemptions__responses__ValidationErrorResponse"}
        "401":
          description: "The request is missing a valid x-api-key or x-organization-id"
          content:
            "application/json":
              example: {"detail": "Unauthenticated request."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: getAttachments
  "/v1/exemption/{exemption_id}": {}
  "/v1/onboarding": {}
  "/v1/onboarding/steps-status": {}
  "/v1/initial_import_status": {}
  "/v1/dashboard/charts/{type}": {}
  "/v1/dashboard/stats": {}
  "/v1/dashboard/tasks": {}
  "/v1/filings": {}
  "/v1/admin/filings": {}
  "/v1/filings/approval_stats": {}
  "/v1/filings/{filing_id}": {}
  "/v1/admin/filings/count": {}
  "/v1/admin/filings/{filing_id}": {}
  "/v1/filings/bulk/approve": {}
  "/v1/internal/filings/{filing_id}": {}
  "/v1/filings/registration/{registration_id}": {}
  "/v1/filings/reports/export": {}
  "/v1/filings/{filing_id}/reports/export": {}
  "/v1/filings/reports/bulk/download": {}
  "/v1/filings/{filing_id}/reports/download": {}
  "/v1/filings/{filing_id}/attachments": {}
  "/v1/filings/reports/summary": {}
  "/v1/filings/attachments/{filing_id}": {}
  "/v1/filings/notes/{filing_id}": {}
  "/v1/filings/{filing_id}/approve": {}
  "/v1/metrics/filings": {}
  "/v1/admin/filings/{filing_id}/attachments": {}
  "/v1/admin/filings/{filing_id}/reports/download": {}
  "/v1/admin/filings/{filing_id}/georgia-import-file": {}
  "/v1/import/validate": {}
  "/v1/import/upload-urls": {}
  "/v1/import/internal-upload": {}
  "/v1/import/internal-manual-upload": {}
  "/v1/imports": {}
  "/v1/import/{import_id}": {}
  "/v1/admin/imports": {}
  "/v1/webhooks/jira": {}
  "/v1/nexus/physical_nexus": {}
  "/v1/nexus/physical_nexus/categories": {}
  "/v1/nexus/physical_nexus/{physical_nexus_id}": {}
  "/v1/nexus":
    get:
      tags:
        - "Nexus"
      summary: "Get Nexus For Org"
      description: "Get a list of all nexuses for the organization."
      operationId: "get_nexus_for_org_v1_nexus_get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "status__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            default: "APPROACHING,NOT_EXPOSED,PENDING_REGISTRATION,EXPOSED,APPROACHING,REGISTERED"
            title: "Status  In"
        - name: "state_code"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "State Code"
        - name: "country_code__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Country Code  In"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            default: "state_code,country_code"
            title: "Order By"
        - name: "collected_tax_nexus_met"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Collected Tax Nexus Met"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 1
            description: "Page number"
            default: 1
            title: "Page"
          description: "Page number"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            maximum: 100
            minimum: 1
            description: "Page size"
            default: 50
            title: "Size"
          description: "Page size"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Page_NexusResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: list
  "/v1/nexus/{nexus_id}/register": {}
  "/v1/nexus/export": {}
  "/v1/nexus/{nexus_id}": {}
  "/v1/nexus/{nexus_id}/enable_collected_tax": {}
  "/v1/nexus/{nexus_id}/disable_collected_tax": {}
  "/v1/nexus/{nexus_id}/collected_transactions": {}
  "/v1/nexus/{nexus_id}/resolve_collected_transactions": {}
  "/v1/internal/organizations/": {}
  "/v1/organizations/is_valid": {}
  "/v1/organizations/users": {}
  "/v1/organizations/users/invites": {}
  "/v1/organizations/api_keys": {}
  "/v1/organizations/api_keys/{api_key_id}": {}
  "/v1/organizations/users/{user_id}/role": {}
  "/v1/organizations/users/{user_id}": {}
  "/v1/organizations/": {}
  "/v1/organizations/{organization_id}": {}
  "/v1/webhooks/auth/": {}
  "/v1/users/me": {}
  "/v1/users/signup_query_params": {}
  "/v1/bank_details/": {}
  "/v1/organization_details/business_details/": {}
  "/v1/organization_details/business_address/": {}
  "/v1/organization_details/business_information/": {}
  "/v1/organization_details/business_contact/": {}
  "/v1/organization_details/business_owners/": {}
  "/v1/organization_details": {}
  "/v1/organizations": {}
  "/v1/organization_details/auto_file/auto_register": {}
  "/v1/organizations/{organization_id}/settings": {}
  "/v1/admin/organizations/search": {}
  "/v1/admin/organization_details": {}
  "/v1/admin/bank_details": {}
  "/v1/admin/reports/stable-setup": {}
  "/v1/products/":
    get:
      tags:
        - "Products"
      summary: "Get Products"
      description: "Retrieve a paginated list of products based on filters and search query."
      operationId: "get_products_v1_products__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "query"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Search term to filter products by name or other details."
            title: "Query"
          description: "Search term to filter products by name or other details."
        - name: "status__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter products by status (comma-separated)"
            title: "Status  In"
          description: "Filter products by status (comma-separated)"
        - name: "product_category__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter products by category (comma-separated)"
            title: "Product Category  In"
          description: "Filter products by category (comma-separated)"
        - name: "product_subcategory__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter products by subcategory (comma-separated)"
            title: "Product Subcategory  In"
          description: "Filter products by subcategory (comma-separated)"
        - name: "source__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter products by source (comma-separated)"
            title: "Source  In"
          description: "Filter products by source (comma-separated)"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Order results by specified fields (comma-separated)"
            title: "Order By"
          description: "Order results by specified fields (comma-separated)"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 1
            description: "Page number"
            default: 1
            title: "Page"
          description: "Page number"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            maximum: 100
            minimum: 1
            description: "Page size"
            default: 50
            title: "Size"
          description: "Page size"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved products"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Page_ProductRead_"}
              example: {"items": [{"external_id": "prod_001", "code": "CODE_1001", "name": "Sample Product A", "description": "This is a sample product description.", "status": "PENDING", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "source": "BIGCOMMERCE", "connection_id": "conn_12345", "classification_failed": true, "id": "prod_abc123"}, {"external_id": "prod_002", "code": "CODE_1002", "name": "Sample Product B", "status": "APPROVED", "product_category": "SERVICE", "product_subcategory": "PROFESSIONAL_SERVICE", "tax_exempt": false, "source": "STRIPE", "classification_failed": false, "id": "prod_def456"}], "total": 2, "page": 1, "size": 50, "pages": 1}
        "404":
          description: "Resource not found"
          content:
            "application/json":
              example: {"detail": "Entered an incorrect URL."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__products__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: list
    post:
      tags:
        - "Products"
      summary: "Create Product"
      description: "The Create Product API allows users to manually create a new product\n    in the system. This includes specifying product details such as category,\n    subcategory, and tax exemption status, etc."
      operationId: "create_product_v1_products__post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ProductCreateManual"}
            example: {"external_id": "prod_001", "name": "Sample Product", "description": "A description of the product", "status": "APPROVED", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "source": "BIGCOMMERCE"}
      responses:
        "200":
          description: "Successfully created product"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ProductRead"}
              example: {"id": "prod_xR9t8P1wMK6aQ", "external_id": "prod_123", "code": "CODE_1234", "name": "Test Product", "description": "This is a test product description.", "status": "APPROVED", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "source": "SHOPIFY", "classification_failed": false}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["body", "external_id"], "msg": "Field required", "input": {"name": "Sample Product", "description": "A description of the product", "status": "APPROVED", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "source": "BIGCOMMERCE"}}]}
              schema: {"$ref": "#/components/schemas/backend__src__products__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: create
  "/v1/products/summary": {}
  "/v1/products/overview": {}
  "/v1/products/configs": {}
  "/v1/products/configs/{config_id}": {}
  "/v1/products/{product_id}":
    get:
      tags:
        - "Products"
      summary: "Get Product By Id"
      description: "The Get Product By ID API retrieves detailed information about\n    a single product by its unique ID. This API helps in viewing the specific details\n    of a product, including its attributes, status, and categorization."
      operationId: "get_product_by_id_v1_products__product_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "product_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique identifier for the product you want to retrieve."
            title: "Product Id"
          description: "The unique identifier for the product you want to retrieve."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved product by id"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ProductRead"}
              example: {"id": "prod_xR9t8P1wMK6aQ", "external_id": "prod_123", "code": "CODE_1234", "name": "Test Product", "description": "This is a test product description.", "status": "APPROVED", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "source": "SHOPIFY", "classification_failed": false}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "404":
          description: "Resource Not Found"
          content:
            "application/json":
              example: {"detail": "[orgn_argaLQwMy2fJc] Product with id prod_dTNxozoT72W5 not found"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__products__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: get
    put:
      tags:
        - "Products"
      summary: "Update Product"
      description: "The Update Product API allows users to modify the details of\n    an existing product identified by its unique product_id"
      operationId: "update_product_v1_products__product_id__put"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "product_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "Unique identifier of the product to be updated."
            title: "Product Id"
          description: "Unique identifier of the product to be updated."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              anyOf:
                - {"$ref": "#/components/schemas/ProductUpdate"}
                - {"$ref": "#/components/schemas/ProductUpdateV2"}
              title: "Product"
            example: {"external_id": "prod_001", "name": "Updated Product Name", "description": "An updated description for the product", "status": "APPROVED", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "classification_failed": false}
      responses:
        "200":
          description: "Successfully retrieved product by id"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ProductRead"}
              example: {"id": "prod_xR9t8P1wMK6aQ", "external_id": "prod_123", "code": "CODE_1234", "name": "Test Product", "description": "This is a test product description.", "status": "APPROVED", "product_category": "PHYSICAL", "product_subcategory": "GENERAL_CLOTHING", "tax_exempt": false, "source": "SHOPIFY", "classification_failed": false}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "404":
          description: "Resource Not Found"
          content:
            "application/json":
              example: {"detail": "[orgn_argaLQwMy2fJc] Product with id prod_dTNxozoT72W5 not found"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__products__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: update
  "/v1/products/categories/":
    get:
      tags:
        - "Products"
      summary: "Get Product Categories"
      description: "The Get Product Categories API retrieves all\n    product categories.  This endpoint helps users understand and select the\n    appropriate categories for their products."
      operationId: "get_product_categories_v1_products_categories__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/ProductCategories"}
                title: "Response Get Product Categories V1 Products Categories  Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: listCategories
  "/v1/products/bulk_classify/": {}
  "/v1/products/bulk_approve_v2": {}
  "/v1/products/config/": {}
  "/v1/products/classification_status/": {}
  "/v1/internal/products/categories": {}
  "/v1/products/reports/export": {}
  "/v1/registrations": {}
  "/v1/registrations/{registration_id}": {}
  "/v1/admin/registrations/{registration_id}": {}
  "/v1/registrations/{registration_id}/attachments": {}
  "/v1/registrations/{registration_id}/send_password": {}
  "/v1/registrations/{registration_id}/oss-countries": {}
  "/v1/registrations/{registration_id}/deregister": {}
  "/v1/admin/registrations": {}
  "/v1/rules/lookup/address": {}
  "/v1/rules/{rule_id}": {}
  "/v1/transactions":
    get:
      tags:
        - "Transactions"
      summary: "Get Transactions"
      description: "The Get Transactions API retrieves a list of transactions with\n    optional filtering, sorting, and pagination."
      operationId: "get_transactions_v1_transactions_get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "state_code"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter transactions by state code."
            title: "State Code"
          description: "Filter transactions by state code."
        - name: "transaction_type"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter by transaction type (e.g., SALE, FULL_CREDIT_NOTE,\n        PARTIAL_CREDIT_NOTE, ARCHIVE etc.)."
            title: "Transaction Type"
          description: "Filter by transaction type (e.g., SALE, FULL_CREDIT_NOTE,\n        PARTIAL_CREDIT_NOTE, ARCHIVE etc.)."
        - name: "transaction_source"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter transactions based on the source."
            title: "Transaction Source"
          description: "Filter transactions based on the source."
        - name: "search_query"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Search for transactions using a general query\n        (e.g., order ID, customer name)."
            title: "Search Query"
          description: "Search for transactions using a general query\n        (e.g., order ID, customer name)."
        - name: "country"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items:
                  anyOf:
                    - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    - type: "string"
              - type: "null"
            description: "Filter transactions by country code\n        (ISO 3166-1 alpha-2 format, e.g., US)."
            title: "Country"
          description: "Filter transactions by country code\n        (ISO 3166-1 alpha-2 format, e.g., US)."
        - name: "state"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter by full state name (e.g., California)."
            title: "State"
          description: "Filter by full state name (e.g., California)."
        - name: "address_status__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter by address status (e.g., UNVERIFIED, INVALID,\n        PARTIALLY_VERIFIED, VERIFIED, UNVERIFIABLE)."
            default: "UNVERIFIED,INVALID,PARTIALLY_VERIFIED,VERIFIED,UNVERIFIABLE"
            title: "Address Status  In"
          description: "Filter by address status (e.g., UNVERIFIED, INVALID,\n        PARTIALLY_VERIFIED, VERIFIED, UNVERIFIABLE)."
        - name: "status"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/TransactionStatusEnum"}
              - type: "null"
            description: "Filter by transaction status (e.g., PENDING, COMMITTED,\n        CANCELLED, FULLY_REFUNDED, PARTIALLY_REFUNDED, ARCHIVED)."
            title: "Status"
          description: "Filter by transaction status (e.g., PENDING, COMMITTED,\n        CANCELLED, FULLY_REFUNDED, PARTIALLY_REFUNDED, ARCHIVED)."
        - name: "filing_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Retrieve transactions linked to a specific filing ID."
            title: "Filing Id"
          description: "Retrieve transactions linked to a specific filing ID."
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Sort results based on specified fields.\n        Prefix with - for descending order (e.g., -date for newest first)."
            default: "date,state,customer_name,status"
            title: "Order By"
          description: "Sort results based on specified fields.\n        Prefix with - for descending order (e.g., -date for newest first)."
        - name: "date__gte"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date"
              - type: "null"
            description: "Retrieve transactions with a date\n        greater than or equal to (YYYY-MM-DD)."
            title: "Date  Gte"
          description: "Retrieve transactions with a date\n        greater than or equal to (YYYY-MM-DD)."
        - name: "date__lte"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date"
              - type: "null"
            description: "Retrieve transactions with a date\n        less than or equal to (YYYY-MM-DD)."
            title: "Date  Lte"
          description: "Retrieve transactions with a date\n        less than or equal to (YYYY-MM-DD)."
        - name: "processing_status__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter transactions based on processing status.\n        Multiple values can be passed as a comma-separated list."
            title: "Processing Status  In"
          description: "Filter transactions based on processing status.\n        Multiple values can be passed as a comma-separated list."
        - name: "marketplace"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            description: "Filter transactions by marketplace (e.g., AMAZON, EBAY)."
            title: "Marketplace"
          description: "Filter transactions by marketplace (e.g., AMAZON, EBAY)."
        - name: "exempt__in"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Filter transactions by exemption status.\n        Multiple values can be passed as a comma-separated list (e.g., EXEMPT,TAXABLE)."
            title: "Exempt  In"
          description: "Filter transactions by exemption status.\n        Multiple values can be passed as a comma-separated list (e.g., EXEMPT,TAXABLE)."
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 1
            description: "Page number"
            default: 1
            title: "Page"
          description: "Page number"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            maximum: 100
            minimum: 1
            description: "Page size"
            default: 50
            title: "Size"
          description: "Page size"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved transactions"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Page_TransactionRead_"}
              example: {"items": [{"organization_id": "orgn_123456789", "external_id": "TXN-001", "date": "2025-03-01T10:30:00", "status": "COMMITTED", "description": "Order #001 from Example Store", "processing_status": "ADDRESS_DONE", "total_amount": "250.00", "customer_id": "cust_987654321", "marketplace": false, "exempt": "NOT_EXEMPT", "exemptions": [], "secondary_external_id": "Example Store", "secondary_source": "SHOPIFY", "total_tax_amount_imported": "15.00", "tax_rate_imported": "0.06", "total_tax_amount_calculated": "15.00", "tax_rate_calculated": "0.06", "taxable_amount": "250.00", "currency": "USD", "locked": false, "source": "OTHER", "connection_id": "conn_ABC123XYZ", "filing_id": "file_1234567", "destination_currency": "USD", "converted_total_amount": 1000, "converted_total_tax_amount_imported": 1200, "converted_total_tax_amount_calculated": 1200, "conversion_rate": 1, "city": "Los Angeles", "county": "Los Angeles County", "state": "CA", "country": "US", "postal_code": "90001", "address_status": "VERIFIED", "tax_id": "tax_12345", "id": "tran_001ABCDEF", "type": "SALE", "total_discount": "0.00", "subtotal": "250.00", "addresses": [{"phone": "1234567890", "street_1": "123 Main St", "street_2": "Apt 4B", "city": "Los Angeles", "county": "Los Angeles County", "state": "CA", "postal_code": "90001", "country": "US", "full_address": "123 Main St, Apt 4B, Los Angeles, CA, 90001, US", "type": "BILL_TO", "status": "VERIFIED", "id": "addr_123XYZ", "transaction_id": "tran_001ABCDEF"}, {"phone": "9876543210", "street_1": "456 Elm St", "street_2": "", "city": "San Francisco", "county": "San Francisco County", "state": "CA", "postal_code": "94102", "country": "US", "full_address": "456 Elm St, San Francisco, CA, 94102, US", "type": "SHIP_TO", "status": "VERIFIED", "id": "addr_456XYZ", "transaction_id": "tran_001ABCDEF"}], "transaction_items": [{"external_id": "ITEM-001", "organization_id": "orgn_123456789", "date": "2025-03-01T10:30:00", "description": "Blue T-Shirt", "external_product_id": "P001", "product": "Blue T-Shirt", "product_id": "prod_ABC123", "product_name": "Blue T-Shirt - Large", "product_description": "A stylish blue t-shirt, size Large", "quantity": "2", "amount": "50.00", "tax_amount_imported": "3.00", "tax_rate_imported": "0.06", "tax_amount_calculated": "3.00", "tax_rate_calculated": "0.06", "taxable_amount": "50.00", "exempt": false, "id": "txim_ABCDEF123", "tax_items": [{"rule_id": "0000", "rate": "0.00", "amount": "0.00", "converted_amount": "0.00", "currency": "USD", "destination_currency": "USD", "external_id": "ext_1234", "name": "product", "type": "IMPORTED", "jurisdiction_type": "COUNTRY", "jurisdiction_name": "CA"}], "total_discount": "0.00", "subtotal": "100.00"}, {"external_id": "ITEM-002", "organization_id": "orgn_123456789", "date": "2025-03-01T10:30:00", "description": "Wireless Headphones", "external_product_id": "P002", "product": "Wireless Headphones", "product_id": "prod_DEF456", "product_name": "Noise-Cancelling Wireless Headphones", "product_description": "High-quality wireless headphones with noise cancellation", "quantity": "1", "amount": "150.00", "tax_amount_imported": "9.00", "tax_rate_imported": "0.06", "tax_amount_calculated": "9.00", "tax_rate_calculated": "0.06", "taxable_amount": "150.00", "exempt": false, "id": "txim_DEF456", "tax_items": [], "total_discount": "0.00", "subtotal": "150.00"}], "customer": {"phone": "1234567890", "street_1": "123 Main St", "street_2": "Apt 4B", "city": "Los Angeles", "county": "Los Angeles County", "state": "CA", "postal_code": "90001", "country": "US", "full_address": "123 Main St, Apt 4B, Los Angeles, CA, 90001, US", "name": "John Doe", "external_id": "CUST-001", "status": "ACTIVE", "email": "johndoe@example.com", "source": "SHOPIFY", "connection_id": "conn_ABC123XYZ", "address_status": "VERIFIED", "id": "cust_987654321", "organization_id": "orgn_123456789"}}], "total": 1, "page": 1, "size": 1, "pages": 1}
        "404":
          description: "Resource not found"
          content:
            "application/json":
              example: {"detail": "Entered an incorrect URL."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__transactions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: list
    post:
      tags:
        - "Transactions"
      summary: "Create Transaction"
      description: "Create a transaction."
      operationId: "create_transaction_v1_transactions_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TransactionPublicRequest"}
            example: {"organization_id": "orgn_YourOrgIdHere", "external_id": "YourUniqueOrder123", "date": "2024-01-15T14:30:00Z", "type": "SALE", "currency": "USD", "customer": {"organization_id": "orgn_YourOrgIdHere", "external_id": "Cust456", "name": "John Doe"}, "addresses": [{"type": "SHIP_TO", "country": "US", "state": "CA", "city": "San Francisco", "postal_code": "94107", "street_1": "123 Main St"}], "transaction_items": [{"organization_id": "orgn_YourOrgIdHere", "date": "2024-01-15T14:30:00Z", "external_product_id": "SKU-ABC", "product": "Example Widget", "quantity": 2, "amount": 50}], "source": "API"}
      responses:
        "202":
          description: "Successfully created transaction"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TransactionRead", "type": "array", "items": {"$ref": "#/components/schemas/TransactionRead"}, "title": "Response 202 Create Transaction V1 Transactions Post"}
              example: [{"organization_id": "orgn_YOURORGID", "external_id": "tran_YOURTRANSACTIONID", "date": "2024-01-15T14:30:00", "status": "COMMITTED", "description": "Order with one taxable book and one exempt service", "processing_status": "QUEUED", "total_amount": "200.00", "customer_id": "cust_afXm2qPEycF83", "marketplace": false, "exempt": "FULLY_EXEMPT", "exemptions": [{"updated_at": "2025-05-22T14:48:46.056060", "start_date": "2025-01-23", "transaction_id": "tran_nc5Q4hLi97NRD", "reseller": true, "status": "ACTIVE", "created_at": "2025-05-22T14:48:46.193109", "exemption_type": "transaction", "customer_id": "cust_afXm2qPEycF83", "id": "exmp_xfLpDHxxX4Cxv", "organization_id": "orgn_UT7zEcgwt4Fhk"}], "total_tax_amount_imported": "6.00", "tax_rate_imported": "0.030000000", "total_tax_amount_calculated": "0.00", "tax_rate_calculated": "0E-9", "total_tax_liability_amount": "6.00", "tax_liability_source": "COLLECTED", "taxable_amount": "200.00", "currency": "USD", "locked": false, "source": "API", "address_status": "UNVERIFIED", "id": "tran_g9WJFTdFjLzDv", "addresses": [{"street_1": "123 Main St", "city": "San Francisco", "state": "CA", "postal_code": "94107", "country": "US", "type": "SHIP_TO", "status": "UNVERIFIED", "id": "addr_tWqfSwDZK7aSt", "transaction_id": "tran_g9WJFTdFjLzDv"}], "transaction_items": [{"external_id": "LI_BOOK_TAXABLE_001", "organization_id": "orgn_YOURORGID", "date": "2025-01-24T11:00:00", "external_product_id": "PROD_BOOK_SCIFI_HC", "product": "Sci-Fi Hardcover Novel", "product_id": "prod_AKczKRGnAe3d3", "quantity": "1", "amount": "100.00", "tax_amount_imported": "6.00", "tax_rate_imported": "0.060000000", "tax_amount_calculated": "0.00", "tax_rate_calculated": "0E-9", "taxable_amount": "100.00", "exempt": false, "id": "txim_c63o27oiEhLuA", "tax_items": [{"rule_id": "0000", "rate": "0.060000000", "amount": "6.00", "name": "PA State Sales Tax", "type": "IMPORTED", "jurisdiction_type": "STATE", "jurisdiction_name": "PA"}], "total_discount": "0.00", "subtotal": "100.00"}, {"external_id": "LI_SERVICE_EXEMPT_002", "organization_id": "orgn_YOURORGID", "date": "2025-01-24T11:00:00", "external_product_id": "PROD_DIGITAL_SERVICE_EX", "product": "Digital Marketing Service (Non-Taxable in PA)", "product_id": "prod_zz2RshS8uweRe", "quantity": "1", "amount": "100.00", "tax_amount_imported": "0.00", "tax_rate_imported": "0E-9", "tax_amount_calculated": "0.00", "tax_rate_calculated": "0E-9", "taxable_amount": "100.00", "tax_exemption": "PRODUCT", "exempt": false, "id": "txim_eqwAKmiDpgf2m", "tax_items": [], "total_discount": "0.00", "subtotal": "100.00"}], "customer": {"name": "John Doe", "external_id": "Cust456", "status": "ACTIVE", "email": "buyer@example.com", "address_status": "UNVERIFIED", "id": "cust_afXm2qPEycF83", "organization_id": "orgn_YOURORGID"}, "type": "SALE", "total_discount": "0.00", "subtotal": "200.00"}]
        "400":
          description: "Bad Request - Invalid input or business rule violation"
          content:
            "application/json":
              examples:
                "duplicate_external_id":
                  summary: "Duplicate transaction external ID"
                  value: {"detail": "Duplicate external id (ORDER_XYZ_789) for the given transaction not allowed."}
                "missing_product_external_id":
                  summary: "Missing product external ID"
                  value: {"detail": "[orgn_YourOrgIdHere] Product does not have an external id"}
                "connection_mismatch":
                  summary: "Connection mismatch error"
                  value: {"detail": "Connection mismatch between transaction and customer"}
                "invalid_address":
                  summary: "Invalid address error"
                  value: {"detail": "Address validation failed: missing required fields"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "Unauthorized - Authentication failed"
          content:
            "application/json":
              examples:
                "missing_api_key":
                  summary: "Missing API key"
                  value: {"detail": "The request is missing a valid x-api-key."}
                "invalid_token":
                  summary: "Invalid or expired token"
                  value: {"detail": "Not authenticated"}
                "organization_access":
                  summary: "No access to organization"
                  value: {"detail": "User does not have access to the specified organization"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error - Request data failed validation"
          content:
            "application/json":
              examples:
                "missing_org_id":
                  summary: "Missing organization ID"
                  value: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
                "missing_required_field":
                  summary: "Missing required field"
                  value: {"detail": [{"type": "missing", "loc": ["body", "external_id"], "msg": "Field required"}]}
                "invalid_enum_value":
                  summary: "Invalid enum value"
                  value: {"detail": [{"type": "enum", "loc": ["body", "currency"], "msg": "Input should be 'USD', 'CAD', 'EUR'...", "input": "INVALID", "ctx": {"expected": "one of USD, CAD, EUR..."}}]}
                "invalid_date_format":
                  summary: "Invalid date format"
                  value: {"detail": [{"type": "datetime_parsing", "loc": ["body", "date"], "msg": "Input should be a valid datetime, invalid format", "input": "2023-13-45"}]}
              schema: {"$ref": "#/components/schemas/backend__src__transactions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              examples:
                "generic_error":
                  summary: "Generic server error"
                  value: {"detail": "An unexpected error occurred"}
                "database_error":
                  summary: "Database error"
                  value: {"detail": "Database operation failed: DatabaseError"}
                "external_service_error":
                  summary: "External service error"
                  value: {"detail": "An error occurred while making a request to an external service: ExternalServiceError"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: create
  "/v1/transactions/addresses": {}
  "/v1/transactions/sources": {}
  "/v1/transactions/import": {}
  "/v1/transactions/reports/summary": {}
  "/v1/transactions/reports/collected": {}
  "/v1/transactions/addresses/revalidation": {}
  "/v1/transactions/{transaction_id}/addresses": {}
  "/v1/transactions/{transaction_id}/related_transactions": {}
  "/v1/transactions/external/{external_id}":
    get:
      tags:
        - "Transactions"
      summary: "Get Transaction By External Id"
      description: "Retrieves a specific transaction based on its external ID.\n    This allows users to fetch transaction details using an identifier from an external system."
      operationId: "get_transaction_by_external_id_v1_transactions_external__external_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "external_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique external identifier of the transaction."
            title: "External Id"
          description: "The unique external identifier of the transaction."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved transaction by external id"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TransactionRead"}
              example: {"organization_id": "orgn_dummyOrg123", "external_id": "ext_trans_001", "date": "2025-03-10T14:00:00", "status": "COMMITTED", "description": "Example Transaction Description", "processing_status": "ADDRESS_DONE", "total_amount": "200.00", "customer_id": "cust_dummyCust001", "marketplace": false, "exempt": "NOT_EXEMPT", "exemptions": [], "total_tax_amount_imported": "0.00", "tax_rate_imported": "0E-9", "total_tax_amount_calculated": "15.00", "tax_rate_calculated": "0.075", "taxable_amount": "200.00", "currency": "USD", "locked": false, "source": "SHOPIFY", "connection_id": "conn_dummy123", "destination_currency": "USD", "converted_total_amount": "200.00", "converted_total_tax_amount_imported": "0.00", "converted_total_tax_amount_calculated": "15.00", "conversion_rate": "1.00", "city": "Dummy City", "county": "Dummy County", "state": "CA", "country": "US", "postal_code": "90001", "address_status": "VERIFIED", "id": "tran_dummyId001", "addresses": [{"phone": "+15551234567", "street_1": "123 Example St", "street_2": "Apt 456", "city": "Dummy City", "county": "Dummy County", "state": "CA", "postal_code": "90001", "country": "US", "full_address": "123 Example St Apt 456, Dummy City, CA 90001, US", "type": "BILL_TO", "status": "VERIFIED", "id": "addr_dummy001", "transaction_id": "tran_dummyId001"}], "transaction_items": [{"external_id": "item_ext_001", "organization_id": "orgn_dummyOrg123", "date": "2025-03-10T14:00:00", "description": "Dummy Product Description", "external_product_id": "prod_ext_001", "product": "Dummy Product", "product_id": "prod_dummyId001", "product_name": "Dummy Product Name", "product_description": "Detailed dummy product description", "quantity": "2", "amount": "100.00", "tax_amount_imported": "0.00", "tax_rate_imported": "0E-9", "tax_amount_calculated": "7.50", "tax_rate_calculated": "0.075", "original_currency": "USD", "destination_currency": "USD", "converted_amount": "100.00", "converted_taxable_amount": "100.00", "converted_tax_amount_imported": "0.00", "converted_tax_amount_calculated": "7.50", "taxable_amount": "100.00", "exempt": false, "id": "txim_dummy001", "tax_items": [], "total_discount": "0.00", "subtotal": "200.00"}], "customer": {"phone": "+15557654321", "street_1": "789 Customer Rd", "street_2": "", "city": "Customer City", "county": "Customer County", "state": "CA", "postal_code": "90002", "country": "US", "full_address": "789 Customer Rd, Customer City, CA 90002, US", "name": "John Doe", "external_id": "cust_ext_001", "status": "ACTIVE", "email": "johndoe@example.com", "source": "SHOPIFY", "connection_id": "conn_dummy123", "address_status": "VERIFIED", "id": "cust_dummyCust001", "organization_id": "orgn_dummyOrg123"}, "type": "SALE", "total_discount": "0.00", "subtotal": "200.00"}
        "404":
          description: "Resource not found"
          content:
            "application/json":
              example: {"detail": "Transaction with 'external_id' of 'in_1QqdT0Er1a0N42VtJR0FeCl' was not found in 'orgn_argaLQwMy2fJc'"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__transactions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: getByExternalId
  "/v1/transactions/{transaction_id}":
    put:
      tags:
        - "Transactions"
      summary: "Update Transaction"
      description: "Update a specific transaction by its ID."
      operationId: "update_transaction_v1_transactions__transaction_id__put"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "transaction_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Transaction Id"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TransactionUpdate"}
            example: {"customer": {}, "organization_id": "orgn_argaLQwMy2fJc", "external_id": "EXT12345", "date": "2025-04-02T17:36:59.814Z", "addresses": [{"type": "BILL_TO"}], "transaction_items": [{"organization_id": "orgn_argaLQwMy2fJc", "date": "2025-04-02T17:36:59.814Z", "external_product_id": "1186DUMMYITEM"}]}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TransactionRead"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: update
    get:
      tags:
        - "Transactions"
      summary: "Get Transaction By Id"
      description: "The Get Transaction By Id API retrieves detailed information\n    about a specific transaction by providing its unique transaction ID."
      operationId: "get_transaction_by_id_v1_transactions__transaction_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "transaction_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique identifier of the transaction to retrieve."
            title: "Transaction Id"
          description: "The unique identifier of the transaction to retrieve."
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved transaction by transaction_id"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TransactionRead"}
              example: {"organization_id": "orgn_dummyOrg123", "external_id": "ext_trans_001", "date": "2025-03-10T14:00:00", "status": "COMMITTED", "description": "Example Transaction Description", "processing_status": "ADDRESS_DONE", "total_amount": "200.00", "customer_id": "cust_dummyCust001", "marketplace": false, "exempt": "NOT_EXEMPT", "exemptions": [], "total_tax_amount_imported": "0.00", "tax_rate_imported": "0E-9", "total_tax_amount_calculated": "15.00", "tax_rate_calculated": "0.075", "taxable_amount": "200.00", "currency": "USD", "locked": false, "source": "SHOPIFY", "connection_id": "conn_dummy123", "destination_currency": "USD", "converted_total_amount": "200.00", "converted_total_tax_amount_imported": "0.00", "converted_total_tax_amount_calculated": "15.00", "conversion_rate": "1.00", "city": "Dummy City", "county": "Dummy County", "state": "CA", "country": "US", "postal_code": "90001", "address_status": "VERIFIED", "id": "tran_dummyId001", "addresses": [{"phone": "+15551234567", "street_1": "123 Example St", "street_2": "Apt 456", "city": "Dummy City", "county": "Dummy County", "state": "CA", "postal_code": "90001", "country": "US", "full_address": "123 Example St Apt 456, Dummy City, CA 90001, US", "type": "BILL_TO", "status": "VERIFIED", "id": "addr_dummy001", "transaction_id": "tran_dummyId001"}], "transaction_items": [{"external_id": "item_ext_001", "organization_id": "orgn_dummyOrg123", "date": "2025-03-10T14:00:00", "description": "Dummy Product Description", "external_product_id": "prod_ext_001", "product": "Dummy Product", "product_id": "prod_dummyId001", "product_name": "Dummy Product Name", "product_description": "Detailed dummy product description", "quantity": "2", "amount": "100.00", "tax_amount_imported": "0.00", "tax_rate_imported": "0E-9", "tax_amount_calculated": "7.50", "tax_rate_calculated": "0.075", "original_currency": "USD", "destination_currency": "USD", "converted_amount": "100.00", "converted_taxable_amount": "100.00", "converted_tax_amount_imported": "0.00", "converted_tax_amount_calculated": "7.50", "taxable_amount": "100.00", "exempt": false, "id": "txim_dummy001", "tax_items": [], "total_discount": "0.00", "subtotal": "200.00"}], "customer": {"phone": "+15557654321", "street_1": "789 Customer Rd", "street_2": "", "city": "Customer City", "county": "Customer County", "state": "CA", "postal_code": "90002", "country": "US", "full_address": "789 Customer Rd, Customer City, CA 90002, US", "name": "John Doe", "external_id": "cust_ext_001", "status": "ACTIVE", "email": "johndoe@example.com", "source": "SHOPIFY", "connection_id": "conn_dummy123", "address_status": "VERIFIED", "id": "cust_dummyCust001", "organization_id": "orgn_dummyOrg123"}, "type": "SALE", "total_discount": "0.00", "subtotal": "200.00"}
        "404":
          description: "Resource not found"
          content:
            "application/json":
              example: {"detail": "Transaction with 'transaction_id' of 'tran_1QqdT0Er1a0N42VtJR0FeCl' was not found in 'orgn_argaLQwMy2fJc'"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__transactions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: getById
  "/v1/transactions/filings/{filing_id}":
    get:
      tags:
        - "Transactions"
      summary: "Get Transactions By Filing Id"
      description: "Retrieve transactions by filing ID."
      operationId: "get_transactions_by_filing_id_v1_transactions_filings__filing_id__get"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "filing_id"
          in: "path"
          required: true
          schema:
            type: "string"
            description: "The unique identifier of the filing\n        whose transactions you wish to retrieve.\n        "
            title: "Filing Id"
          description: "The unique identifier of the filing\n        whose transactions you wish to retrieve.\n        "
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      responses:
        "200":
          description: "Successfully retrieved transaction by filing id"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/TransactionRead"}
                title: "Response 200 Get Transactions By Filing Id V1 Transactions Filings  Filing Id  Get"
              example: [{"updated_at": "2025-05-20T15:30:45.123456", "refund_status": "NOT_REFUNDED", "total_amount": "250.00", "converted_total_amount": "250.00", "city": "Vancouver", "id": "tran_ABC123XYZ789", "total_tax_amount_imported": "15.00", "converted_total_tax_amount_imported": "15.00", "county": "Metro Vancouver", "address_status": "VERIFIED", "type": "SALE", "tax_rate_imported": "0.0600", "converted_total_tax_amount_calculated": "15.00", "state": "BC", "connection_id": "conn_ExampleConnection01", "status": "COMMITTED", "date": "2025-05-18T12:00:00", "total_tax_amount_calculated": "15.00", "conversion_rate": "1.0000", "country": "CA", "filing_id": "file_ExampleFiling123", "external_id": "EXT_ORDER_456", "tax_rate_calculated": "0.0600", "converted_taxable_amount": "235.00", "postal_code": "V6B 1A1", "created_at": "2025-05-19T09:15:30.987654", "secondary_external_id": "ExternalSystem123", "taxable_amount": "235.00", "locked": false, "marketplace": true, "secondary_source": "SHOPIFY", "currency": "CAD", "description": "Shopify order #456 from Demo Store", "exempt": "NOT_EXEMPT", "customer_id": "cust_ExampleCust789", "organization_id": "orgn_ExampleOrg456", "external_friendly_id": "ORDER456", "destination_currency": "CAD", "source": "SHOPIFY", "tax_id": "123-456-789"}]
        "401":
          description: "Unauthenticated request."
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["header", "x-organization-id"], "msg": "Field required"}]}
              schema: {"$ref": "#/components/schemas/backend__src__transactions__responses__ValidationErrorResponse"}
        "500":
          description: "Internal server error"
          content:
            "application/json":
              example: {"detail": "An unexpected error occurred"}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-name-override: getByFilingId
  "/v1/transactions/export/csv": {}
  "/v1/transactions/reports/details": {}
  "/v1/transactions/min-max-date": {}
  "/v1/transactions/addresses/fill_blank": {}
  "/v1/transactions/archive_by_date": {}
  "/v1/transactions/addresses/blank": {}
  "/v1/transactions/addresses/blank/suggestion": {}
  "/v1/transactions/{original_transaction_id}/credit_notes":
    post:
      tags:
        - "Transactions"
      summary: "Create Credit Note By Transaction Id"
      description: "Create a new credit note for a specific transaction."
      operationId: "create_credit_note_by_transaction_id_v1_transactions__original_transaction_id__credit_notes_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "original_transaction_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Original Transaction Id"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreditNoteCreate"}
            example: {"external_id": "CN-12345", "date": "2024-10-27T14:30:00Z", "status": "PENDING", "description": "Refund for damaged product", "total_amount": 50, "external_customer_id": "CUST-456", "currency": "USD", "transaction_items": [{"external_id": "ITEM-1", "date": "2024-10-27T14:30:00Z", "external_product_id": "PROD-ABC", "quantity": 1, "amount": 50}]}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TransactionRead"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: createCreditNote
  "/v1/transactions/{original_transaction_id}/credit_notes/{credit_note_id}":
    put:
      tags:
        - "Transactions"
      summary: "Update Credit Note By Transaction Id"
      description: "Update an existing credit note for a specific transaction."
      operationId: "update_credit_note_by_transaction_id_v1_transactions__original_transaction_id__credit_notes__credit_note_id__put"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "original_transaction_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Original Transaction Id"
        - name: "credit_note_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Credit Note Id"
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreditNoteCreate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-public: true
      x-speakeasy-name-override: updateCreditNote
  "/v1/metrics/transactions": {}
  "/v1/transactions/archive": {}
  "/v1/transactions/addresses/invalid": {}
  "/v1/tax/estimate":
    post:
      tags:
        - "Tax Estimation"
      summary: "Estimate Tax"
      description: "The Estimate Tax API calculates the estimated tax for a specific\n    transaction based on the provided details, including organization nexus,\n    transaction details, customer details, and addresses. Optionally simulates nexus being met for tax calculation purposes. The `simulate_nexus_met` parameter is deprecated and will be removed in future releases."
      operationId: "estimate_tax_v1_tax_estimate_post"
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: "simulate_nexus_met"
          in: "query"
          required: false
          schema:
            type: "boolean"
            description: "**Deprecated:** Use `simulate_active_registration` in the request body instead."
            deprecated: true
            title: "Simulate Nexus Met"
          description: "**Deprecated:** Use `simulate_active_registration` in the request body instead."
          deprecated: true
        - name: "x-organization-id"
          in: "header"
          required: true
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The unique identifier for the organization making the request"
            title: "X-Organization-Id"
          description: "The unique identifier for the organization making the request"
          example: "org_12345"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TransactionEstimatePublicRequest"}
            example: {"date": "2025-01-23T13:01:29.949Z", "external_id": "txn_12345", "currency": "USD", "addresses": [{"type": "SHIP_TO", "street_1": "789 Pine St", "city": "Austin", "state": "TX", "postal_code": "78701", "country": "US"}], "transaction_items": [{"external_id": "item_A", "date": "2024-10-28T10:00:00Z", "external_product_id": "prod_abc", "quantity": 2, "amount": 100}, {"external_id": "item_B", "date": "2024-10-28T10:00:00Z", "external_product_id": "prod_xyz", "quantity": 1, "amount": 75.5}]}
      responses:
        "200":
          description: "Successfully retrieved data"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Page_TransactionEstimateResponse_"}
              example: {"date": "2025-01-25T13:45:00Z", "external_id": "123456", "total_amount": "500.00", "currency": "USD", "description": "Test transaction for tax calculation", "source": "OTHER", "marketplace": false, "addresses": [{"type": "SHIP_TO", "street_1": "456 Elm Street", "street_2": "Suite 202", "city": "Springfield", "county": "Greene", "state": "MO", "postal_code": "65806", "country": "US", "status": "VERIFIED"}], "transaction_items": [{"external_id": "ITEM123", "date": "2025-01-25T14:00:00Z", "description": "A sample product", "external_product_id": "PROD001", "product_name": "Sample Product", "product_description": "This is a sample product for testing", "product_source": "OTHER", "product_subcategory": "GENERAL_CLOTHING", "product_category": "PHYSICAL", "quantity": "2", "amount": "250.00", "exempt": false, "tax_amount": "20.00", "taxable_amount": "500.00", "tax_rate": "0.08", "tax_items": [{"rate": "0.05", "name": "State Tax", "amount": "12.50", "exempt": false}, {"rate": "0.03", "name": "County Tax", "amount": "7.50", "exempt": false}]}], "total_tax_amount_calculated": "20.00", "taxable_amount": "500.00", "tax_rate_calculated": "0.08", "nexus_met": true, "has_active_registration": true}
        "404":
          description: "Resource Not Found"
          content:
            "application/json":
              example: {"detail": "Entered an incorrect URL."}
        "401":
          description: "Authorization Error"
          content:
            "application/json":
              example: {"detail": "The request is missing a valid x-api-key."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              example: {"detail": [{"type": "missing", "loc": ["body", "date"], "msg": "Field required", "input": {"external_id": "123456", "total_amount": 1000, "currency": "USD", "description": "Transaction for tax estimation", "simulate_active_registration": true, "addresses": [{"type": "SHIP_TO", "street_1": "789 Elm Street", "city": "Springfield", "state": "MO", "postal_code": "65806", "country": "US"}], "transaction_items": [{"amount": 1000, "date": "2025-01-26T10:15:00Z", "external_product_id": "PROD001", "product_description": "Sample product description", "product_name": "Sample Product", "product_source": "OTHER", "quantity": 2, "tax_amount": "", "tax_items": []}]}}]}
              schema: {"$ref": "#/components/schemas/backend__src__tax_estimation__responses__ValidationErrorResponse"}
        "500":
          description: "Server Error"
          content:
            "application/json":
              example: {"detail": "An unexpected server error occurred."}
              schema: {"$ref": "#/components/schemas/ErrorResponse"}
      x-public: true
      x-speakeasy-group: taxEstimation
      x-speakeasy-name-override: estimateTax
  "/v1/taxgpt": {}
  "/v1/billing": {}
  "/v1/billing_details": {}
  "/v1/billing/invoices": {}
  "/v1/billing/checkout_new_url": {}
  "/v1/billing/generate_portal_session": {}
  "/v1/billing/chargebee_checkout": {}
  "/v1/billing/update_billing_plan": {}
  "/v1/billing/matrices": {}
  "/v1/billing/invoices/{invoice_id}/pdf": {}
  "/v1/billing/analytics": {}
  "/v1/billing/invoices/{invoice_id}/usage": {}
  "/v1/webhooks/chargebee/{organization_id}": {}
  "/v1/internal/migrate": {}
  "/v1/notifications/filing-approval-reminder": {}
  "/v1/notification/batches": {}
  "/v1/oauth/exchange/token": {}
  "/v1/oauth/logout": {}
  "/v1/internal/hris/webhook/listener": {}
  "/v1/partner/organizations": {}
  "/v1/partner/{partner_id}": {}
  "/v1/credits": {}
  "/v1/marketplaces": {}
  "/chargebee/address/validate": {}
  "/chargebee/address/check-taxability": {}
  "/chargebee/tax-estimate": {}
  "/chargebee/invoices": {}
  "/chargebee/invoices/{invoice_id}/commit": {}
  "/chargebee/invoices/{invoice_id}/void": {}
  "/chargebee/credit-notes": {}
  "/chargebee/credit-notes/{credit_note_id}/commit": {}
  "/chargebee/credit-notes/{credit_note_id}/void": {}
  "/chargebee/credentials/validate": {}
  "/bigcommerce/connect": {}
  "/bigcommerce/enable_tax_calculation": {}
  "/bigcommerce/disable_tax_calculation": {}
  "/bigcommerce/deactivate": {}
  "/bigcommerce/estimate": {}
  "/bigcommerce/commit": {}
  "/magento/estimate": {}
  "/magento/webhook/listener": {}
  "/magento/validate": {}
  "/shopware/registration": {}
  "/shopware/confirmation": {}
  "/shopware/activate": {}
  "/shopware/deactivate": {}
  "/shopware/uninstall": {}
  "/shopware/webhooks": {}
  "/shopware/tax-estimate": {}
components:
  schemas:
    "AccountingModelEnum":
      type: "string"
      enum:
        - "ACCRUAL"
        - "CASH"
      title: "AccountingModelEnum"
    "Address-Input":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Optional additional enriched data for the address."
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
        "organization_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Organization Id"
        "transaction_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Transaction Id"
      type: "object"
      required:
        - "type"
      title: "Address"
    "AddressBase":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
      type: "object"
      title: "AddressBase"
    "AddressResponseData":
      properties:
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address of the customer"
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides"
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer"
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields"
      type: "object"
      title: "Standardized Address"
    "AddressSearchResponse":
      properties:
        "address_submitted": {"$ref": "#/components/schemas/AddressSubmittedResponse", "description": "The original address data submitted in the request"}
        "response_address": {"$ref": "#/components/schemas/AddressResponseData", "description": "The standardized and enriched version of the submitted address"}
        "verification_status":
          type: "string"
          title: "Verification Status"
          description: "Indicates if the address was VERIFIED, PARTIALLY_VERIFIED, INVALID, UNVERIFIABLE, BLANK"
        "enrich_fields":
          items:
            type: "string"
          type: "array"
          title: "Enrich Fields"
          description: "List of additional fields added to enrich the address"
      type: "object"
      required:
        - "address_submitted"
        - "response_address"
        - "verification_status"
        - "enrich_fields"
      title: "AddressSearchResponse"
    "AddressStatus":
      type: "string"
      enum:
        - "UNVERIFIED"
        - "INVALID"
        - "PARTIALLY_VERIFIED"
        - "VERIFIED"
        - "UNVERIFIABLE"
        - "BLANK"
      title: "AddressStatus"
    "AddressSubmittedResponse":
      properties:
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address of the customer"
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides"
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer"
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields"
      type: "object"
      title: "Submitted Address"
    "AddressType":
      type: "string"
      enum:
        - "BILL_TO"
        - "SHIP_TO"
        - "SHIP_FROM"
        - "BILL_FROM"
      title: "AddressType"
    "AdminFilingRegistrationPasswordRead":
      properties:
        "registration_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Registration Date"
          description: "The date when the registration was created. Format: YYYY-MM-DD."
        "registration_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Email"
          description: "Email address associated with the registration."
        "registration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Key"
          description: "A unique key assigned to the registration."
        "deregistration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deregistration Key"
          description: "A unique key assigned for deregistration."
        "registration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Requested"
          description: "Timestamp when the registration was requested."
        "registration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Completed"
          description: "Timestamp when the registration was completed."
        "deregistration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Requested"
          description: "Timestamp when deregistration was requested."
        "deregistration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Completed"
          description: "Timestamp when the deregistration was completed."
        "auto_registered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Registered"
          description: "Indicates whether the registration was completed automatically."
          default: false
        "registrations_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
          description: "The tax registration regime (e.g., STANDARD, SIMPLIFIED)."
        "change_regime_status":
          anyOf:
            - {"$ref": "#/components/schemas/ChangeRegimeStatusEnum"}
            - type: "null"
        "third_party_enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Third Party Enabled"
          description: "Indicates whether third-party access is enabled for this registration."
          default: false
        "marked_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marked Collecting"
          description: "Indicates whether the  registration is marked as collecting in shopify"
        "status": {"$ref": "#/components/schemas/RegistrationStatusEnum", "description": "The current status of the registration. Possible values: REGISTERED, PROCESSING, UNREGISTERED, DEREGISTERING, DEREGISTERED, VALIDATING, AWAITING_CLARIFICATION."}
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The country code (ISO 3166-1 alpha-2 format) where the registration applies."}
        "state_code":
          type: "string"
          title: "State Code"
          description: "The state/province code where the registration applies."
        "state_name":
          type: "string"
          title: "State Name"
          description: "The name of the state/province."
        "filing_frequency": {"$ref": "#/components/schemas/FilingFrequencyEnum", "description": "Specifies how often tax filings should be made.\n                                                Possible values: MONTHLY, QUARTERLY, ANNUALLY, UNKNOWN."}
        "filing_days":
          type: "integer"
          title: "Filing Days"
          description: "The number of days before the filing deadline."
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
          description: "Username for accessing tax registration details."
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
          description: "Additional comments related to the registration."
        "create_filings_from":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Create Filings From"
          description: "The date from which filings should be created.\n        should start (YYYY-MM-DD)."
        "initial_sync":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Initial Sync"
          description: "Indicates whether an initial synchronization should be performed."
          default: false
        "amount_fees":
          type: "string"
          title: "Amount Fees"
          description: "The amount of fees associated with the registration."
          default: "0.00"
        "vda":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda"
          description: "Indicates whether a Voluntary Disclosure Agreement (VDA) applies."
          default: false
        "imported":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Imported"
          description: "Whether the registration was imported from another system."
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "The sales tax ID associated with the registration."
        "sst_import":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Sst Import"
          description: "Indicates whether the registration is an SST Import."
          default: false
        "oss_type":
          anyOf:
            - {"$ref": "#/components/schemas/OssTypeEnum"}
            - type: "null"
          description: "The type of OSS registration. Should be filled for ZZ_EU OSS registrations."
        "oss_member_state_of_identification_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "The Member State of Identification code for OSS registrations."
        "marked_collecting_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Marked Collecting Date"
          description: "The date when the registration was marked as collecting."
        "needs_mark_as_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Needs Mark As Collecting"
          description: "Indicates whether the registration needs to be marked as collecting."
          default: false
        "id":
          type: "string"
          title: "Id"
          description: "The unique identifier for the registration."
        "credits_total_available":
          type: "string"
          title: "Credits Total Available"
          default: "0.00"
        "password_encrypted":
          anyOf:
            - type: "string"
              format: "binary"
            - type: "null"
          title: "Password Encrypted"
          description: "Encrypted password for accessing the registration,\n        if applicable."
        "has_all_credentials":
          type: "boolean"
          title: "Has All Credentials"
          description: "Indicates if all required credentials are present."
          default: false
        "password":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password"
          description: "The decrypted password for accessing the registration."
        "password_metadata":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Metadata"
          description: "Security question or other password metadata."
        "registration_type": {"$ref": "#/components/schemas/RegistrationTypeEnum", "readOnly": true}
      type: "object"
      required:
        - "status"
        - "country_code"
        - "state_code"
        - "state_name"
        - "filing_frequency"
        - "filing_days"
        - "id"
        - "registration_type"
      title: "AdminFilingRegistrationPasswordRead"
    "ApiDeckServiceEnum":
      type: "string"
      enum:
        - "bigcommerce"
        - "quickbooks"
        - "deel"
        - "rippling"
        - "gusto"
        - "woocommerce"
        - "amazon-seller-central"
        - "etsy"
        - "walmart"
        - "magento"
        - "shopware"
        - "xero"
        - "netsuite"
      title: "ApiDeckServiceEnum"
    "ApiKeyRequest":
      properties:
        "expires_at_seconds":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Expires At Seconds"
        "metadata":
          anyOf:
            - additionalProperties: true
              type: "object"
            - type: "null"
          title: "Metadata"
      type: "object"
      title: "ApiKeyRequest"
    "ApideckConnectionWebhookSubscription":
      properties:
        "unified_api":
          type: "string"
          title: "Unified Api"
        "delivery_url":
          type: "string"
          maxLength: 2083
          minLength: 1
          format: "uri"
          title: "Delivery Url"
        "events":
          items: {"$ref": "#/components/schemas/ApideckWebhookEvent"}
          type: "array"
          title: "Events"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
      type: "object"
      required:
        - "unified_api"
        - "delivery_url"
        - "events"
      title: "ApideckConnectionWebhookSubscription"
    "ApideckWebhookEvent":
      type: "string"
      enum:
        - "*"
        - "hris.employee.created"
        - "hris.employee.updated"
        - "hris.employee.deleted"
        - "hris.employee.terminated"
        - "vault.connection.created"
        - "vault.connection.updated"
        - "vault.connection.disabled"
        - "vault.connection.deleted"
        - "vault.connection.callable"
        - "vault.connection.revoked"
        - "vault.connection.token_refresh.failed"
        - "accounting.customer.created"
        - "accounting.customer.updated"
        - "accounting.invoice.created"
        - "accounting.invoice.updated"
        - "accounting.invoice.deleted"
        - "accounting.invoice_item.created"
        - "accounting.invoice_item.updated"
        - "accounting.credit_note.created"
        - "accounting.credit_note.updated"
      title: "ApideckWebhookEvent"
      description: "Enumeration of possible HRIS webhook events.\n\nAttributes:\n    EMPLOYEE_CREATED: Triggered when a new employee record is created.\n    EMPLOYEE_UPDATED: Triggered when an existing employee record is updated.\n    EMPLOYEE_DELETED: Triggered when an employee record is deleted.\n    EMPLOYEE_TERMINATED: Triggered when an employee is terminated.\n    ACCOUNTING_INVOICE_CREATED: Triggered when a new invoice is created.\n    ACCOUNTING_INVOICE_UPDATED: Triggered when an existing invoice is updated.\n    ACCOUNTING_INVOICE_DELETED: Triggered when an invoice is deleted.\n    ACCOUNTING_INVOICE_ITEM_CREATED: Triggered when a new invoice item is created.\n    VAULT_CONNECTION_CREATED: Triggered when a new vault connection is created.\n    VAULT_CONNECTION_UPDATED:\n        Triggered when an existing vault connection is updated.\n    VAULT_CONNECTION_DISABLED: Triggered when a vault connection is disabled.\n    VAULT_CONNECTION_DELETED: Triggered when a vault connection is deleted.\n    VAULT_CONNECTION_CALLABLE:\n        Triggered when a vault connection becomes callable aka authorized.\n    VAULT_CONNECTION_REVOKED: Triggered when a vault connection is revoked.\n    VAULT_CONNECTION_TOKEN_REFRESH_FAILED:\n        Triggered when token refresh fails for a vault connection."
    "AppliedTo":
      type: "string"
      enum:
        - "TRANSACTION"
        - "TRANSACTION_ITEM"
      title: "AppliedTo"
    "Attachment":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "related_entity_id":
          type: "string"
          title: "Related Entity Id"
          description: "The unique identifier of the exemption associated\n        with the attachment."
        "related_entity_type": {"$ref": "#/components/schemas/RelatedEntityType", "description": "The type of entity associated with the attachment.\n        In this case, it will always be EXEMPTION,  REGISTRATION ,FILING,\n        FILING_PAYMENT."}
        "organization_id":
          type: "string"
          maxLength: 100
          title: "Organization Id"
        "file_name":
          type: "string"
          title: "File Name"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "file_size_bytes":
          type: "integer"
          title: "File Size Bytes"
        "file_location":
          type: "string"
          title: "File Location"
        "file_location_type": {"$ref": "#/components/schemas/AttachmentLocationType"}
      type: "object"
      required:
        - "related_entity_id"
        - "related_entity_type"
        - "organization_id"
        - "file_name"
        - "mime_type"
        - "file_size_bytes"
        - "file_location"
        - "file_location_type"
      title: "Attachment"
    "AttachmentLocationType":
      type: "string"
      enum:
        - "S3"
        - "LOCAL"
      title: "AttachmentLocationType"
    "AttachmentRead":
      properties:
        "related_entity_id":
          type: "string"
          title: "Related Entity Id"
          description: "The unique identifier of the exemption associated\n        with the attachment."
        "related_entity_type": {"$ref": "#/components/schemas/RelatedEntityType", "description": "The type of entity associated with the attachment.\n        In this case, it will always be EXEMPTION,  REGISTRATION ,FILING,\n        FILING_PAYMENT."}
        "id":
          type: "string"
          title: "Id"
          description: "The unique identifier of the uploaded attachment (attachment ID)."
      type: "object"
      required:
        - "related_entity_id"
        - "related_entity_type"
        - "id"
      title: "AttachmentRead"
    "AustraliaRule":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum", "default": "AU"}
        "state":
          type: "string"
          title: "State"
          default: ""
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "tax_rate":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Rate"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
      title: "AustraliaRule"
    "BankAccountTypeEnum":
      type: "string"
      enum:
        - "CHECKING"
        - "SAVINGS"
      title: "BankAccountTypeEnum"
    "BankDetailsCreateUpdate":
      properties:
        "bank_name":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Bank Name"
        "account_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Account Number"
        "account_type":
          anyOf:
            - {"$ref": "#/components/schemas/BankAccountTypeEnum"}
            - type: "null"
        "account_holder_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Account Holder Name"
        "routing_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Routing Number"
      type: "object"
      required:
        - "bank_name"
        - "account_number"
        - "account_type"
        - "account_holder_name"
        - "routing_number"
      title: "BankDetailsCreateUpdate"
    "BankDetailsRead":
      properties:
        "bank_name":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Bank Name"
        "account_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Account Number"
        "account_type":
          anyOf:
            - {"$ref": "#/components/schemas/BankAccountTypeEnum"}
            - type: "null"
        "account_holder_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Account Holder Name"
        "routing_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Routing Number"
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "bank_name"
        - "account_number"
        - "account_type"
        - "account_holder_name"
        - "routing_number"
        - "id"
      title: "BankDetailsRead"
    "BatchMessage":
      properties:
        "message":
          type: "string"
          title: "Message"
      type: "object"
      required:
        - "message"
      title: "BatchMessage"
    "BatchStages":
      type: "string"
      enum:
        - "CONNECTION_SYNC"
        - "PRODUCT"
        - "TAX"
        - "NEXUS"
        - "FILING"
        - "REGISTRATION"
        - "TRANSACTION_FILING"
        - "ADDRESS_VERIFICATION"
        - "CONDITIONAL_EXECUTION"
        - "PREEMPTIVE_CHECKS"
        - "DETERMINE_TAX_EXEMPTION"
        - "DETERMINE_TAX_ITEMS"
        - "DETERMINE_EXEMPTION_STATUS"
        - "CALCULATE_TAX_LIABILITY"
        - "DETERMINE_OSS_SCHEME"
        - "RUN_COMPLIANCE_BATCH"
      title: "BatchStages"
      description: "The current stages of the main batch run - in order"
    "BigCommerceAddress":
      properties:
        "line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line1"
        "line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line2"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
        "region_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Region Name"
        "region_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Region Code"
        "country_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country Name"
        "country_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country Code"
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "type"
      title: "BigCommerceAddress"
    "BigCommerceCustomer":
      properties:
        "customer_id":
          type: "string"
          title: "Customer Id"
        "customer_group_id":
          type: "string"
          title: "Customer Group Id"
        "taxability_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Taxability Code"
      type: "object"
      required:
        - "customer_id"
        - "customer_group_id"
      title: "BigCommerceCustomer"
    "BigCommerceTaxEstimationRequest":
      properties:
        "id":
          type: "string"
          title: "Id"
        "currency_code":
          type: "string"
          title: "Currency Code"
        "customer": {"$ref": "#/components/schemas/BigCommerceCustomer"}
        "transaction_date":
          type: "string"
          title: "Transaction Date"
        "documents":
          items: {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__Document"}
          type: "array"
          title: "Documents"
      type: "object"
      required:
        - "id"
        - "currency_code"
        - "customer"
        - "transaction_date"
        - "documents"
      title: "BigCommerceTaxEstimationRequest"
    "BigCommerceTaxEstimationResponse":
      properties:
        "documents":
          items: {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__DocumentResponse"}
          type: "array"
          title: "Documents"
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "documents"
        - "id"
      title: "BigCommerceTaxEstimationResponse"
    "BigcommerceConnectRequest":
      properties:
        "store_hash":
          type: "string"
          title: "Store Hash"
        "api_key":
          type: "string"
          title: "Api Key"
      type: "object"
      required:
        - "store_hash"
        - "api_key"
      title: "BigcommerceConnectRequest"
    "BigcommerceDeactivateRequest":
      properties:
        "store_hash":
          type: "string"
          title: "Store Hash"
      type: "object"
      required:
        - "store_hash"
      title: "BigcommerceDeactivateRequest"
    "BigcommerceTaxCalculation":
      properties:
        "store_hash":
          type: "string"
          title: "Store Hash"
      type: "object"
      required:
        - "store_hash"
      title: "BigcommerceTaxCalculation"
    "BillingFrequencyEnum":
      type: "string"
      enum:
        - "yearly"
        - "monthly"
      title: "BillingFrequencyEnum"
    "BillingMatrix":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "used_states":
          type: "integer"
          title: "Used States"
          default: 0
        "used_tax_questions":
          type: "integer"
          title: "Used Tax Questions"
          default: 0
        "organization_id":
          type: "string"
          maxLength: 100
          title: "Organization Id"
      type: "object"
      title: "BillingMatrix"
    "BillingPlanEnum":
      type: "string"
      enum:
        - "FREE"
        - "GROWTH"
        - "PREMIUM"
      title: "BillingPlanEnum"
    "Body_activate_apideck_connection_v1_connections_apideck__connection_id__activate_put":
      properties:
        "shop_id":
          type: "string"
          title: "Shop Id"
          description: "Store/Company identifier (realm_id for QuickBooks, shop_id for Shopware, etc.)"
      type: "object"
      required:
        - "shop_id"
      title: "Body_activate_apideck_connection_v1_connections_apideck__connection_id__activate_put"
    "Body_bulk_approve_filings_v1_filings_bulk_approve_put":
      properties:
        "filing_ids":
          items:
            type: "string"
          type: "array"
          uniqueItems: true
          title: "Filing Ids"
      type: "object"
      required:
        - "filing_ids"
      title: "Body_bulk_approve_filings_v1_filings_bulk_approve_put"
    "Body_bulk_download_filing_reports_v1_filings_reports_bulk_download_post":
      properties:
        "filing_ids":
          items:
            type: "string"
          type: "array"
          title: "Filing Ids"
      type: "object"
      required:
        - "filing_ids"
      title: "Body_bulk_download_filing_reports_v1_filings_reports_bulk_download_post"
    "Body_internal_import_v1_import_internal_upload_post":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
        "user_id":
          type: "string"
          title: "User Id"
        "source": {"$ref": "#/components/schemas/SourceEnum"}
        "import_id":
          type: "string"
          title: "Import Id"
        "import_file_id":
          type: "string"
          title: "Import File Id"
      type: "object"
      required:
        - "file"
        - "user_id"
        - "source"
      title: "Body_internal_import_v1_import_internal_upload_post"
    "Body_manual_internal_import_v1_import_internal_manual_upload_post":
      properties:
        "files":
          items:
            type: "string"
            format: "binary"
          type: "array"
          title: "Files"
      type: "object"
      required:
        - "files"
      title: "Body_manual_internal_import_v1_import_internal_manual_upload_post"
    "Body_upload_attachment_v1_attachments_post":
      properties:
        "related_entity_id":
          type: "string"
          title: "Related Entity Id"
        "related_entity_type":
          type: "string"
          title: "Related Entity Type"
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      required:
        - "related_entity_id"
        - "related_entity_type"
        - "file"
      title: "Body_upload_attachment_v1_attachments_post"
    "Body_upload_exemption_certificate_v1_exemptions__exemption_id__attachments_post":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
          description: "The file to be uploaded. Supported format: PDF. Max size: 10 MB."
      type: "object"
      required:
        - "file"
      title: "Body_upload_exemption_certificate_v1_exemptions__exemption_id__attachments_post"
    "Body_upload_filing_attachment_for_admin_panel_v1_admin_filings__filing_id__attachments_post":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      required:
        - "file"
      title: "Body_upload_filing_attachment_for_admin_panel_v1_admin_filings__filing_id__attachments_post"
    "Body_upload_filing_attachment_v1_filings__filing_id__attachments_post":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      required:
        - "file"
      title: "Body_upload_filing_attachment_v1_filings__filing_id__attachments_post"
    "Body_upload_registration_attachment_v1_registrations__registration_id__attachments_post":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      required:
        - "file"
      title: "Body_upload_registration_attachment_v1_registrations__registration_id__attachments_post"
    "BulkApproveUpdate":
      properties:
        "id":
          type: "string"
          title: "Id"
          description: "Unique identifier of the product."
        "product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "string"
          title: "Product Category"
          description: "The high-level category of the product."
        "product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "string"
          title: "Product Subcategory"
          description: "The subcategory of the product."
      type: "object"
      required:
        - "id"
        - "product_category"
        - "product_subcategory"
      title: "BulkApproveUpdate"
    "BulkApproveUpdateRequest":
      properties:
        "products":
          items: {"$ref": "#/components/schemas/BulkApproveUpdate"}
          type: "array"
          title: "Products"
      type: "object"
      required:
        - "products"
      title: "BulkApproveUpdateRequest"
    "CanadaRule":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum", "default": "CA"}
        "state":
          type: "string"
          title: "State"
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "tax_rates":
          items: {"$ref": "#/components/schemas/TaxRate"}
          type: "array"
          title: "Tax Rates"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
        - "state"
        - "tax_rates"
      title: "CanadaRule"
    "Card":
      properties:
        "status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Status"
        "gateway":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Gateway"
        "gateway_account_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Gateway Account Id"
        "iin":
          anyOf:
            - type: "string"
            - type: "integer"
          title: "Iin"
        "last4":
          anyOf:
            - type: "string"
            - type: "integer"
          title: "Last4"
        "card_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Card Type"
        "funding_type":
          type: "string"
          title: "Funding Type"
        "expiry_month":
          type: "integer"
          title: "Expiry Month"
        "expiry_year":
          type: "integer"
          title: "Expiry Year"
        "created_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Created At"
        "updated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Updated At"
        "ip_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Ip Address"
        "resource_version":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Resource Version"
        "object":
          type: "string"
          title: "Object"
        "masked_number":
          type: "string"
          title: "Masked Number"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
        "payment_source_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Payment Source Id"
        "brand":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Brand"
      type: "object"
      required:
        - "iin"
        - "last4"
        - "funding_type"
        - "expiry_month"
        - "expiry_year"
        - "object"
        - "masked_number"
      title: "Card"
    "ChangeRegimeStatusEnum":
      type: "string"
      enum:
        - "REQUESTED"
        - "APPROVED"
        - "DONE"
        - "ACKNOWLEDGED"
      title: "ChangeRegimeStatusEnum"
    "Channel":
      type: "string"
      enum:
        - "web"
        - "app_store"
        - "play_store"
      title: "Channel"
    "ChargebeeAddress":
      properties:
        "line1":
          anyOf:
            - type: "string"
              maxLength: 180
            - type: "null"
          title: "Line1"
          description: "First line of the street address"
        "line2":
          anyOf:
            - type: "string"
              maxLength: 150
            - type: "null"
          title: "Line2"
          description: "Second line of the street address"
        "line3":
          anyOf:
            - type: "string"
              maxLength: 150
            - type: "null"
          title: "Line3"
          description: "Third line of the street address"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "The city of the address"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "The state of the address following the ISO 3166-2 state/province code without the country prefix."
        "postalCode":
          anyOf:
            - type: "string"
              maxLength: 20
            - type: "null"
          title: "Postalcode"
          description: "Postal Code / Zip Code of the address."
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
          description: "The country of the address following the ISO 3166-1 alpha-2 standard."
      type: "object"
      title: "ChargebeeAddress"
    "ChargebeeAddressTaxabilityResponse":
      properties:
        "isTaxable":
          type: "boolean"
          title: "Istaxable"
      type: "object"
      required:
        - "isTaxable"
      title: "ChargebeeAddressTaxabilityResponse"
    "ChargebeeAddressValidationRequest":
      properties:
        "address":
          anyOf:
            - {"$ref": "#/components/schemas/ChargebeeAddress"}
            - type: "null"
      type: "object"
      title: "ChargebeeAddressValidationRequest"
    "ChargebeeAddressValidationResponse":
      properties:
        "status": {"$ref": "#/components/schemas/ChargebeeStatusEnum"}
      type: "object"
      required:
        - "status"
      title: "ChargebeeAddressValidationResponse"
    "ChargebeeBillingAddress":
      properties:
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
        "company":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company"
        "line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line1"
        "line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line2"
        "line3":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line3"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
        "zip":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Zip"
        "validation_status":
          anyOf:
            - {"$ref": "#/components/schemas/ValidationStatus"}
            - type: "null"
      type: "object"
      title: "ChargebeeBillingAddress"
    "ChargebeeCreateUpdate":
      properties:
        "url":
          type: "string"
          title: "Url"
        "api_key":
          type: "string"
          title: "Api Key"
      type: "object"
      required:
        - "url"
        - "api_key"
      title: "ChargebeeCreateUpdate"
    "ChargebeeCredentialValidationResponse":
      properties:
        "status": {"$ref": "#/components/schemas/ChargebeeStatusEnum"}
      type: "object"
      required:
        - "status"
      title: "ChargebeeCredentialValidationResponse"
    "ChargebeeCustomer-Output":
      properties:
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
          description: "The name of the Customer in Chargebee."
        "customerCode":
          type: "string"
          title: "Customercode"
          description: "The unique identifier for the Customer in Chargebee."
        "address": {"$ref": "#/components/schemas/ChargebeeAddress", "description": "Represents the address used for validation."}
        "taxRegistrationNumber":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Taxregistrationnumber"
          description: "The tax registration number of a business in a country. For example, this is the GSTIN for India or the VAT number for EU or Australia."
        "taxIdentifiers":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaxIdentifier"}
              type: "array"
            - type: "null"
          title: "Taxidentifiers"
          description: "It represents the information related to the customer's tax identifiers. This includes details such as exemption status etc."
      type: "object"
      required:
        - "customerCode"
        - "address"
      title: "ChargebeeCustomer"
      description: "The details of the Customer"
    "ChargebeeInvoiceRequest":
      properties:
        "invoiceCode":
          type: "string"
          title: "Invoicecode"
          description: "The unique identifier of the invoice in Chargebee."
        "documentDateTime":
          type: "string"
          format: "date-time"
          title: "Documentdatetime"
          description: "The date and time at which the invoice was generated in Chargebee"
        "currency":
          type: "string"
          maxLength: 3
          minLength: 3
          title: "Currency"
          description: "The currency in the ISO-4217 format."
        "seller": {"$ref": "#/components/schemas/Seller", "description": "The details of the seller involved in the transactionincluding company code and address."}
        "customer": {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__ChargebeeCustomer", "description": "The details of the Customer."}
        "subtotal":
          type: "number"
          title: "Subtotal"
          description: "The amount after discounts. This is the sum of all lineItems.subtotal"
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The part of the subtotal that is exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The total discount applied. This is the sum of all lineItems.discount"
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of the subtotal that is taxable."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The total tax payable. This is the sum of all lineItems.taxAmount"
        "total":
          type: "number"
          title: "Total"
          description: "The total after discounts and taxes. This is the same as subtotal if it is tax inclusive; otherwise it is subtotal + taxAmount. total can also be expressed as exemptAmount + taxableAmount + taxAmount."
        "lineItems":
          items: {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__LineItem-Input"}
          type: "array"
          title: "Lineitems"
          description: "The details of a line item."
      type: "object"
      required:
        - "invoiceCode"
        - "documentDateTime"
        - "currency"
        - "seller"
        - "customer"
        - "subtotal"
        - "exemptAmount"
        - "discountAmount"
        - "taxableAmount"
        - "taxAmount"
        - "total"
        - "lineItems"
      title: "ChargebeeInvoiceRequest"
      description: "Chargebee invoice request model"
    "ChargebeeInvoiceResponse":
      properties:
        "invoiceCode":
          type: "string"
          title: "Invoicecode"
          description: "The unique identifier of the invoice in Chargebee."
        "documentDateTime":
          type: "string"
          format: "date-time"
          title: "Documentdatetime"
          description: "The date and time at which the invoice was generated in Chargebee"
        "currency":
          type: "string"
          maxLength: 3
          minLength: 3
          title: "Currency"
          description: "The currency in the ISO-4217 format."
        "seller": {"$ref": "#/components/schemas/Seller", "description": "The details of the seller involved in the transactionincluding company code and address."}
        "customer": {"$ref": "#/components/schemas/ChargebeeCustomer-Output", "description": "The details of the Customer."}
        "subtotal":
          type: "number"
          title: "Subtotal"
          description: "The amount after discounts. This is the sum of all lineItems.subtotal"
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The part of the subtotal that is exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The total discount applied. This is the sum of all lineItems.discount"
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of the subtotal that is taxable."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The total tax payable. This is the sum of all lineItems.taxAmount"
        "total":
          type: "number"
          title: "Total"
          description: "The total after discounts and taxes. This is the same as subtotal if it is tax inclusive; otherwise it is subtotal + taxAmount. total can also be expressed as exemptAmount + taxableAmount + taxAmount."
        "lineItems":
          items: {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__LineItem-Output"}
          type: "array"
          title: "Lineitems"
          description: "The details of a line item."
        "invoiceId":
          type: "string"
          title: "Invoiceid"
          description: "The unique identifier of the invoice in the Tax Service Adapteror the Tax Service Provider."
        "status": {"$ref": "#/components/schemas/DocumentStatus", "description": "Status of the invoice document."}
      type: "object"
      required:
        - "invoiceCode"
        - "documentDateTime"
        - "currency"
        - "seller"
        - "customer"
        - "subtotal"
        - "exemptAmount"
        - "discountAmount"
        - "taxableAmount"
        - "taxAmount"
        - "total"
        - "lineItems"
        - "invoiceId"
        - "status"
      title: "ChargebeeInvoiceResponse"
      description: "Chargebee invoice response model"
    "ChargebeeRequestValidationEnum":
      type: "string"
      enum:
        - "INVALID_DATA"
        - "MISSING_REQUIRED_DATA"
      title: "ChargebeeRequestValidationEnum"
    "ChargebeeStatusEnum":
      type: "string"
      enum:
        - "VALID"
        - "INVALID"
      title: "ChargebeeStatusEnum"
    "ChargebeeSubscriptionStatusEnum":
      type: "string"
      enum:
        - "FUTURE"
        - "IN_TRIAL"
        - "ACTIVE"
        - "NON_RENEWING"
        - "PAUSED"
        - "CANCELLED"
        - "TRANSFERRED"
      title: "ChargebeeSubscriptionStatusEnum"
    "ChargebeeTaxEstimateRequest":
      properties:
        "seller": {"$ref": "#/components/schemas/Seller", "description": "The details of the seller involved in the transactionincluding company code and address."}
        "customer": {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__ChargebeeCustomer", "description": "The details of the Customer."}
        "estimateDateTime":
          type: "string"
          format: "date-time"
          title: "Estimatedatetime"
          description: "The time as of which the tax estimation is to be calculated. This can be a value in the past."
        "currency":
          type: "string"
          maxLength: 3
          minLength: 3
          title: "Currency"
          description: "The currency in the ISO-4217 format."
        "lineItems":
          items: {"$ref": "#/components/schemas/TaxEstimateLineItemBase"}
          type: "array"
          title: "Lineitems"
          description: "Contains the details of each line item in the tax estimation request."
      type: "object"
      required:
        - "seller"
        - "customer"
        - "estimateDateTime"
        - "currency"
        - "lineItems"
      title: "ChargebeeTaxEstimateRequest"
      description: "Chargebee tax estimate model"
    "ChargebeeTaxEstimationResponse":
      properties:
        "seller": {"$ref": "#/components/schemas/Seller", "description": "The details of the seller involved in the transactionincluding company code and address."}
        "customer": {"$ref": "#/components/schemas/ChargebeeCustomer-Output", "description": "The details of the Customer."}
        "estimateDateTime":
          type: "string"
          format: "date-time"
          title: "Estimatedatetime"
          description: "The time as of which the tax estimation is to be calculated. This can be a value in the past."
        "currency":
          type: "string"
          maxLength: 3
          minLength: 3
          title: "Currency"
          description: "The currency in the ISO-4217 format."
        "subtotal":
          type: "number"
          title: "Subtotal"
          description: "The amount after discounts. This is the sum of all lineItems.subtotal."
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The part of the subtotal that is exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The total discount applied. This is the sum of all lineItems.discount."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of the subtotal that is taxable."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The total tax payable. This is the sum of all lineItems.taxAmount."
        "total":
          type: "number"
          title: "Total"
          description: "The total after discounts and taxes. This is the same as subtotal if it is tax inclusive; otherwise it is subtotal + taxAmount. total can also be expressed as exemptAmount + taxableAmount + taxAmount."
        "lineItems":
          items: {"$ref": "#/components/schemas/TaxEstimateLineItem"}
          type: "array"
          title: "Lineitems"
          description: "List of line item details for the tax estimation response."
      type: "object"
      required:
        - "seller"
        - "customer"
        - "estimateDateTime"
        - "currency"
        - "subtotal"
        - "exemptAmount"
        - "discountAmount"
        - "taxableAmount"
        - "taxAmount"
        - "total"
        - "lineItems"
      title: "ChargebeeTaxEstimationResponse"
      description: "The response sent by the Tax Service Adapter to Chargebee\nfor a tax estimation request."
    "ChargebeeTaxabilityAddressRequest":
      properties:
        "address":
          anyOf:
            - {"$ref": "#/components/schemas/ChargebeeAddress"}
            - type: "null"
      type: "object"
      title: "ChargebeeTaxabilityAddressRequest"
    "ChargebeeUnexpectedError":
      properties:
        "description":
          type: "string"
          title: "Description"
          default: "Unexpected error while processing request."
      type: "object"
      title: "ChargebeeUnexpectedError"
    "ChargebeeValidationError":
      properties:
        "code": {"$ref": "#/components/schemas/ChargebeeRequestValidationEnum"}
        "message":
          type: "string"
          title: "Message"
        "entity":
          type: "string"
          title: "Entity"
        "entityField":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Entityfield"
        "helpUrl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Helpurl"
      type: "object"
      required:
        - "code"
        - "message"
        - "entity"
      title: "ChargebeeValidationError"
    "CheckoutNewItem":
      properties:
        "billing_plan": {"$ref": "#/components/schemas/BillingPlanEnum"}
      type: "object"
      required:
        - "billing_plan"
      title: "CheckoutNewItem"
    "ConnectionRead":
      properties:
        "id":
          type: "string"
          title: "Id"
        "store_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Store Name"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
        "last_synced":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Synced"
        "initial_import_complete":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Initial Import Complete"
          default: false
        "source": {"$ref": "#/components/schemas/SourceEnum"}
        "external_id":
          type: "string"
          title: "External Id"
        "url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Url"
        "status": {"$ref": "#/components/schemas/ConnectionStatusEnum"}
        "records_synced":
          type: "integer"
          title: "Records Synced"
        "tax_calculation_ready":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Tax Calculation Ready"
          default: false
        "tax_calculation_enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Tax Calculation Enabled"
          default: false
        "needs_update":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Needs Update"
          default: false
        "default_country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "marketplace_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Marketplace Id"
      type: "object"
      required:
        - "id"
        - "updated_at"
        - "created_at"
        - "last_synced"
        - "source"
        - "external_id"
        - "status"
        - "records_synced"
      title: "ConnectionRead"
    "ConnectionStatusEnum":
      type: "string"
      enum:
        - "ACTIVE"
        - "INACTIVE"
        - "ARCHIVED"
        - "CONNECTION_ERROR"
      title: "ConnectionStatusEnum"
    "ConnectionUpdate":
      properties:
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/ConnectionStatusEnum"}
            - type: "null"
        "default_country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "shop_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Shop Id"
      type: "object"
      title: "ConnectionUpdate"
    "Content":
      properties:
        "item":
          anyOf:
            - {"$ref": "#/components/schemas/Item"}
            - type: "null"
        "item_price":
          anyOf:
            - {"$ref": "#/components/schemas/ItemPrice"}
            - type: "null"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__chargebee__models__customer__ChargebeeCustomer"}
            - type: "null"
      type: "object"
      title: "Content"
    "CountryCodeEnum":
      type: "string"
      enum:
        - "AF"
        - "AX"
        - "AL"
        - "DZ"
        - "AS"
        - "AD"
        - "AO"
        - "AI"
        - "AQ"
        - "AG"
        - "AR"
        - "AM"
        - "AW"
        - "AU"
        - "AT"
        - "AZ"
        - "BS"
        - "BH"
        - "BD"
        - "BB"
        - "BY"
        - "BE"
        - "BZ"
        - "BJ"
        - "BM"
        - "BT"
        - "BO"
        - "BQ"
        - "BA"
        - "BW"
        - "BV"
        - "BR"
        - "IO"
        - "BN"
        - "BG"
        - "BF"
        - "BI"
        - "CV"
        - "KH"
        - "CM"
        - "CA"
        - "KY"
        - "CF"
        - "TD"
        - "CL"
        - "CN"
        - "CX"
        - "CC"
        - "CO"
        - "KM"
        - "CG"
        - "CD"
        - "CK"
        - "CR"
        - "HR"
        - "CU"
        - "CW"
        - "CY"
        - "CZ"
        - "DK"
        - "DJ"
        - "DM"
        - "DO"
        - "EC"
        - "EG"
        - "SV"
        - "GQ"
        - "ER"
        - "EE"
        - "SZ"
        - "ET"
        - "FK"
        - "FO"
        - "FJ"
        - "FI"
        - "FR"
        - "GF"
        - "PF"
        - "TF"
        - "GA"
        - "GM"
        - "GE"
        - "DE"
        - "GH"
        - "GI"
        - "GR"
        - "GL"
        - "GD"
        - "GP"
        - "GU"
        - "GT"
        - "GG"
        - "GN"
        - "GW"
        - "GY"
        - "HT"
        - "HM"
        - "VA"
        - "HN"
        - "HK"
        - "HU"
        - "IS"
        - "IN"
        - "ID"
        - "IR"
        - "IQ"
        - "IE"
        - "IM"
        - "IL"
        - "IT"
        - "JM"
        - "JP"
        - "JE"
        - "JO"
        - "KZ"
        - "KE"
        - "KI"
        - "KP"
        - "KR"
        - "KW"
        - "KG"
        - "LA"
        - "LV"
        - "LB"
        - "LS"
        - "LR"
        - "LY"
        - "LI"
        - "LT"
        - "LU"
        - "MO"
        - "MG"
        - "MW"
        - "MY"
        - "MV"
        - "ML"
        - "MT"
        - "MH"
        - "MQ"
        - "MR"
        - "MU"
        - "YT"
        - "MX"
        - "FM"
        - "MD"
        - "MC"
        - "MN"
        - "ME"
        - "MS"
        - "MA"
        - "MZ"
        - "MM"
        - "NA"
        - "NR"
        - "NP"
        - "NL"
        - "NC"
        - "NZ"
        - "NI"
        - "NE"
        - "NG"
        - "NU"
        - "NF"
        - "MK"
        - "MP"
        - "NO"
        - "OM"
        - "PK"
        - "PW"
        - "PS"
        - "PA"
        - "PG"
        - "PY"
        - "PE"
        - "PH"
        - "PN"
        - "PL"
        - "PT"
        - "PR"
        - "QA"
        - "RE"
        - "RO"
        - "RU"
        - "RW"
        - "BL"
        - "SH"
        - "KN"
        - "LC"
        - "MF"
        - "PM"
        - "VC"
        - "WS"
        - "SM"
        - "ST"
        - "SA"
        - "SN"
        - "RS"
        - "SC"
        - "SL"
        - "SG"
        - "SX"
        - "SK"
        - "SI"
        - "SB"
        - "SO"
        - "ZA"
        - "GS"
        - "SS"
        - "ES"
        - "LK"
        - "SD"
        - "SR"
        - "SJ"
        - "SE"
        - "CH"
        - "SY"
        - "TW"
        - "TJ"
        - "TZ"
        - "TH"
        - "TL"
        - "TG"
        - "TK"
        - "TO"
        - "TT"
        - "TN"
        - "TR"
        - "TM"
        - "TC"
        - "TV"
        - "UG"
        - "UA"
        - "AE"
        - "GB"
        - "US"
        - "UM"
        - "UY"
        - "UZ"
        - "VU"
        - "VE"
        - "VN"
        - "VG"
        - "VI"
        - "WF"
        - "EH"
        - "YE"
        - "ZM"
        - "ZW"
        - "XK"
        - "ZZ_EU"
      title: "CountryCodeEnum"
    "CreditCreate":
      properties:
        "type": {"$ref": "#/components/schemas/CreditType"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
          default: "0.00"
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
        "related_filing_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Related Filing Id"
        "registration_id":
          type: "string"
          title: "Registration Id"
        "oss_registration_country_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Oss Registration Country Id"
      type: "object"
      required:
        - "type"
        - "start_date"
        - "registration_id"
      title: "CreditCreate"
    "CreditNote":
      properties:
        "id":
          type: "string"
          title: "Id"
        "total":
          type: "string"
          title: "Total"
          default: "0.00"
        "status":
          type: "string"
          title: "Status"
      type: "object"
      required:
        - "id"
        - "status"
      title: "CreditNote"
    "CreditNoteCreate":
      properties:
        "external_id":
          type: "string"
          title: "External Id"
          description: "Unique identifier for the credit note in the external system."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Date when the credit note was issued or created."
        "status":
          type: "string"
          enum:
            - "PENDING"
            - "CANCELLED"
            - "COMMITTED"
          title: "Status"
          description: "Current state of the credit note in its lifecycle."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Brief explanation or reason for issuing the credit note."
        "total_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Amount"
          description: "Total monetary value of the credit note, including all items and taxes."
          default: "0.00"
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates whether this credit note is associated with a marketplace transaction."
          default: false
        "tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Tax Amount Imported"
          description: "Pre-calculated total tax amount for the entire credit note, if provided by the external system."
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Tax Rate Imported"
          description: "Pre-calculated overall tax rate for the credit note, if provided by the external system."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Taxable Amount"
          description: "Total portion of the credit note amount subject to taxation."
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "description": "The currency used for all amounts in this credit note."}
        "addresses":
          anyOf:
            - items: {"$ref": "#/components/schemas/TransactionAddressBuilder"}
              type: "array"
            - type: "null"
          title: "Addresses"
          description: "A list of TransactionAddressBuilder objects or None if no addresses are provided. This field represents the addresses associated with the transaction."
        "transaction_items":
          items: {"$ref": "#/components/schemas/CreditNoteItemCreateUpdate"}
          type: "array"
          title: "Transaction Items"
          description: "Detailed list of individual items included in this credit note."
      type: "object"
      required:
        - "external_id"
        - "date"
        - "status"
        - "currency"
        - "transaction_items"
      title: "CreditNoteCreate"
    "CreditNoteItemCreateUpdate":
      properties:
        "external_id":
          type: "string"
          title: "External Id"
          description: "Unique identifier for the credit note item in the external system."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Date when the credit note item was issued or created."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Brief explanation or details about the credit note item."
        "external_product_id":
          type: "string"
          title: "External Product Id"
          description: "Unique identifier for the associated product in the external system."
        "quantity":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Quantity"
          description: "Number of units or amount of the product being credited."
          default: "1.0"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
          description: "Total monetary value of the credit note item before taxes."
          default: "0.00"
        "tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Tax Amount Imported"
          description: "Pre-calculated tax amount for the item, if provided by the external system."
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Tax Rate Imported"
          description: "Pre-calculated tax rate for the item, if provided by the external system."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Taxable Amount"
          description: "Portion of the item amount subject to taxation."
        "tax_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptionEnum"}
            - type: "null"
          description: "Specific tax exemption status applied to this item, if any."
        "tax_items":
          items: {"$ref": "#/components/schemas/TaxItemBuilder"}
          type: "array"
          title: "Tax Items"
          description: "Detailed breakdown of individual tax components applied to this item."
          default: []
      type: "object"
      required:
        - "external_id"
        - "date"
        - "external_product_id"
      title: "CreditNoteItemCreateUpdate"
    "CreditNoteRequest":
      properties:
        "creditNoteCode":
          type: "string"
          maxLength: 50
          title: "Creditnotecode"
          description: "The unique identifier of the credit note in Chargebee."
        "invoiceCode":
          type: "string"
          maxLength: 50
          title: "Invoicecode"
          description: "The unique identifier of the invoice in Chargebee to which this credit note belongs."
        "creditNoteType": {"$ref": "#/components/schemas/CreditNoteType", "description": "Whether the credit note was created for the full amount on the invoice or only for a part of the invoice amount."}
        "documentDateTime":
          type: "string"
          format: "date-time"
          title: "Documentdatetime"
          description: "The date and time at which the credit note was created in Chargebee. For example, if the value is 2022-10-28T15:36:28.129+05:30, then the timestamp represents October 28, 2022, at 15:36:28.129, with an offset of +05:30. This means that the time represented is 5 hours and 30 minutes ahead of UTC/GMT. In the case of a merchant site located in UTC, these datatypes would send a timestamp in the format 2022-11-11T15:40:44.65Z. This timestamp represents November 11, 2022, at 15:40:44.65, with the 'Z' indicating that the time is in UTC."
        "currency":
          type: "string"
          maxLength: 3
          minLength: 3
          title: "Currency"
          description: "The currency in the ISO-4217 format."
        "seller": {"$ref": "#/components/schemas/Seller", "description": "The details of the seller involved in the transaction including company code and address."}
        "customer": {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__ChargebeeCustomer", "description": "The details of the Customer."}
        "total":
          type: "number"
          title: "Total"
          description: "The total amount of the credit note. total can be expressed as exemptAmount + taxableAmount + taxAmount."
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The amount exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The total discount applied. This is the sum of all lineItems.discount."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The amount upon which the tax is calculated."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The total tax payable. This is the sum of all lineItems.taxAmount."
        "roundingAmount":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Roundingamount"
          description: "The rounding amount added to the total amount to account for fractional correction."
        "lineItems":
          items: {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__LineItem-Input"}
          type: "array"
          title: "Lineitems"
          description: "The details of a line item."
          default: []
      type: "object"
      required:
        - "creditNoteCode"
        - "invoiceCode"
        - "creditNoteType"
        - "documentDateTime"
        - "currency"
        - "seller"
        - "customer"
        - "total"
        - "exemptAmount"
        - "discountAmount"
        - "taxableAmount"
        - "taxAmount"
      title: "CreditNoteRequest"
      description: "The details of a credit note sent to the Tax Service Adapter by Chargebee.\nA credit note is used to reduce the amount due on an invoice.\nIf the credit note is issued after payments have been made for the invoice, refunds\ncan be issued to the Customer."
    "CreditNoteResponse":
      properties:
        "creditNoteCode":
          type: "string"
          maxLength: 50
          title: "Creditnotecode"
          description: "The unique identifier of the credit note in Chargebee."
        "invoiceCode":
          type: "string"
          maxLength: 50
          title: "Invoicecode"
          description: "The unique identifier of the invoice in Chargebee to which this credit note belongs."
        "creditNoteType": {"$ref": "#/components/schemas/CreditNoteType", "description": "Whether the credit note was created for the full amount on the invoice or only for a part of the invoice amount."}
        "documentDateTime":
          type: "string"
          format: "date-time"
          title: "Documentdatetime"
          description: "The date and time at which the credit note was created in Chargebee. For example, if the value is 2022-10-28T15:36:28.129+05:30, then the timestamp represents October 28, 2022, at 15:36:28.129, with an offset of +05:30. This means that the time represented is 5 hours and 30 minutes ahead of UTC/GMT. In the case of a merchant site located in UTC, these datatypes would send a timestamp in the format 2022-11-11T15:40:44.65Z. This timestamp represents November 11, 2022, at 15:40:44.65, with the 'Z' indicating that the time is in UTC."
        "currency":
          type: "string"
          maxLength: 3
          minLength: 3
          title: "Currency"
          description: "The currency in the ISO-4217 format."
        "seller": {"$ref": "#/components/schemas/Seller", "description": "The details of the seller involved in the transaction including company code and address."}
        "customer": {"$ref": "#/components/schemas/ChargebeeCustomer-Output", "description": "The details of the Customer."}
        "total":
          type: "number"
          title: "Total"
          description: "The total amount of the credit note. total can be expressed as exemptAmount + taxableAmount + taxAmount."
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The amount exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The total discount applied. This is the sum of all lineItems.discount."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The amount upon which the tax is calculated."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The total tax payable. This is the sum of all lineItems.taxAmount."
        "roundingAmount":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Roundingamount"
          description: "The rounding amount added to the total amount to account for fractional correction."
        "lineItems":
          items: {"$ref": "#/components/schemas/backend__src__chargebee_adapter__models__invoice__LineItem-Output"}
          type: "array"
          title: "Lineitems"
          description: "The details of a line item."
          default: []
        "creditNoteId":
          type: "string"
          maxLength: 50
          title: "Creditnoteid"
          description: "The unique identifier of the credit note at the Tax Service Provider or Tax Service Adapter."
        "status": {"$ref": "#/components/schemas/DocumentStatus", "description": "Status of the invoice document."}
        "subtotal":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Subtotal"
          description: "The amount after discounts. This is the sum of all lineItems.subtotal."
      type: "object"
      required:
        - "creditNoteCode"
        - "invoiceCode"
        - "creditNoteType"
        - "documentDateTime"
        - "currency"
        - "seller"
        - "customer"
        - "total"
        - "exemptAmount"
        - "discountAmount"
        - "taxableAmount"
        - "taxAmount"
        - "creditNoteId"
        - "status"
      title: "CreditNoteResponse"
      description: "The details of a credit note returned by the Tax Service Adapter.\nA credit note is used to reduce the amount due on an invoice.\nIf the credit note is issued after payments have been made for the invoice, refunds\ncan be issued to the Customer."
    "CreditNoteType":
      type: "string"
      enum:
        - "FULL"
        - "PARTIAL"
      title: "CreditNoteType"
    "CreditRead":
      properties:
        "id":
          type: "string"
          title: "Id"
        "type": {"$ref": "#/components/schemas/CreditType"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "amount":
          type: "string"
          title: "Amount"
        "amount_consumed":
          type: "string"
          title: "Amount Consumed"
        "amount_remaining":
          type: "string"
          title: "Amount Remaining"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "registration_id":
          type: "string"
          title: "Registration Id"
        "oss_registration_country_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Oss Registration Country Id"
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
      type: "object"
      required:
        - "id"
        - "type"
        - "start_date"
        - "amount"
        - "amount_consumed"
        - "amount_remaining"
        - "organization_id"
        - "registration_id"
      title: "CreditRead"
    "CreditType":
      type: "string"
      enum:
        - "REFUND"
        - "OVERPAYMENT"
        - "ITC"
        - "IVT"
      title: "CreditType"
    "CurrencyEnum":
      type: "string"
      enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRU"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STN"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
      title: "CurrencyEnum"
    "Customer-Input":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "external_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "External Id"
          description: "A unique identifier for the customer."
        "status": {"$ref": "#/components/schemas/StatusEnum", "description": "Status of the customer (e.g., ACTIVE, INACTIVE).", "default": "ACTIVE"}
        "email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Email"
          description: "Email address of the customer."
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address status of the customer. Defaults to UNVERIFIED.", "default": "UNVERIFIED"}
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer information (e.g., BIGCOMMERCE, STRIPE, etc.)."
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
        "connection_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Connection Id"
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Additional enriched fields for the customer, if available."
        "organization_id":
          type: "string"
          maxLength: 100
          title: "Organization Id"
        "is_test_data":
          type: "boolean"
          title: "Is Test Data"
          default: false
      type: "object"
      required:
        - "organization_id"
      title: "Customer"
    "Customer-Output":
      properties:
        "id":
          type: "string"
          title: "Id"
        "email":
          type: "string"
          title: "Email"
        "auto_collection":
          type: "string"
          title: "Auto Collection"
        "net_term_days":
          type: "integer"
          title: "Net Term Days"
        "allow_direct_debit":
          type: "boolean"
          title: "Allow Direct Debit"
        "created_at":
          type: "integer"
          title: "Created At"
        "created_from_ip":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Created From Ip"
        "taxability":
          type: "string"
          title: "Taxability"
        "updated_at":
          type: "integer"
          title: "Updated At"
        "pii_cleared":
          type: "string"
          title: "Pii Cleared"
        "channel":
          type: "string"
          title: "Channel"
        "resource_version":
          type: "integer"
          title: "Resource Version"
        "deleted":
          type: "boolean"
          title: "Deleted"
        "object":
          type: "string"
          title: "Object"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__billing__models__Address"}
            - type: "null"
        "card_status":
          type: "string"
          title: "Card Status"
        "promotional_credits":
          type: "integer"
          title: "Promotional Credits"
        "refundable_credits":
          type: "integer"
          title: "Refundable Credits"
        "excess_payments":
          type: "integer"
          title: "Excess Payments"
        "unbilled_charges":
          type: "integer"
          title: "Unbilled Charges"
        "preferred_currency_code":
          type: "string"
          title: "Preferred Currency Code"
        "mrr":
          type: "integer"
          title: "Mrr"
        "primary_payment_source_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Primary Payment Source Id"
        "payment_method":
          anyOf:
            - {"$ref": "#/components/schemas/PaymentMethod"}
            - type: "null"
        "auto_close_invoices":
          type: "boolean"
          title: "Auto Close Invoices"
      type: "object"
      required:
        - "id"
        - "email"
        - "auto_collection"
        - "net_term_days"
        - "allow_direct_debit"
        - "created_at"
        - "taxability"
        - "updated_at"
        - "pii_cleared"
        - "channel"
        - "resource_version"
        - "deleted"
        - "object"
        - "card_status"
        - "promotional_credits"
        - "refundable_credits"
        - "excess_payments"
        - "unbilled_charges"
        - "preferred_currency_code"
        - "mrr"
        - "auto_close_invoices"
      title: "Customer"
    "CustomerBase":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "external_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "External Id"
          description: "A unique identifier for the customer."
        "status": {"$ref": "#/components/schemas/StatusEnum", "description": "Status of the customer (e.g., ACTIVE, INACTIVE).", "default": "ACTIVE"}
        "email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Email"
          description: "Email address of the customer."
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address status of the customer. Defaults to UNVERIFIED.", "default": "UNVERIFIED"}
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer information (e.g., BIGCOMMERCE, STRIPE, etc.)."
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Unique identifier of the connection related to the customer."
      type: "object"
      title: "CustomerBase"
    "CustomerBaseBase":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "external_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "External Id"
          description: "A unique identifier for the customer."
        "status": {"$ref": "#/components/schemas/StatusEnum", "description": "Status of the customer (e.g., ACTIVE, INACTIVE).", "default": "ACTIVE"}
        "email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Email"
          description: "Email address of the customer."
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address status of the customer. Defaults to UNVERIFIED.", "default": "UNVERIFIED"}
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer information (e.g., BIGCOMMERCE, STRIPE, etc.)."
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Unique identifier of the connection related to the customer."
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Additional enriched fields for the customer, if available."
        "organization_id":
          type: "string"
          maxLength: 100
          title: "Organization Id"
        "is_test_data":
          type: "boolean"
          title: "Is Test Data"
          default: false
      type: "object"
      required:
        - "organization_id"
      title: "CustomerBaseBase"
    "CustomerBasePublic":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "external_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "External Id"
          description: "A unique identifier for the customer."
        "status": {"$ref": "#/components/schemas/StatusEnum", "description": "Status of the customer (e.g., ACTIVE, INACTIVE).", "default": "ACTIVE"}
        "email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Email"
          description: "Email address of the customer."
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address status of the customer. Defaults to UNVERIFIED.", "default": "UNVERIFIED"}
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer information (e.g., BIGCOMMERCE, STRIPE, etc.)."
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Unique identifier of the connection related to the customer."
      type: "object"
      title: "CustomerBasePublic"
    "CustomerCreate":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Customer's phone number"
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External identifier associated with the customer."
        "status": {"$ref": "#/components/schemas/StatusEnum", "description": "Status of the customer.", "default": "ACTIVE"}
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
          description: "Customer's email address"
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer's record."
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Identifier for the connection source, if applicable."
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Status of address verification", "default": "UNVERIFIED"}
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
          description: "Registration number of the customer."
      type: "object"
      title: "CustomerCreate"
    "CustomerRead":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Customer's phone number"
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External identifier associated with the customer."
        "status": {"$ref": "#/components/schemas/StatusEnum", "description": "Status of the customer.", "default": "ACTIVE"}
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
          description: "Customer's email address"
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer's record."
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Identifier for the connection source, if applicable."
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Status of address verification", "default": "UNVERIFIED"}
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
          description: "Registration number of the customer."
        "id":
          type: "string"
          title: "Id"
          description: "Unique identifier for the customer required."
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Unique identifier for the organization associated with the customer. Required."
      type: "object"
      required:
        - "id"
        - "organization_id"
      title: "CustomerRead"
    "CustomerUpdate":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the customer."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
          description: "Name of the customer."
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/StatusEnum"}
            - type: "null"
          description: "Status of the customer."
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
          description: "Email address of the customer."
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          description: "Source of the customer's record"
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.", "default": "UNVERIFIED"}
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External identifier associated with the customer"
      type: "object"
      title: "CustomerUpdate"
    "DashboardOverviewChartType":
      type: "string"
      enum:
        - "transactions"
        - "filings"
      title: "DashboardOverviewChartType"
    "DashboardOverviewStatsData":
      properties:
        "total_sales":
          type: "number"
          title: "Total Sales"
        "total_transactions":
          type: "integer"
          title: "Total Transactions"
        "total_tax_amount_imported":
          type: "number"
          title: "Total Tax Amount Imported"
        "outstanding_total_liability":
          type: "number"
          title: "Outstanding Total Liability"
        "total_tax_remitted":
          type: "number"
          title: "Total Tax Remitted"
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
      type: "object"
      required:
        - "total_sales"
        - "total_transactions"
        - "total_tax_amount_imported"
        - "outstanding_total_liability"
        - "total_tax_remitted"
        - "currency"
      title: "DashboardOverviewStatsData"
    "DashboardOverviewTasksData":
      properties:
        "registrations_regime_to_change":
          type: "integer"
          title: "Registrations Regime To Change"
        "registrations_regime_to_acknowledge":
          type: "integer"
          title: "Registrations Regime To Acknowledge"
        "registrations_to_finish":
          type: "integer"
          title: "Registrations To Finish"
        "filings_to_approve":
          type: "integer"
          title: "Filings To Approve"
        "pending_product":
          type: "integer"
          title: "Pending Product"
        "invalid_addresses":
          type: "integer"
          title: "Invalid Addresses"
        "blank_addresses":
          type: "integer"
          title: "Blank Addresses"
        "needs_update_connections_count":
          type: "integer"
          title: "Needs Update Connections Count"
        "expired_exemptions_count":
          type: "integer"
          title: "Expired Exemptions Count"
        "needs_tax_collection_enable_connections_count":
          type: "integer"
          title: "Needs Tax Collection Enable Connections Count"
        "needs_mark_as_tax_collecting_count":
          type: "integer"
          title: "Needs Mark As Tax Collecting Count"
      type: "object"
      required:
        - "registrations_regime_to_change"
        - "registrations_regime_to_acknowledge"
        - "registrations_to_finish"
        - "filings_to_approve"
        - "pending_product"
        - "invalid_addresses"
        - "blank_addresses"
        - "needs_update_connections_count"
        - "expired_exemptions_count"
        - "needs_tax_collection_enable_connections_count"
        - "needs_mark_as_tax_collecting_count"
      title: "DashboardOverviewTasksData"
    "DiscountBuilder":
      properties:
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
        "applied_to": {"$ref": "#/components/schemas/AppliedTo"}
        "discount_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Discount Amount"
          default: "0.00"
      type: "object"
      required:
        - "applied_to"
      title: "DiscountBuilder"
    "DiscountComposition":
      properties:
        "id":
          type: "string"
          title: "Id"
        "quantity":
          type: "integer"
          title: "Quantity"
        "discount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Discount"
      type: "object"
      required:
        - "id"
        - "quantity"
        - "discount"
      title: "DiscountComposition"
    "DocumentStatus":
      type: "string"
      enum:
        - "PENDING"
        - "COMMITTED"
        - "VOIDED"
      title: "DocumentStatus"
    "EURule":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "state":
          type: "string"
          title: "State"
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "tax_rate":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Rate"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
        - "country"
        - "state"
      title: "EURule"
    "EmailRequest":
      properties:
        "to_email":
          type: "string"
          title: "To Email"
        "subject":
          type: "string"
          title: "Subject"
        "content":
          type: "string"
          title: "Content"
        "link":
          type: "string"
          title: "Link"
      type: "object"
      required:
        - "to_email"
        - "subject"
        - "content"
        - "link"
      title: "EmailRequest"
    "EntityTypeEnum":
      type: "string"
      enum:
        - "C_CORPORATION"
        - "COOPERATIVE_CO_OP"
        - "CORPORATION"
        - "GENERAL_PARTNERSHIP"
        - "HYBRID_LLC"
        - "JOINT_VENTURE"
        - "LLC"
        - "LLC_TAXED_AS_C_CORPORATION"
        - "LLC_TAXED_AS_S_CORPORATION"
        - "LIMITED_LIABILITY_LIMITED_PARTNERSHIP"
        - "LIMITED_LIABILITY_PARTNERSHIP"
        - "LIMITED_PARTNERSHIP"
        - "MULTI_MEMBER_LLC"
        - "NONPROFIT"
        - "PROFESSIONAL_LLC"
        - "SINGLE_MEMBER_LLC"
        - "S_CORPORATION"
        - "SOLE_PROPRIETORSHIP"
      title: "EntityTypeEnum"
    "ErrorDetail":
      properties:
        "code":
          type: "string"
          title: "Code"
        "message":
          type: "string"
          title: "Message"
        "details":
          type: "string"
          title: "Details"
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "code"
        - "message"
        - "details"
        - "type"
      title: "ErrorDetail"
    "ErrorResponse":
      properties:
        "detail":
          type: "string"
          title: "Detail"
          description: "Error message"
      type: "object"
      required:
        - "detail"
      title: "ErrorResponse"
    "Event":
      properties:
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
        "occurred_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Occurred At"
        "source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source"
        "object":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Object"
        "api_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Api Version"
        "content":
          anyOf:
            - {"$ref": "#/components/schemas/Content"}
            - type: "null"
        "event_type":
          anyOf:
            - {"$ref": "#/components/schemas/EventType"}
            - type: "null"
        "webhook_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Webhook Status"
        "webhooks":
          anyOf:
            - items: {"$ref": "#/components/schemas/Webhook"}
              type: "array"
            - type: "null"
          title: "Webhooks"
      type: "object"
      title: "Event"
    "EventType":
      type: "string"
      enum:
        - "item_created"
        - "item_updated"
        - "item_deleted"
        - "item_price_created"
        - "item_price_updated"
        - "item_price_deleted"
        - "customer_created"
        - "customer_changed"
        - "customer_deleted"
      title: "EventType"
    "Exemption":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
          description: "Unique identifier for the exemption"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "exemption_type": {"$ref": "#/components/schemas/ExemptionType", "description": "The type of exemption (e.g., wholesale, resale)"}
        "jurisdiction":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jurisdiction"
          description: "The jurisdiction identifier for the exemption"
        "country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US')"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "Start date for the exemption validity period (YYYY-MM-DD format)"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "End date for the exemption validity period (YYYY-MM-DD format)"
        "customer_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier for the customer associated with the exemption"
        "transaction_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Transaction Id"
          description: "Unique identifier for the transaction\n        associated with the exemption, if applicable."
        "reseller":
          type: "boolean"
          title: "Reseller"
          description: "Indicates whether the exemption is for a reseller"
          default: false
        "FEIN":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fein"
          description: "Federal Employer Identification Number\n        associated with the exemption."
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "Sales tax ID for the exemption"
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionStatus"}
            - type: "null"
          description: "The status of the exemption.\n        Defaults to ACTIVE if not provided."
        "organization_id":
          type: "string"
          maxLength: 100
          title: "Organization Id"
      type: "object"
      required:
        - "exemption_type"
        - "start_date"
      title: "Exemption"
    "ExemptionCreate":
      properties:
        "exemption_type": {"$ref": "#/components/schemas/ExemptionType", "description": "The type of exemption (e.g., wholesale, resale)"}
        "jurisdiction":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jurisdiction"
          description: "The jurisdiction identifier for the exemption"
        "country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US')"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "Start date for the exemption validity period (YYYY-MM-DD format)"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "End date for the exemption validity period (YYYY-MM-DD format)"
        "customer_id":
          type: "string"
          maxLength: 100
          title: "Customer Id"
          description: "Unique identifier for the customer associated with the exemption"
        "transaction_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Transaction Id"
          description: "Unique identifier for the transaction, if applicable"
        "reseller":
          type: "boolean"
          title: "Reseller"
          description: "Indicates whether the exemption is for a reseller"
          default: false
        "FEIN":
          type: "string"
          title: "Fein"
          description: "Federal Employer Identification Number"
        "sales_tax_id":
          type: "string"
          title: "Sales Tax Id"
          description: "Sales tax ID for the exemption"
        "status": {"$ref": "#/components/schemas/ExemptionStatus", "description": "The status of the exemption"}
      type: "object"
      required:
        - "exemption_type"
        - "start_date"
        - "customer_id"
        - "FEIN"
        - "sales_tax_id"
        - "status"
      title: "ExemptionCreate"
    "ExemptionRequired":
      properties:
        "jurisdiction":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jurisdiction"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "exemption_type": {"$ref": "#/components/schemas/ExemptionType"}
        "start_date":
          type: "string"
          format: "date-time"
          title: "Start Date"
        "status": {"$ref": "#/components/schemas/ExemptionStatus"}
        "reseller":
          type: "boolean"
          title: "Reseller"
      type: "object"
      required:
        - "organization_id"
        - "exemption_type"
        - "start_date"
        - "status"
        - "reseller"
      title: "ExemptionRequired"
    "ExemptionStatus":
      type: "string"
      enum:
        - "ACTIVE"
        - "INACTIVE"
        - "EXPIRED"
        - "DEACTIVATED"
        - "ARCHIVED"
      title: "ExemptionStatus"
    "ExemptionType":
      type: "string"
      enum:
        - "customer"
        - "wholesale"
        - "transaction"
      title: "ExemptionType"
    "ExemptionUpdate":
      properties:
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "reseller":
          type: "boolean"
          title: "Reseller"
          default: false
        "FEIN":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fein"
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionStatus"}
            - type: "null"
      type: "object"
      required:
        - "start_date"
      title: "ExemptionUpdate"
    "FileUploadData":
      properties:
        "file_name":
          type: "string"
          title: "File Name"
      type: "object"
      required:
        - "file_name"
      title: "FileUploadData"
    "FileUploadURLs":
      properties:
        "file_name":
          type: "string"
          title: "File Name"
        "is_local":
          type: "boolean"
          title: "Is Local"
        "upload_url_config":
          additionalProperties: true
          type: "object"
          title: "Upload Url Config"
        "imports":
          anyOf:
            - {"$ref": "#/components/schemas/Import"}
            - type: "null"
      type: "object"
      required:
        - "file_name"
        - "is_local"
        - "upload_url_config"
      title: "FileUploadURLs"
    "FilingAdminDetailsRead":
      properties:
        "status": {"$ref": "#/components/schemas/FilingStatusEnum", "description": "Filing status. Possible values:\n                                    UNFILED, FILING, FILED.", "default": "UNFILED"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The start date of the filing period."
        "end_date":
          type: "string"
          format: "date"
          title: "End Date"
          description: "The end date of the filing period."
        "due_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Due Date"
          description: "The due date of the filing."
        "date_filed":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Date Filed"
          description: "The date the filing was completed, if applicable."
        "is_manual":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Manual"
          description: "Indicates if the filing was done manually."
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
          description: "The code of the state associated with the filing (e.g., IA, NY)."
        "state_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Name"
          description: "The name of the state associated with the filing\n        (e.g., Iowa, New York)."
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "Country code in ISO 3166-1 alpha-2 format (e.g., US)."}
        "jira_issue_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jira Issue Key"
          description: "The associated JIRA issue key for tracking the filing,\n        if available. Can be null."
        "auto_approved":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Approved"
          description: "Indicates if the filing was auto-approved. Defaults to false."
          default: false
        "amount_calculated":
          type: "string"
          title: "Amount Calculated"
          description: "The calculated amount for the filing. Defaults to 0.00."
          default: "0.00"
        "amount_adjusted":
          type: "string"
          title: "Amount Adjusted"
          description: "Adjusted amount, if any."
          default: "0.00"
        "amount_discounts":
          type: "string"
          title: "Amount Discounts"
          description: "Discounts applied to the filing."
          default: "0.00"
        "amount_fees":
          type: "string"
          title: "Amount Fees"
          description: "Discounts applied to the amount."
          default: "0.00"
        "amount_penalties":
          type: "string"
          title: "Amount Penalties"
          description: "Penalties applied to the filing."
          default: "0.00"
        "amount_tax_collected":
          type: "string"
          title: "Amount Tax Collected"
          description: "Total tax collected during the filing period."
          default: "0.00"
        "amount_sales":
          type: "string"
          title: "Amount Sales"
          description: "Total sales amount during the filing period."
          default: "0.00"
        "amount":
          type: "string"
          title: "Amount"
          description: "Final amount due for the filing."
          default: "0.00"
        "total_tax_liability":
          type: "string"
          title: "Total Tax Liability"
          description: "Total tax liability for the filing."
          default: "0.00"
        "transaction_count":
          type: "integer"
          title: "Transaction Count"
          description: "Total number of transactions associated with the filing."
          default: 0
        "internal_notes":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Internal Notes"
          description: "Notes or comments related to the filing."
        "recent_details_report_link":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Recent Details Report Link"
        "tax_remitted":
          type: "string"
          title: "Tax Remitted"
          description: "The amount of tax remitted."
          default: "0.00"
        "return_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Return Confirmation Id"
          description: "Return confirmation ID, if applicable."
        "payment_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Payment Confirmation Id"
          description: "Payment confirmation ID, if applicable."
        "block_approval":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Block Approval"
          description: "Indicates if the filing can be approved."
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Currency code for the filing (e.g., USD, CAD)."
        "id":
          type: "string"
          title: "Id"
          description: "Unique identifier for the filing."
        "registration_id":
          type: "string"
          title: "Registration Id"
          description: "Identifier for the registration associated with the filing."
        "attachments":
          anyOf:
            - additionalProperties:
                type: "string"
              type: "object"
            - type: "null"
          title: "Attachments"
          description: "List of attachments associated with the filing, if any."
        "credits_utilized":
          type: "string"
          title: "Credits Utilized"
          default: "0.00"
        "filing_website_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Website Url"
          description: "Website URL for the filing's jurisdiction, if available."
      type: "object"
      required:
        - "start_date"
        - "end_date"
        - "country_code"
        - "id"
        - "registration_id"
      title: "FilingAdminDetailsRead"
    "FilingCountByJurisdiction":
      properties:
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "Country code"}
        "state_code":
          type: "string"
          title: "State Code"
          description: "State code"
        "filing_count":
          type: "integer"
          title: "Filing Count"
          description: "Number of filings in a jurisdiction"
      type: "object"
      required:
        - "country_code"
        - "state_code"
        - "filing_count"
      title: "FilingCountByJurisdiction"
    "FilingCreate":
      properties:
        "registration_id":
          type: "string"
          title: "Registration Id"
        "status": {"$ref": "#/components/schemas/FilingStatusEnum"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          type: "string"
          format: "date"
          title: "End Date"
        "state_code":
          type: "string"
          title: "State Code"
        "state_name":
          type: "string"
          title: "State Name"
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "date_filed":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Date Filed"
      type: "object"
      required:
        - "registration_id"
        - "status"
        - "start_date"
        - "end_date"
        - "state_code"
        - "state_name"
        - "country_code"
      title: "FilingCreate"
    "FilingDetailsRead":
      properties:
        "status": {"$ref": "#/components/schemas/FilingStatusEnum", "description": "Filing status. Possible values:\n                                    UNFILED, FILING, FILED.", "default": "UNFILED"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The start date of the filing period."
        "end_date":
          type: "string"
          format: "date"
          title: "End Date"
          description: "The end date of the filing period."
        "due_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Due Date"
          description: "The due date of the filing."
        "date_filed":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Date Filed"
          description: "The date the filing was completed, if applicable."
        "is_manual":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Manual"
          description: "Indicates if the filing was done manually."
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
          description: "The code of the state associated with the filing (e.g., IA, NY)."
        "state_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Name"
          description: "The name of the state associated with the filing\n        (e.g., Iowa, New York)."
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "Country code in ISO 3166-1 alpha-2 format (e.g., US)."}
        "jira_issue_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jira Issue Key"
          description: "The associated JIRA issue key for tracking the filing,\n        if available. Can be null."
        "auto_approved":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Approved"
          description: "Indicates if the filing was auto-approved. Defaults to false."
          default: false
        "amount_calculated":
          type: "string"
          title: "Amount Calculated"
          description: "The calculated amount for the filing. Defaults to 0.00."
          default: "0.00"
        "amount_adjusted":
          type: "string"
          title: "Amount Adjusted"
          description: "Adjusted amount, if any."
          default: "0.00"
        "amount_discounts":
          type: "string"
          title: "Amount Discounts"
          description: "Discounts applied to the filing."
          default: "0.00"
        "amount_fees":
          type: "string"
          title: "Amount Fees"
          description: "Discounts applied to the amount."
          default: "0.00"
        "amount_penalties":
          type: "string"
          title: "Amount Penalties"
          description: "Penalties applied to the filing."
          default: "0.00"
        "amount_tax_collected":
          type: "string"
          title: "Amount Tax Collected"
          description: "Total tax collected during the filing period."
          default: "0.00"
        "amount_sales":
          type: "string"
          title: "Amount Sales"
          description: "Total sales amount during the filing period."
          default: "0.00"
        "amount":
          type: "string"
          title: "Amount"
          description: "Final amount due for the filing."
          default: "0.00"
        "total_tax_liability":
          type: "string"
          title: "Total Tax Liability"
          description: "Total tax liability for the filing."
          default: "0.00"
        "transaction_count":
          type: "integer"
          title: "Transaction Count"
          description: "Total number of transactions associated with the filing."
          default: 0
        "internal_notes":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Internal Notes"
          description: "Notes or comments related to the filing."
        "recent_details_report_link":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Recent Details Report Link"
        "tax_remitted":
          type: "string"
          title: "Tax Remitted"
          description: "The amount of tax remitted."
          default: "0.00"
        "return_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Return Confirmation Id"
          description: "Return confirmation ID, if applicable."
        "payment_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Payment Confirmation Id"
          description: "Payment confirmation ID, if applicable."
        "block_approval":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Block Approval"
          description: "Indicates if the filing can be approved."
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Currency code for the filing (e.g., USD, CAD)."
        "id":
          type: "string"
          title: "Id"
          description: "Unique identifier for the filing."
        "registration_id":
          type: "string"
          title: "Registration Id"
          description: "Identifier for the registration associated with the filing."
        "attachments":
          anyOf:
            - additionalProperties:
                type: "string"
              type: "object"
            - type: "null"
          title: "Attachments"
          description: "List of attachments associated with the filing, if any."
        "credits_utilized":
          type: "string"
          title: "Credits Utilized"
          default: "0.00"
      type: "object"
      required:
        - "start_date"
        - "end_date"
        - "country_code"
        - "id"
        - "registration_id"
      title: "FilingDetailsRead"
    "FilingFrequencyEnum":
      type: "string"
      enum:
        - "UNKNOWN"
        - "MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "ANNUAL_FISCAL_YEAR"
        - "SEMI_MONTHLY"
        - "BI_MONTHLY"
        - "FOUR_MONTHLY"
      title: "FilingFrequencyEnum"
    "FilingMetrics":
      properties:
        "total_collected_tax":
          type: "string"
          title: "Total Collected Tax"
          default: "0.00"
        "total_remitted_tax":
          type: "string"
          title: "Total Remitted Tax"
          default: "0.00"
        "total_calculated_tax":
          type: "string"
          title: "Total Calculated Tax"
          default: "0.00"
        "total_tax_liability":
          type: "string"
          title: "Total Tax Liability"
          default: "0.00"
      type: "object"
      title: "FilingMetrics"
    "FilingRead":
      properties:
        "status": {"$ref": "#/components/schemas/FilingStatusEnum", "description": "Filing status. Possible values:\n                                    UNFILED, FILING, FILED.", "default": "UNFILED"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The start date of the filing period."
        "end_date":
          type: "string"
          format: "date"
          title: "End Date"
          description: "The end date of the filing period."
        "due_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Due Date"
          description: "The due date of the filing."
        "date_filed":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Date Filed"
          description: "The date the filing was completed, if applicable."
        "is_manual":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Manual"
          description: "Indicates if the filing was done manually."
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
          description: "The code of the state associated with the filing (e.g., IA, NY)."
        "state_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Name"
          description: "The name of the state associated with the filing\n        (e.g., Iowa, New York)."
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "Country code in ISO 3166-1 alpha-2 format (e.g., US)."}
        "jira_issue_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jira Issue Key"
          description: "The associated JIRA issue key for tracking the filing,\n        if available. Can be null."
        "auto_approved":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Approved"
          description: "Indicates if the filing was auto-approved. Defaults to false."
          default: false
        "amount_calculated":
          type: "string"
          title: "Amount Calculated"
          description: "The calculated amount for the filing. Defaults to 0.00."
          default: "0.00"
        "amount_adjusted":
          type: "string"
          title: "Amount Adjusted"
          description: "Adjusted amount, if any."
          default: "0.00"
        "amount_discounts":
          type: "string"
          title: "Amount Discounts"
          description: "Discounts applied to the filing."
          default: "0.00"
        "amount_fees":
          type: "string"
          title: "Amount Fees"
          description: "Discounts applied to the amount."
          default: "0.00"
        "amount_penalties":
          type: "string"
          title: "Amount Penalties"
          description: "Penalties applied to the filing."
          default: "0.00"
        "amount_tax_collected":
          type: "string"
          title: "Amount Tax Collected"
          description: "Total tax collected during the filing period."
          default: "0.00"
        "amount_sales":
          type: "string"
          title: "Amount Sales"
          description: "Total sales amount during the filing period."
          default: "0.00"
        "amount":
          type: "string"
          title: "Amount"
          description: "Final amount due for the filing."
          default: "0.00"
        "total_tax_liability":
          type: "string"
          title: "Total Tax Liability"
          description: "Total tax liability for the filing."
          default: "0.00"
        "transaction_count":
          type: "integer"
          title: "Transaction Count"
          description: "Total number of transactions associated with the filing."
          default: 0
        "internal_notes":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Internal Notes"
          description: "Notes or comments related to the filing."
        "recent_details_report_link":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Recent Details Report Link"
        "tax_remitted":
          type: "string"
          title: "Tax Remitted"
          description: "The amount of tax remitted."
          default: "0.00"
        "return_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Return Confirmation Id"
          description: "Return confirmation ID, if applicable."
        "payment_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Payment Confirmation Id"
          description: "Payment confirmation ID, if applicable."
        "block_approval":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Block Approval"
          description: "Indicates if the filing can be approved."
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Currency code for the filing (e.g., USD, CAD)."
        "id":
          type: "string"
          title: "Id"
          description: "Unique identifier for the filing."
        "registration_id":
          type: "string"
          title: "Registration Id"
          description: "Identifier for the registration associated with the filing."
      type: "object"
      required:
        - "start_date"
        - "end_date"
        - "country_code"
        - "id"
        - "registration_id"
      title: "FilingRead"
    "FilingStatusEnum":
      type: "string"
      enum:
        - "UNFILED"
        - "FILED"
        - "FILING"
      title: "FilingStatusEnum"
    "FilingUpdateInternal":
      properties:
        "status": {"$ref": "#/components/schemas/FilingStatusEnum", "description": "Filing status. Possible values:\n                                    UNFILED, FILING, FILED.", "default": "UNFILED"}
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The start date of the filing period."
        "end_date":
          type: "string"
          format: "date"
          title: "End Date"
          description: "The end date of the filing period."
        "due_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Due Date"
          description: "The due date of the filing."
        "date_filed":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Date Filed"
          description: "The date the filing was completed, if applicable."
        "is_manual":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Manual"
          description: "Indicates if the filing was done manually."
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
          description: "The code of the state associated with the filing (e.g., IA, NY)."
        "state_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Name"
          description: "The name of the state associated with the filing\n        (e.g., Iowa, New York)."
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "Country code in ISO 3166-1 alpha-2 format (e.g., US)."}
        "jira_issue_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jira Issue Key"
          description: "The associated JIRA issue key for tracking the filing,\n        if available. Can be null."
        "auto_approved":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Approved"
          description: "Indicates if the filing was auto-approved. Defaults to false."
          default: false
        "amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Calculated"
          description: "The calculated amount for the filing. Defaults to 0.00."
          default: "0.00"
        "amount_adjusted":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Adjusted"
          description: "Adjusted amount, if any."
          default: "0.00"
        "amount_discounts":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Discounts"
          description: "Discounts applied to the filing."
          default: "0.00"
        "amount_fees":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Fees"
          description: "Discounts applied to the amount."
          default: "0.00"
        "amount_penalties":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Penalties"
          description: "Penalties applied to the filing."
          default: "0.00"
        "amount_tax_collected":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Tax Collected"
          description: "Total tax collected during the filing period."
          default: "0.00"
        "amount_sales":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Sales"
          description: "Total sales amount during the filing period."
          default: "0.00"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
          description: "Final amount due for the filing."
          default: "0.00"
        "total_tax_liability":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Liability"
          description: "Total tax liability for the filing."
          default: "0.00"
        "transaction_count":
          type: "integer"
          title: "Transaction Count"
          description: "Total number of transactions associated with the filing."
          default: 0
        "internal_notes":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Internal Notes"
          description: "Notes or comments related to the filing."
        "recent_details_report_link":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Recent Details Report Link"
        "tax_remitted":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Remitted"
          description: "The amount of tax remitted."
          default: "0.00"
        "return_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Return Confirmation Id"
          description: "Return confirmation ID, if applicable."
        "payment_confirmation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Payment Confirmation Id"
          description: "Payment confirmation ID, if applicable."
        "needs_manual_review":
          type: "boolean"
          title: "Needs Manual Review"
          default: false
        "block_approval":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Block Approval"
          description: "Indicates if the filing can be approved."
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Currency code for the filing (e.g., USD, CAD)."
      type: "object"
      required:
        - "start_date"
        - "end_date"
        - "country_code"
      title: "FilingUpdateInternal"
    "HTTPValidationError":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/ValidationError"}
          type: "array"
          title: "Detail"
      type: "object"
      title: "HTTPValidationError"
    "HostedPage":
      properties:
        "id":
          type: "string"
          title: "Id"
        "type":
          type: "string"
          title: "Type"
        "url":
          type: "string"
          title: "Url"
        "state":
          type: "string"
          title: "State"
        "embed":
          type: "boolean"
          title: "Embed"
        "created_at":
          type: "integer"
          title: "Created At"
        "expires_at":
          type: "integer"
          title: "Expires At"
        "object":
          type: "string"
          title: "Object"
        "updated_at":
          type: "integer"
          title: "Updated At"
        "resource_version":
          type: "integer"
          title: "Resource Version"
      type: "object"
      required:
        - "id"
        - "type"
        - "url"
        - "state"
        - "embed"
        - "created_at"
        - "expires_at"
        - "object"
        - "updated_at"
        - "resource_version"
      title: "HostedPage"
    "Import":
      properties:
        "id":
          type: "string"
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "user_id":
          type: "string"
          title: "User Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "source": {"$ref": "#/components/schemas/SourceEnum", "default": "OTHER"}
        "parent_file_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Parent File Name"
        "parent_file_s3_location":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Parent File S3 Location"
        "num_rows_total":
          type: "integer"
          title: "Num Rows Total"
          default: 0
        "num_transactions_imported":
          type: "integer"
          title: "Num Transactions Imported"
          default: 0
        "num_transactions_skipped":
          type: "integer"
          title: "Num Transactions Skipped"
          default: 0
        "split_into":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Split Into"
        "status": {"$ref": "#/components/schemas/ImportStatusEnum", "default": "NEW"}
        "error_data":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error Data"
      type: "object"
      required:
        - "user_id"
        - "organization_id"
      title: "Import"
    "ImportAuthorizedApideckConnectionPayload":
      properties:
        "access_token":
          type: "string"
          title: "Access Token"
        "expires_in":
          type: "integer"
          title: "Expires In"
        "refresh_token":
          type: "string"
          title: "Refresh Token"
      type: "object"
      required:
        - "access_token"
        - "expires_in"
        - "refresh_token"
      title: "ImportAuthorizedApideckConnectionPayload"
    "ImportFormat":
      properties:
        "related_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Related External ID"
          description: "ID related to an external transaction, required for when transaction type is  'FULL_CREDIT_NOTE' or 'PARTIAL_CREDIT_NOTE'."
        "transaction_external_id":
          type: "string"
          minLength: 1
          title: "Transaction External Id"
        "status": {"$ref": "#/components/schemas/TransactionStatusEnum", "title": "Transaction Status", "description": "The status of the transaction in the source system.", "default": "COMMITTED"}
        "transaction_source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          title: "Transaction Source"
          description: "The source of the transaction."
          default: "OTHER"
        "date":
          type: "string"
          format: "date-time"
          title: "Transaction Date"
          description: "Date the transaction took place."
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "title": "Currency", "description": "Currency of the transaction.", "default": "USD"}
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description"
          description: "Description of the transaction."
        "customer_id":
          type: "string"
          maxLength: 100
          title: "Customer ID"
          description: "Unique identifier of the customer in the source system."
        "tax_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Tax ID"
          description: "Registration number of the customer."
        "customer_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Customer Name"
          description: "Full name of the customer."
        "customer_email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Customer Email"
          description: "Email address of the customer."
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates if the transaction is a marketplace transaction."
          default: false
        "ship_to_phone":
          anyOf:
            - type: "string"
              maxLength: 50
            - type: "null"
          title: "Ship To Address Phone"
          description: "Phone number of the ship to address."
        "ship_to_street_line_1":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Ship To Address Street Line 1"
          description: "First line of the ship to address."
        "ship_to_street_line_2":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Ship To Address Street Line 2"
          description: "Second line of the ship to address."
        "ship_to_city":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Ship To Address City"
          description: "City of the ship to address."
        "ship_to_state":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Ship To Address State"
          description: "State/Province of the ship to address."
        "ship_to_postal_code":
          anyOf:
            - type: "string"
              maxLength: 50
            - type: "null"
          title: "Ship To Address Postal Code"
          description: "Postal code of the ship to address."
        "ship_to_country":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Ship To Address Country"
          description: "Country of the ship to address."
        "bill_to_phone":
          anyOf:
            - type: "string"
              maxLength: 50
            - type: "null"
          title: "Bill To Address Phone"
          description: "Phone number of the bill to address."
        "bill_to_street_line_1":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Bill To Address Street Line 1"
          description: "First line of the bill to address."
        "bill_to_street_line_2":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Bill To Address Street Line 2"
          description: "Second line of the bill to address."
        "bill_to_city":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Bill To Address City"
          description: "City of the bill to address."
        "bill_to_state":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Bill To Address State"
          description: "State/Province of the bill to address."
        "bill_to_postal_code":
          anyOf:
            - type: "string"
              maxLength: 50
            - type: "null"
          title: "Bill To Address Postal Code"
          description: "Postal code of the bill to address."
        "bill_to_country":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Bill To Address Country"
          description: "Country of the bill to address."
        "line_item_id":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Line Item ID"
          description: "Unique identifier of the line item in the source system."
        "product_external_id":
          type: "string"
          maxLength: 200
          title: "Product External ID"
          description: "Unique identifier of the product in the source system."
        "product_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Product Name"
          description: "Name of the product on this line item."
        "product_description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Product Description"
          description: "Description of the product on this line item."
        "amount":
          type: "string"
          title: "Amount"
          description: "The amount for this line item after applying all discounts."
          default: "0.00"
        "tax_amount":
          type: "string"
          title: "Tax Amount"
          description: "Tax amount collected."
          default: "0.00"
        "quantity":
          type: "string"
          title: "Quantity"
          description: "Quantity of this line item sold."
          default: "1"
        "exempt":
          type: "boolean"
          title: "Exempt"
          description: "Indicates if this line item is exempt from tax."
          default: false
        "customer_exempt":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Customer Exempt"
          description: "Indicates if there is an exemption for the customer."
        "transaction_type":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionTypeEnum"}
            - type: "null"
          title: "Transaction Type"
          description: "Type of the transaction."
          default: "SALE"
        "operation":
          anyOf:
            - {"$ref": "#/components/schemas/ImportOperationEnum"}
            - type: "null"
          title: "Operation"
          description: "Operation to perform on the transaction."
          default: "IMPORT"
        "discount_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Discount Amount"
          description: "The total discount amount applied to this line item."
          default: "0.00"
      type: "object"
      required:
        - "transaction_external_id"
        - "date"
        - "customer_id"
        - "product_external_id"
      title: "ImportFormat"
    "ImportOperationEnum":
      type: "string"
      enum:
        - "IMPORT"
        - "UPDATE"
        - "ARCHIVE"
      title: "ImportOperationEnum"
    "ImportStatusEnum":
      type: "string"
      enum:
        - "NEW"
        - "VALIDATION_SUBMIT"
        - "VALIDATING"
        - "VALIDATION_SUCCESS"
        - "VALIDATION_FAILURE"
        - "IMPORT_STARTED"
        - "IMPORTING"
        - "FAILURE"
        - "SUCCESS"
      title: "ImportStatusEnum"
    "IndiaRule":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum", "default": "IN"}
        "state":
          type: "string"
          title: "State"
          default: ""
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "tax_rate":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Rate"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
      title: "IndiaRule"
    "InitialImportStatus":
      properties:
        "initial_import_complete_status":
          type: "boolean"
          title: "Initial Import Complete Status"
      type: "object"
      required:
        - "initial_import_complete_status"
      title: "InitialImportStatus"
    "InviteResponse":
      properties:
        "invitee_email":
          type: "string"
          format: "email"
          title: "Invitee Email"
        "org_id":
          type: "string"
          title: "Org Id"
        "org_name":
          type: "string"
          title: "Org Name"
        "role_in_org":
          type: "string"
          title: "Role In Org"
        "additional_roles":
          anyOf:
            - items: {}
              type: "array"
            - type: "null"
          title: "Additional Roles"
        "created_at":
          type: "integer"
          title: "Created At"
        "expires_at":
          type: "integer"
          title: "Expires At"
        "inviter_email":
          anyOf:
            - type: "string"
              format: "email"
            - type: "null"
          title: "Inviter Email"
        "inviter_user_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Inviter User Id"
      type: "object"
      required:
        - "invitee_email"
        - "org_id"
        - "org_name"
        - "role_in_org"
        - "created_at"
        - "expires_at"
      title: "InviteResponse"
    "InviteUserRequest":
      properties:
        "email":
          type: "string"
          format: "email"
          title: "Email"
        "role":
          type: "string"
          title: "Role"
        "additional_roles":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Additional Roles"
          default: []
      type: "object"
      required:
        - "email"
        - "role"
      title: "InviteUserRequest"
    "Invoice":
      properties:
        "id":
          type: "string"
          title: "Id"
        "customer_id":
          type: "string"
          title: "Customer Id"
        "po_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Po Number"
        "subscription_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Subscription Id"
        "vat_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Vat Number"
        "recurring":
          type: "boolean"
          title: "Recurring"
        "status":
          type: "string"
          title: "Status"
        "price_type":
          type: "string"
          title: "Price Type"
        "date":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Date"
        "due_date":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Due Date"
        "net_term_days":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Net Term Days"
        "exchange_rate":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Exchange Rate"
        "total":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total"
        "amount_paid":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount Paid"
        "amount_adjusted":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount Adjusted"
        "write_off_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Write Off Amount"
        "credits_applied":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Credits Applied"
        "amount_due":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount Due"
        "paid_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Paid At"
        "dunning_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Dunning Status"
        "updated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Updated At"
        "resource_version":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Resource Version"
        "deleted":
          type: "boolean"
          title: "Deleted"
        "object":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Object"
        "first_invoice":
          type: "boolean"
          title: "First Invoice"
        "amount_to_collect":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount To Collect"
        "round_off_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Round Off Amount"
        "new_sales_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "New Sales Amount"
        "has_advance_charges":
          type: "boolean"
          title: "Has Advance Charges"
        "currency_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency Code"
        "base_currency_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Base Currency Code"
        "generated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Generated At"
        "is_gifted":
          type: "boolean"
          title: "Is Gifted"
        "term_finalized":
          type: "boolean"
          title: "Term Finalized"
        "channel":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel"
        "tax":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Tax"
        "line_items":
          anyOf:
            - items: {"$ref": "#/components/schemas/backend__src__billing__models__LineItem"}
              type: "array"
            - type: "null"
          title: "Line Items"
        "sub_total":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Sub Total"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__billing__models__Address"}
            - type: "null"
        "shipping_address":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__billing__models__Address"}
            - type: "null"
        "issued_credit_notes":
          items: {"$ref": "#/components/schemas/CreditNote"}
          type: "array"
          title: "Issued Credit Notes"
          default: []
      type: "object"
      required:
        - "id"
        - "customer_id"
        - "recurring"
        - "status"
        - "price_type"
        - "deleted"
        - "first_invoice"
        - "has_advance_charges"
        - "is_gifted"
        - "term_finalized"
      title: "Invoice"
    "InvoiceUsageDetails":
      properties:
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
        "request_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Request Type"
        "completion_date":
          type: "string"
          title: "Completion Date"
      type: "object"
      required:
        - "completion_date"
      title: "InvoiceUsageDetails"
      description: "Model for invoice usage details response.\n\nAttributes:\n    state: State code where the usage occurred (Optional)\n    country: Country code where the usage occurred (Optional)\n    request_type: Type of request (filing, registration, or premium) (Optional)\n    completion_date: Date when the usage was completed"
    "Item":
      properties:
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "external_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Status"
        "resource_version":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Resource Version"
        "updated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Updated At"
        "item_family_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Family Id"
        "type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Type"
        "is_shippable":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Shippable"
        "is_giftable":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Giftable"
        "enabled_for_checkout":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Enabled For Checkout"
        "enabled_in_portal":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Enabled In Portal"
        "item_applicability":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Applicability"
        "metered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Metered"
        "channel":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel"
        "object":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Object"
        "archivable":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Archivable"
      type: "object"
      title: "Item"
    "ItemPrice":
      properties:
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "item_family_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Family Id"
        "item_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Id"
        "status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Status"
        "external_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Name"
        "pricing_model":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Pricing Model"
        "price":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Price"
        "currency_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency Code"
        "free_quantity":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Free Quantity"
        "channel":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel"
        "resource_version":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Resource Version"
        "updated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Updated At"
        "created_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Created At"
        "is_taxable":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Taxable"
        "tax_providers_fields":
          anyOf:
            - items:
                additionalProperties: true
                type: "object"
              type: "array"
            - type: "null"
          title: "Tax Providers Fields"
        "item_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Type"
        "show_description_in_invoices":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Show Description In Invoices"
        "show_description_in_quotes":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Show Description In Quotes"
        "object":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Object"
        "archivable":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Archivable"
        "tax_detail":
          anyOf:
            - additionalProperties: true
              type: "object"
            - type: "null"
          title: "Tax Detail"
      type: "object"
      title: "ItemPrice"
    "Jurisdiction":
      properties:
        "code":
          type: "string"
          maxLength: 50
          title: "Code"
          description: "The jurisdiction code."
        "type": {"$ref": "#/components/schemas/TaxJurisdictionType", "description": "The type of tax jurisdiction."}
        "name":
          type: "string"
          maxLength: 50
          title: "Name"
          description: "The jurisdiction name."
      type: "object"
      required:
        - "code"
        - "type"
        - "name"
      title: "Jurisdiction"
      description: "The tax jurisdiction details"
    "JurisdictionType":
      type: "string"
      enum:
        - "COUNTRY"
        - "FEDERAL"
        - "STATE"
        - "COUNTY"
        - "CITY"
        - "SPECIAL"
        - "OTHER"
        - "HYBRID"
      title: "JurisdictionType"
    "LinkedCustomer":
      properties:
        "customer_id":
          type: "string"
          title: "Customer Id"
        "has_active_subscription":
          type: "boolean"
          title: "Has Active Subscription"
        "has_billing_address":
          type: "boolean"
          title: "Has Billing Address"
        "has_payment_method":
          type: "boolean"
          title: "Has Payment Method"
        "object":
          type: "string"
          title: "Object"
        "email":
          type: "string"
          title: "Email"
      type: "object"
      required:
        - "customer_id"
        - "has_active_subscription"
        - "has_billing_address"
        - "has_payment_method"
        - "object"
        - "email"
      title: "LinkedCustomer"
    "MagentoAddress":
      properties:
        "line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line1"
        "line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line2"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
        "region_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Region Name"
        "region_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Region Code"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
        "country_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country Code"
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "type"
      title: "MagentoAddress"
    "MagentoCustomer":
      properties:
        "customer_id":
          type: "string"
          title: "Customer Id"
        "customer_group_id":
          anyOf:
            - type: "string"
            - type: "integer"
            - type: "null"
          title: "Customer Group Id"
      type: "object"
      required:
        - "customer_id"
      title: "MagentoCustomer"
    "MagentoTaxEstimationRequest":
      properties:
        "id":
          type: "string"
          title: "Id"
        "currency_code":
          type: "string"
          title: "Currency Code"
        "customer": {"$ref": "#/components/schemas/MagentoCustomer"}
        "transaction_date":
          type: "string"
          title: "Transaction Date"
        "documents":
          items: {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__Document"}
          type: "array"
          title: "Documents"
      type: "object"
      required:
        - "id"
        - "currency_code"
        - "customer"
        - "transaction_date"
        - "documents"
      title: "MagentoTaxEstimationRequest"
    "MagentoTaxEstimationResponse":
      properties:
        "documents":
          items: {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__DocumentResponse"}
          type: "array"
          title: "Documents"
        "id":
          type: "string"
          title: "Id"
        "error":
          anyOf:
            - additionalProperties: true
              type: "object"
            - type: "null"
          title: "Error"
      type: "object"
      required:
        - "documents"
        - "id"
      title: "MagentoTaxEstimationResponse"
    "Marketplace":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "version":
          type: "integer"
          title: "Version"
          default: 1
        "source_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source Id"
        "source_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source Name"
        "source_type":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
        "marketplace":
          anyOf:
            - {"$ref": "#/components/schemas/MarketplaceEnum"}
            - type: "null"
        "organization_id":
          type: "string"
          maxLength: 100
          title: "Organization Id"
        "connection_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Connection Id"
      type: "object"
      title: "Marketplace"
    "MarketplaceEnum":
      type: "string"
      enum:
        - "YES"
        - "NO"
        - "NEEDS_REVIEW"
      title: "MarketplaceEnum"
    "MarketplaceRead":
      properties:
        "id":
          type: "string"
          title: "Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
        "source_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source Id"
        "source_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source Name"
        "source_type":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
        "marketplace":
          anyOf:
            - {"$ref": "#/components/schemas/MarketplaceEnum"}
            - type: "null"
        "transactions":
          type: "integer"
          title: "Transactions"
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "transactions"
      title: "MarketplaceRead"
    "MarketplaceTransaction":
      properties:
        "id":
          type: "string"
          title: "Id"
        "marketplace_id":
          type: "string"
          title: "Marketplace Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionStatusEnum"}
            - type: "null"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Amount"
          default: "0.00"
        "converted_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Amount"
          default: "0.00"
        "date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Date"
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
        "customer_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Name"
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
        "tax_liability_source": {"$ref": "#/components/schemas/TaxLiabilitySourceEnum", "readOnly": true}
        "total_tax_liability_amount":
          type: "string"
          title: "Total Tax Liability Amount"
          readOnly: true
      type: "object"
      required:
        - "id"
        - "marketplace_id"
        - "organization_id"
        - "tax_liability_source"
        - "total_tax_liability_amount"
      title: "MarketplaceTransaction"
    "MarketplaceUpdate":
      properties:
        "marketplace": {"$ref": "#/components/schemas/MarketplaceEnum"}
      type: "object"
      required:
        - "marketplace"
      title: "MarketplaceUpdate"
    "MigrationRequest":
      properties:
        "migration_name":
          type: "string"
          title: "Migration Name"
        "batch_size":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Batch Size"
        "additional_params":
          anyOf:
            - additionalProperties: true
              type: "object"
            - type: "null"
          title: "Additional Params"
      type: "object"
      required:
        - "migration_name"
      title: "MigrationRequest"
    "ModifyProductCategorySubcategory":
      properties:
        "existing_category": {"$ref": "#/components/schemas/ProductCategoryEnum"}
        "existing_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
        "new_category": {"$ref": "#/components/schemas/ProductCategoryEnum"}
        "new_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
        "status_list":
          items: {"$ref": "#/components/schemas/ProductStatusEnum"}
          type: "array"
          title: "Status List"
          default: []
      type: "object"
      required:
        - "existing_category"
        - "existing_subcategory"
        - "new_category"
        - "new_subcategory"
      title: "ModifyProductCategorySubcategory"
    "NZRule":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum", "default": "NZ"}
        "state":
          type: "string"
          title: "State"
          default: ""
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "tax_rate":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Rate"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
      title: "NZRule"
    "NexusResponse":
      properties:
        "processing_status": {"$ref": "#/components/schemas/NexusStatusEnum", "default": "UP_TO_DATE"}
        "status": {"$ref": "#/components/schemas/NexusStateEnum", "default": "NOT_EXPOSED"}
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "state_code":
          type: "string"
          title: "State Code"
        "state_name":
          type: "string"
          title: "State Name"
        "treatment_of_exempt_transactions": {"$ref": "#/components/schemas/TreatmentEnum"}
        "trigger":
          type: "string"
          title: "Trigger"
        "sales_or_transactions": {"$ref": "#/components/schemas/SalesOrTransactionsEnum"}
        "threshold_sales":
          type: "integer"
          title: "Threshold Sales"
        "threshold_transactions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Threshold Transactions"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "transaction_count":
          type: "integer"
          title: "Transaction Count"
          default: 0
        "transactions_amount":
          type: "string"
          title: "Transactions Amount"
          default: "0.00"
        "previous_transaction_count":
          type: "integer"
          title: "Previous Transaction Count"
          description: "Deprecated: transaction_count now includes both current and previous period values when period_model is CURRENT_OR_PREVIOUS"
          default: 0
          deprecated: true
        "previous_transactions_amount":
          type: "string"
          title: "Previous Transactions Amount"
          description: "Deprecated: transactions_amount now includes both current and previous period values when period_model is CURRENT_OR_PREVIOUS"
          default: "0.00"
          deprecated: true
        "calculated_tax_liability":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Calculated Tax Liability"
          default: "0.00"
        "imported_tax_liability":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Imported Tax Liability"
          default: "0.00"
        "tax_liability":
          type: "string"
          title: "Tax Liability"
          default: "0.00"
        "nexus_met":
          type: "boolean"
          title: "Nexus Met"
          default: false
        "nexus_met_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Nexus Met Date"
        "economic_nexus_met":
          type: "boolean"
          title: "Economic Nexus Met"
          default: false
        "economic_nexus_met_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Economic Nexus Met Date"
        "physical_nexus_met":
          type: "boolean"
          title: "Physical Nexus Met"
          default: false
        "physical_nexus_met_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Physical Nexus Met Date"
        "collected_tax_nexus_met":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Collected Tax Nexus Met"
          default: false
        "collected_tax_nexus_met_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Collected Tax Nexus Met Date"
        "collected_tax_enabled":
          type: "boolean"
          title: "Collected Tax Enabled"
          default: false
        "period_model": {"$ref": "#/components/schemas/PeriodModelEnum"}
        "period_start_date":
          type: "string"
          format: "date"
          title: "Period Start Date"
        "period_end_date":
          type: "string"
          format: "date"
          title: "Period End Date"
        "previous_period_start_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Previous Period Start Date"
        "previous_period_end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Previous Period End Date"
        "earliest_transaction_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Earliest Transaction Date"
        "most_recent_transaction_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Most Recent Transaction Date"
        "earliest_collected_date":
          type: "string"
          format: "date-time"
          title: "Earliest Collected Date"
          default: "2018-01-01T00:00:00"
        "predicted_month_from_today":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Predicted Month From Today"
        "vda_eligible":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda Eligible"
          default: false
        "confidence_level":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Confidence Level"
        "last_processed_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Processed At"
        "last_tax_liability_processed_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Tax Liability Processed At"
        "periods":
          anyOf:
            - items:
                additionalProperties: true
                type: "object"
              type: "array"
            - type: "null"
          title: "Periods"
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Currency code for the nexus (e.g., USD, CAD)."
        "id":
          type: "string"
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "registration":
          anyOf:
            - additionalProperties: true
              type: "object"
            - type: "null"
          title: "Registration"
        "registration_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
        "is_vda_eligible":
          type: "boolean"
          title: "Is Vda Eligible"
          readOnly: true
        "nexus_type": {"$ref": "#/components/schemas/NexusTypeEnum", "readOnly": true}
        "total_transactions":
          type: "integer"
          title: "Total Transactions"
          readOnly: true
        "total_transactions_included":
          type: "integer"
          title: "Total Transactions Included"
          readOnly: true
        "total_transactions_exempted":
          type: "integer"
          title: "Total Transactions Exempted"
          readOnly: true
        "total_transactions_marketplace":
          type: "integer"
          title: "Total Transactions Marketplace"
          readOnly: true
        "marketplace_included":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace Included"
          readOnly: true
      type: "object"
      required:
        - "country_code"
        - "state_code"
        - "state_name"
        - "treatment_of_exempt_transactions"
        - "trigger"
        - "sales_or_transactions"
        - "threshold_sales"
        - "threshold_transactions"
        - "start_date"
        - "period_model"
        - "period_start_date"
        - "period_end_date"
        - "previous_period_start_date"
        - "previous_period_end_date"
        - "id"
        - "created_at"
        - "updated_at"
        - "organization_id"
        - "is_vda_eligible"
        - "nexus_type"
        - "total_transactions"
        - "total_transactions_included"
        - "total_transactions_exempted"
        - "total_transactions_marketplace"
        - "marketplace_included"
      title: "NexusResponse"
    "NexusStateEnum":
      type: "string"
      enum:
        - "EXPOSED"
        - "APPROACHING"
        - "PENDING_REGISTRATION"
        - "OSS_PENDING_REGISTRATION"
        - "REGISTERED"
        - "OSS_REGISTERED"
        - "NOT_EXPOSED"
      title: "NexusStateEnum"
    "NexusStatusEnum":
      type: "string"
      enum:
        - "NEEDS_RERUN"
        - "UP_TO_DATE"
        - "NOT_READY"
      title: "NexusStatusEnum"
    "NexusTypeEnum":
      type: "string"
      enum:
        - "CANADA_FEDERAL"
        - "EU_AGGREGATOR"
        - "STATE"
        - "EU_MEMBER_STATE"
      title: "NexusTypeEnum"
    "NotificationBatchStages":
      type: "string"
      enum:
        - "FILING_DUE"
        - "SUMMARY"
        - "ONBOARDING"
        - "REGISTRATION_START"
      title: "NotificationBatchStages"
    "OSSRegistrationCreatePayload":
      properties:
        "registration_import_type":
          type: "string"
          const: "OSS"
          title: "Registration Import Type"
          description: "Specifies this is an OSS registration import."
          default: "OSS"
        "password_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Plain Text"
          description: "The plaintext password for accessing the tax registration account."
        "password_metadata_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Metadata Plain Text"
          description: "Metadata related to the password."
        "member_state_of_identification_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "If importing an OSS registration, specify the Member State of Identification."
        "imported":
          type: "boolean"
          title: "Imported"
          description: "Whether the registration was imported from another system."
          default: false
      type: "object"
      title: "OSSRegistrationCreatePayload"
    "OnBoardingStepStatusData":
      properties:
        "transactions_status":
          type: "boolean"
          title: "Transactions Status"
        "physical_nexus_status":
          type: "boolean"
          title: "Physical Nexus Status"
        "organization_details_status":
          type: "boolean"
          title: "Organization Details Status"
        "bank_details_status":
          type: "boolean"
          title: "Bank Details Status"
        "onboarding_steps_status":
          type: "boolean"
          title: "Onboarding Steps Status"
        "auto_register":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Register"
        "auto_file":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto File"
        "physical_mail_address_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Status"
      type: "object"
      required:
        - "transactions_status"
        - "physical_nexus_status"
        - "organization_details_status"
        - "bank_details_status"
        - "onboarding_steps_status"
        - "auto_register"
        - "auto_file"
        - "physical_mail_address_status"
      title: "OnBoardingStepStatusData"
    "OnboardingData":
      properties:
        "status": {"$ref": "#/components/schemas/OnboardingStatus"}
      type: "object"
      required:
        - "status"
      title: "OnboardingData"
    "OnboardingStatus":
      type: "string"
      enum:
        - "NOT_STARTED"
        - "SKIPPED"
        - "FINISHED"
      title: "OnboardingStatus"
    "OrgCreated":
      properties:
        "event_type":
          type: "string"
          title: "Event Type"
        "name":
          type: "string"
          title: "Name"
        "org_id":
          type: "string"
          title: "Org Id"
      type: "object"
      required:
        - "event_type"
        - "name"
        - "org_id"
      title: "OrgCreated"
    "OrgMetadata":
      properties:
        "is_test":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Test"
        "env":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Env"
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
      type: "object"
      title: "OrgMetadata"
    "OrgUpdatedDeleted":
      properties:
        "event_type":
          type: "string"
          title: "Event Type"
        "org_id":
          type: "string"
          title: "Org Id"
      type: "object"
      required:
        - "event_type"
        - "org_id"
      title: "OrgUpdatedDeleted"
    "OrganizationBillingDetails":
      properties:
        "billing_plan": {"$ref": "#/components/schemas/BillingPlanEnum"}
        "subscription_status": {"$ref": "#/components/schemas/ChargebeeSubscriptionStatusEnum"}
      type: "object"
      required:
        - "billing_plan"
        - "subscription_status"
      title: "OrganizationBillingDetails"
    "OrganizationBillingPlan":
      properties:
        "billing_plan":
          type: "string"
          title: "Billing Plan"
        "subscription_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Subscription Id"
        "subscription":
          anyOf:
            - {"$ref": "#/components/schemas/Subscription"}
            - type: "null"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/Customer-Output"}
            - type: "null"
        "card":
          anyOf:
            - {"$ref": "#/components/schemas/Card"}
            - type: "null"
      type: "object"
      required:
        - "billing_plan"
      title: "OrganizationBillingPlan"
    "OrganizationDetailsAutoRegisterAutoFile":
      properties:
        "auto_register":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Register"
        "auto_file":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto File"
      type: "object"
      title: "OrganizationDetailsAutoRegisterAutoFile"
    "OrganizationDetailsBusinessContactCreateUpdate":
      properties:
        "business_contact_name":
          type: "string"
          title: "Business Contact Name"
        "business_contact_phone":
          type: "string"
          title: "Business Contact Phone"
        "business_contact_email":
          type: "string"
          title: "Business Contact Email"
        "business_contact_dob":
          type: "string"
          format: "date"
          title: "Business Contact Dob"
        "business_contact_title":
          type: "string"
          title: "Business Contact Title"
        "business_contact_address_1":
          type: "string"
          title: "Business Contact Address 1"
        "business_contact_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Address 2"
        "business_contact_city":
          type: "string"
          title: "Business Contact City"
        "business_contact_state":
          type: "string"
          title: "Business Contact State"
        "business_contact_postal_code":
          type: "string"
          title: "Business Contact Postal Code"
        "business_contact_country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "business_contact_ssn":
          type: "string"
          title: "Business Contact Ssn"
        "business_contact_dl":
          type: "string"
          title: "Business Contact Dl"
      type: "object"
      required:
        - "business_contact_name"
        - "business_contact_phone"
        - "business_contact_email"
        - "business_contact_dob"
        - "business_contact_title"
        - "business_contact_address_1"
        - "business_contact_address_2"
        - "business_contact_city"
        - "business_contact_state"
        - "business_contact_postal_code"
        - "business_contact_country_code"
        - "business_contact_ssn"
        - "business_contact_dl"
      title: "OrganizationDetailsBusinessContactCreateUpdate"
    "OrganizationDetailsBusinessDetailsCreateUpdate":
      properties:
        "business_name":
          type: "string"
          title: "Business Name"
        "entity_type": {"$ref": "#/components/schemas/EntityTypeEnum"}
        "dba":
          type: "string"
          title: "Dba"
        "incorporation_state":
          type: "string"
          title: "Incorporation State"
        "incorporation_country": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "ein":
          type: "string"
          title: "Ein"
        "company_address_1":
          type: "string"
          title: "Company Address 1"
        "company_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company Address 2"
        "company_city":
          type: "string"
          title: "Company City"
        "company_state":
          type: "string"
          title: "Company State"
        "company_postal_code":
          type: "string"
          title: "Company Postal Code"
        "company_country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "business_description":
          type: "string"
          title: "Business Description"
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
        "home_state_registration":
          type: "string"
          title: "Home State Registration"
        "first_operations_date":
          type: "string"
          format: "date"
          title: "First Operations Date"
        "auto_register":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Register"
        "auto_file":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto File"
      type: "object"
      required:
        - "business_name"
        - "entity_type"
        - "dba"
        - "incorporation_state"
        - "incorporation_country"
        - "ein"
        - "company_address_1"
        - "company_city"
        - "company_state"
        - "company_postal_code"
        - "company_country_code"
        - "business_description"
        - "home_state_registration"
        - "first_operations_date"
      title: "OrganizationDetailsBusinessDetailsCreateUpdate"
    "OrganizationDetailsBusinessInformationCreateUpdate":
      properties:
        "business_phone":
          type: "string"
          title: "Business Phone"
        "business_email":
          type: "string"
          title: "Business Email"
        "business_address_1":
          type: "string"
          title: "Business Address 1"
        "business_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Address 2"
        "business_city":
          type: "string"
          title: "Business City"
        "business_state":
          type: "string"
          title: "Business State"
        "business_postal_code":
          type: "string"
          title: "Business Postal Code"
        "business_country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "business_mailing_address_1":
          type: "string"
          title: "Business Mailing Address 1"
        "business_mailing_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Mailing Address 2"
        "business_mailing_city":
          type: "string"
          title: "Business Mailing City"
        "business_mailing_state":
          type: "string"
          title: "Business Mailing State"
        "business_mailing_postal_code":
          type: "string"
          title: "Business Mailing Postal Code"
        "business_mailing_country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "business_fiscal_year_end":
          type: "string"
          format: "date"
          title: "Business Fiscal Year End"
        "accounting_model":
          anyOf:
            - {"$ref": "#/components/schemas/AccountingModelEnum"}
            - type: "null"
      type: "object"
      required:
        - "business_phone"
        - "business_email"
        - "business_address_1"
        - "business_address_2"
        - "business_city"
        - "business_state"
        - "business_postal_code"
        - "business_country_code"
        - "business_mailing_address_1"
        - "business_mailing_address_2"
        - "business_mailing_city"
        - "business_mailing_state"
        - "business_mailing_postal_code"
        - "business_mailing_country_code"
        - "business_fiscal_year_end"
      title: "OrganizationDetailsBusinessInformationCreateUpdate"
    "OrganizationDetailsBusinessOwnersCreateUpdate":
      properties:
        "business_owner1_name":
          type: "string"
          title: "Business Owner1 Name"
        "business_owner1_phone":
          type: "string"
          title: "Business Owner1 Phone"
        "business_owner1_email":
          type: "string"
          title: "Business Owner1 Email"
        "business_owner1_dob":
          type: "string"
          format: "date"
          title: "Business Owner1 Dob"
        "business_owner1_title":
          type: "string"
          title: "Business Owner1 Title"
        "business_owner1_address_1":
          type: "string"
          title: "Business Owner1 Address 1"
        "business_owner1_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Address 2"
        "business_owner1_city":
          type: "string"
          title: "Business Owner1 City"
        "business_owner1_state":
          type: "string"
          title: "Business Owner1 State"
        "business_owner1_postal_code":
          type: "string"
          title: "Business Owner1 Postal Code"
        "business_owner1_country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "business_owner1_ssn":
          type: "string"
          title: "Business Owner1 Ssn"
        "business_owner1_dl":
          type: "string"
          title: "Business Owner1 Dl"
        "business_owner1_percent_ownership":
          type: "string"
          title: "Business Owner1 Percent Ownership"
        "business_owner2_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Name"
        "business_owner2_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Phone"
        "business_owner2_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Email"
        "business_owner2_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner2 Dob"
        "business_owner2_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Title"
        "business_owner2_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Address 1"
        "business_owner2_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Address 2"
        "business_owner2_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 City"
        "business_owner2_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 State"
        "business_owner2_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Postal Code"
        "business_owner2_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner2_ssn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Ssn"
        "business_owner2_dl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Dl"
        "business_owner2_percent_ownership":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Percent Ownership"
        "business_owner3_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Name"
        "business_owner3_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Phone"
        "business_owner3_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Email"
        "business_owner3_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner3 Dob"
        "business_owner3_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Title"
        "business_owner3_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Address 1"
        "business_owner3_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Address 2"
        "business_owner3_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 City"
        "business_owner3_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 State"
        "business_owner3_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Postal Code"
        "business_owner3_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner3_ssn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Ssn"
        "business_owner3_dl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Dl"
        "business_owner3_percent_ownership":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Percent Ownership"
      type: "object"
      required:
        - "business_owner1_name"
        - "business_owner1_phone"
        - "business_owner1_email"
        - "business_owner1_dob"
        - "business_owner1_title"
        - "business_owner1_address_1"
        - "business_owner1_address_2"
        - "business_owner1_city"
        - "business_owner1_state"
        - "business_owner1_postal_code"
        - "business_owner1_country_code"
        - "business_owner1_ssn"
        - "business_owner1_dl"
        - "business_owner1_percent_ownership"
        - "business_owner2_name"
        - "business_owner2_phone"
        - "business_owner2_email"
        - "business_owner2_dob"
        - "business_owner2_title"
        - "business_owner2_address_1"
        - "business_owner2_address_2"
        - "business_owner2_city"
        - "business_owner2_state"
        - "business_owner2_postal_code"
        - "business_owner2_country_code"
        - "business_owner2_ssn"
        - "business_owner2_dl"
        - "business_owner2_percent_ownership"
        - "business_owner3_name"
        - "business_owner3_phone"
        - "business_owner3_email"
        - "business_owner3_dob"
        - "business_owner3_title"
        - "business_owner3_address_1"
        - "business_owner3_address_2"
        - "business_owner3_city"
        - "business_owner3_state"
        - "business_owner3_postal_code"
        - "business_owner3_country_code"
        - "business_owner3_ssn"
        - "business_owner3_dl"
        - "business_owner3_percent_ownership"
      title: "OrganizationDetailsBusinessOwnersCreateUpdate"
    "OrganizationDetailsCompanyAddressCreateUpdate":
      properties:
        "business_name":
          type: "string"
          title: "Business Name"
        "company_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company Address 1"
        "company_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company Address 2"
        "company_city":
          type: "string"
          title: "Company City"
        "company_state":
          type: "string"
          title: "Company State"
        "company_postal_code":
          type: "string"
          title: "Company Postal Code"
        "company_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
      type: "object"
      required:
        - "business_name"
        - "company_city"
        - "company_state"
        - "company_postal_code"
      title: "OrganizationDetailsCompanyAddressCreateUpdate"
    "OrganizationDetailsRead":
      properties:
        "business_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Name"
        "entity_type":
          anyOf:
            - {"$ref": "#/components/schemas/EntityTypeEnum"}
            - type: "null"
        "dba":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Dba"
        "incorporation_state":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Incorporation State"
        "ein":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Ein"
        "company_address_1":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Company Address 1"
        "company_address_2":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Company Address 2"
        "company_city":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Company City"
        "company_state":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Company State"
        "company_postal_code":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Company Postal Code"
        "company_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_description":
          anyOf:
            - type: "string"
              maxLength: 2000
            - type: "null"
          title: "Business Description"
        "home_state_registration":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Home State Registration"
        "first_operations_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "First Operations Date"
        "business_phone":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Phone"
        "business_email":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Email"
        "business_address_1":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Address 1"
        "business_address_2":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Address 2"
        "business_city":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business City"
        "business_state":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business State"
        "business_postal_code":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Postal Code"
        "business_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_mailing_address_1":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Mailing Address 1"
        "business_mailing_address_2":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Mailing Address 2"
        "business_mailing_city":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Mailing City"
        "business_mailing_state":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Mailing State"
        "business_mailing_postal_code":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Mailing Postal Code"
        "business_mailing_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_fiscal_year_end":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Fiscal Year End"
        "business_contact_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Contact Name"
        "business_contact_phone":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Contact Phone"
        "business_contact_email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Contact Email"
        "business_contact_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Contact Dob"
        "business_contact_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Title"
        "business_contact_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Address 1"
        "business_contact_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Address 2"
        "business_contact_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact City"
        "business_contact_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact State"
        "business_contact_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Postal Code"
        "business_contact_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_contact_ssn":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Contact Ssn"
        "business_contact_dl":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Contact Dl"
        "business_owner1_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner1 Name"
        "business_owner1_phone":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner1 Phone"
        "business_owner1_email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner1 Email"
        "business_owner1_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner1 Dob"
        "business_owner1_title":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner1 Title"
        "business_owner1_address_1":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner1 Address 1"
        "business_owner1_address_2":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner1 Address 2"
        "business_owner1_city":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner1 City"
        "business_owner1_state":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner1 State"
        "business_owner1_postal_code":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner1 Postal Code"
        "business_owner1_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner1_ssn":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner1 Ssn"
        "business_owner1_dl":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner1 Dl"
        "business_owner1_percent_ownership":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner1 Percent Ownership"
        "business_owner2_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Name"
        "business_owner2_phone":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner2 Phone"
        "business_owner2_email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Email"
        "business_owner2_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner2 Dob"
        "business_owner2_title":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner2 Title"
        "business_owner2_address_1":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Address 1"
        "business_owner2_address_2":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Address 2"
        "business_owner2_city":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner2 City"
        "business_owner2_state":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner2 State"
        "business_owner2_postal_code":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Business Owner2 Postal Code"
        "business_owner2_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner2_ssn":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Ssn"
        "business_owner2_dl":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Dl"
        "business_owner2_percent_ownership":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner2 Percent Ownership"
        "business_owner3_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Name"
        "business_owner3_phone":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Phone"
        "business_owner3_email":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Email"
        "business_owner3_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner3 Dob"
        "business_owner3_title":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Title"
        "business_owner3_address_1":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Address 1"
        "business_owner3_address_2":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Address 2"
        "business_owner3_city":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 City"
        "business_owner3_state":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 State"
        "business_owner3_postal_code":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Postal Code"
        "business_owner3_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner3_ssn":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Ssn"
        "business_owner3_dl":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Dl"
        "business_owner3_percent_ownership":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Business Owner3 Percent Ownership"
        "physical_mail_address_line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Line1"
        "physical_mail_address_line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Line2"
        "physical_mail_address_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address City"
        "physical_mail_address_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address State"
        "physical_mail_address_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Postal Code"
        "physical_mail_address_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Status"
        "physical_mail_address_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address External Id"
        "email_group":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email Group"
        "accounting_model":
          anyOf:
            - {"$ref": "#/components/schemas/AccountingModelEnum"}
            - type: "null"
          default: "ACCRUAL"
        "auto_register":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Register"
          default: false
        "auto_file":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto File"
          default: false
        "incorporation_country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "target_archive_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Target Archive Date"
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "id"
      title: "OrganizationDetailsRead"
    "OrganizationDetailsReadSerializer":
      properties:
        "business_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Name"
        "entity_type":
          anyOf:
            - {"$ref": "#/components/schemas/EntityTypeEnum"}
            - type: "null"
        "dba":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Dba"
        "incorporation_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Incorporation State"
        "ein":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Ein"
        "company_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company Address 1"
        "company_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company Address 2"
        "company_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company City"
        "company_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company State"
        "company_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company Postal Code"
        "company_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Description"
        "home_state_registration":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Home State Registration"
        "first_operations_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "First Operations Date"
        "business_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Phone"
        "business_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Email"
        "business_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Address 1"
        "business_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Address 2"
        "business_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business City"
        "business_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business State"
        "business_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Postal Code"
        "business_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_mailing_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Mailing Address 1"
        "business_mailing_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Mailing Address 2"
        "business_mailing_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Mailing City"
        "business_mailing_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Mailing State"
        "business_mailing_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Mailing Postal Code"
        "business_mailing_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_fiscal_year_end":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Fiscal Year End"
        "business_contact_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Name"
        "business_contact_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Phone"
        "business_contact_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Email"
        "business_contact_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Contact Dob"
        "business_contact_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Title"
        "business_contact_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Address 1"
        "business_contact_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Address 2"
        "business_contact_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact City"
        "business_contact_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact State"
        "business_contact_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Postal Code"
        "business_contact_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_contact_ssn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Ssn"
        "business_contact_dl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Contact Dl"
        "business_owner1_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Name"
        "business_owner1_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Phone"
        "business_owner1_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Email"
        "business_owner1_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner1 Dob"
        "business_owner1_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Title"
        "business_owner1_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Address 1"
        "business_owner1_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Address 2"
        "business_owner1_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 City"
        "business_owner1_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 State"
        "business_owner1_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Postal Code"
        "business_owner1_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner1_ssn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Ssn"
        "business_owner1_dl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Dl"
        "business_owner1_percent_ownership":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner1 Percent Ownership"
        "business_owner2_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Name"
        "business_owner2_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Phone"
        "business_owner2_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Email"
        "business_owner2_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner2 Dob"
        "business_owner2_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Title"
        "business_owner2_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Address 1"
        "business_owner2_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Address 2"
        "business_owner2_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 City"
        "business_owner2_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 State"
        "business_owner2_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Postal Code"
        "business_owner2_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner2_ssn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Ssn"
        "business_owner2_dl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Dl"
        "business_owner2_percent_ownership":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner2 Percent Ownership"
        "business_owner3_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Name"
        "business_owner3_phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Phone"
        "business_owner3_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Email"
        "business_owner3_dob":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Business Owner3 Dob"
        "business_owner3_title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Title"
        "business_owner3_address_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Address 1"
        "business_owner3_address_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Address 2"
        "business_owner3_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 City"
        "business_owner3_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 State"
        "business_owner3_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Postal Code"
        "business_owner3_country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "business_owner3_ssn":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Ssn"
        "business_owner3_dl":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Dl"
        "business_owner3_percent_ownership":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Business Owner3 Percent Ownership"
        "physical_mail_address_line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Line1"
        "physical_mail_address_line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Line2"
        "physical_mail_address_city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address City"
        "physical_mail_address_state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address State"
        "physical_mail_address_postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Postal Code"
        "physical_mail_address_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address Status"
        "physical_mail_address_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Physical Mail Address External Id"
        "email_group":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email Group"
        "accounting_model":
          anyOf:
            - {"$ref": "#/components/schemas/AccountingModelEnum"}
            - type: "null"
        "auto_register":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Register"
        "auto_file":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto File"
        "incorporation_country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "target_archive_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Target Archive Date"
        "tax_ids":
          items: {"$ref": "#/components/schemas/OrganizationTaxIdReadSerializer"}
          type: "array"
          title: "Tax Ids"
          default: []
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "business_name"
        - "entity_type"
        - "dba"
        - "incorporation_state"
        - "ein"
        - "company_address_1"
        - "company_address_2"
        - "company_city"
        - "company_state"
        - "company_postal_code"
        - "company_country_code"
        - "business_description"
        - "home_state_registration"
        - "first_operations_date"
        - "business_phone"
        - "business_email"
        - "business_address_1"
        - "business_address_2"
        - "business_city"
        - "business_state"
        - "business_postal_code"
        - "business_country_code"
        - "business_mailing_address_1"
        - "business_mailing_address_2"
        - "business_mailing_city"
        - "business_mailing_state"
        - "business_mailing_postal_code"
        - "business_mailing_country_code"
        - "business_fiscal_year_end"
        - "business_contact_name"
        - "business_contact_phone"
        - "business_contact_email"
        - "business_contact_dob"
        - "business_contact_title"
        - "business_contact_address_1"
        - "business_contact_address_2"
        - "business_contact_city"
        - "business_contact_state"
        - "business_contact_postal_code"
        - "business_contact_country_code"
        - "business_contact_ssn"
        - "business_contact_dl"
        - "business_owner1_name"
        - "business_owner1_phone"
        - "business_owner1_email"
        - "business_owner1_dob"
        - "business_owner1_title"
        - "business_owner1_address_1"
        - "business_owner1_address_2"
        - "business_owner1_city"
        - "business_owner1_state"
        - "business_owner1_postal_code"
        - "business_owner1_country_code"
        - "business_owner1_ssn"
        - "business_owner1_dl"
        - "business_owner1_percent_ownership"
        - "business_owner2_name"
        - "business_owner2_phone"
        - "business_owner2_email"
        - "business_owner2_dob"
        - "business_owner2_title"
        - "business_owner2_address_1"
        - "business_owner2_address_2"
        - "business_owner2_city"
        - "business_owner2_state"
        - "business_owner2_postal_code"
        - "business_owner2_country_code"
        - "business_owner2_ssn"
        - "business_owner2_dl"
        - "business_owner2_percent_ownership"
        - "business_owner3_name"
        - "business_owner3_phone"
        - "business_owner3_email"
        - "business_owner3_dob"
        - "business_owner3_title"
        - "business_owner3_address_1"
        - "business_owner3_address_2"
        - "business_owner3_city"
        - "business_owner3_state"
        - "business_owner3_postal_code"
        - "business_owner3_country_code"
        - "business_owner3_ssn"
        - "business_owner3_dl"
        - "business_owner3_percent_ownership"
        - "physical_mail_address_line1"
        - "physical_mail_address_line2"
        - "physical_mail_address_city"
        - "physical_mail_address_state"
        - "physical_mail_address_postal_code"
        - "physical_mail_address_status"
        - "physical_mail_address_external_id"
        - "email_group"
        - "accounting_model"
        - "auto_register"
        - "auto_file"
        - "incorporation_country"
        - "target_archive_date"
        - "id"
      title: "OrganizationDetailsReadSerializer"
    "OrganizationExperienceTasks":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationStatusEnum"}
            - type: "null"
        "billing_plan":
          anyOf:
            - {"$ref": "#/components/schemas/BillingPlanEnum"}
            - type: "null"
        "is_test":
          type: "boolean"
          title: "Is Test"
          default: true
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
        "unpaid_filings":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Unpaid Filings"
        "unregistered_registrations":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Unregistered Registrations"
        "pending_tasks":
          type: "integer"
          title: "Pending Tasks"
          readOnly: true
      type: "object"
      required:
        - "pending_tasks"
      title: "OrganizationExperienceTasks"
    "OrganizationRead":
      properties:
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "external_id":
          type: "string"
          title: "External Id"
        "status": {"$ref": "#/components/schemas/OrganizationStatusEnum", "default": "ACTIVE"}
        "is_test":
          type: "boolean"
          title: "Is Test"
          default: true
        "billing_plan": {"$ref": "#/components/schemas/BillingPlanEnum", "default": "FREE"}
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationSourceEnum"}
            - type: "null"
        "promo":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Promo"
        "disable_emails":
          type: "boolean"
          title: "Disable Emails"
          default: false
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
        "subscription_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Subscription Id"
        "scheduled_deletion":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Scheduled Deletion"
        "collected_tax_enabled":
          type: "boolean"
          title: "Collected Tax Enabled"
          default: false
        "email_group":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email Group"
        "internal_use":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Internal Use"
          description: "This organization is used for internal testing purposes only"
          default: false
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "name"
        - "external_id"
        - "source"
        - "promo"
        - "id"
      title: "OrganizationRead"
    "OrganizationReadWithSettings":
      properties:
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "external_id":
          type: "string"
          title: "External Id"
        "status": {"$ref": "#/components/schemas/OrganizationStatusEnum", "default": "ACTIVE"}
        "is_test":
          type: "boolean"
          title: "Is Test"
          default: true
        "billing_plan": {"$ref": "#/components/schemas/BillingPlanEnum", "default": "FREE"}
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationSourceEnum"}
            - type: "null"
        "promo":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Promo"
        "disable_emails":
          type: "boolean"
          title: "Disable Emails"
          default: false
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
        "subscription_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Subscription Id"
        "scheduled_deletion":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Scheduled Deletion"
        "collected_tax_enabled":
          type: "boolean"
          title: "Collected Tax Enabled"
          default: false
        "email_group":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email Group"
        "internal_use":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Internal Use"
          description: "This organization is used for internal testing purposes only"
          default: false
        "id":
          type: "string"
          title: "Id"
        "settings":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationSettingsResponse"}
            - type: "null"
      type: "object"
      required:
        - "name"
        - "external_id"
        - "source"
        - "promo"
        - "id"
      title: "OrganizationReadWithSettings"
    "OrganizationSettingsReadUpdate":
      properties:
        "disable_onboarding":
          type: "boolean"
          title: "Disable Onboarding"
        "enable_eu_registration":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Enable Eu Registration"
      type: "object"
      required:
        - "disable_onboarding"
        - "enable_eu_registration"
      title: "OrganizationSettingsReadUpdate"
    "OrganizationSettingsResponse":
      properties:
        "disable_onboarding":
          type: "boolean"
          title: "Disable Onboarding"
        "enable_eu_registration":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Enable Eu Registration"
        "product_category_version":
          type: "string"
          title: "Product Category Version"
        "oss_scheme":
          anyOf:
            - {"$ref": "#/components/schemas/OssTypeEnum"}
            - type: "null"
      type: "object"
      required:
        - "disable_onboarding"
        - "enable_eu_registration"
        - "product_category_version"
        - "oss_scheme"
      title: "OrganizationSettingsResponse"
    "OrganizationSourceEnum":
      type: "string"
      enum:
        - "PARTNER"
        - "SEARCH"
        - "LINKEDIN"
        - "LINKEDIN_AD"
        - "GOOGLE_AD"
        - "REFERRAL"
        - "UNKNOWN"
      title: "OrganizationSourceEnum"
    "OrganizationStatusEnum":
      type: "string"
      enum:
        - "ACTIVE"
        - "ARCHIVED"
      title: "OrganizationStatusEnum"
    "OrganizationTaxIdReadSerializer":
      properties:
        "tax_id":
          type: "string"
          title: "Tax Id"
        "state_code":
          type: "string"
          title: "State Code"
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum"}
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "tax_id"
        - "state_code"
        - "country_code"
        - "id"
      title: "OrganizationTaxIdReadSerializer"
    "OrganizationUpdate":
      properties:
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationSourceEnum"}
            - type: "null"
        "promo":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Promo"
      type: "object"
      required:
        - "name"
        - "street_1"
        - "street_2"
        - "city"
        - "state"
        - "postal_code"
        - "country"
        - "source"
        - "promo"
      title: "OrganizationUpdate"
    "OssCountryStatusEnum":
      type: "string"
      enum:
        - "ACTIVE"
        - "REMOVED"
      title: "OssCountryStatusEnum"
      description: "Status of a country within an OSS registration."
    "OssRegistrationCountryRead":
      properties:
        "id":
          type: "string"
          title: "Id"
          description: "The unique identifier for the OSS registration country."
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The EU country code covered by the OSS registration."}
        "effective_date":
          type: "string"
          format: "date"
          title: "Effective Date"
          description: "The date from which this country is officially covered by the OSS registration."
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "The date this country ceased to be covered by the OSS registration (if applicable)."
        "status": {"$ref": "#/components/schemas/OssCountryStatusEnum", "description": "The current status of this country's enrollment in the OSS registration."}
      type: "object"
      required:
        - "id"
        - "country_code"
        - "effective_date"
        - "status"
      title: "OssRegistrationCountryRead"
    "OssTypeEnum":
      type: "string"
      enum:
        - "UNION"
        - "NON_UNION"
      title: "OssTypeEnum"
      description: "Type of OSS registration."
    "Page_AttachmentRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/AttachmentRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[AttachmentRead]"
    "Page_Attachment_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/Attachment"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[Attachment]"
    "Page_ConnectionRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/ConnectionRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[ConnectionRead]"
    "Page_CreditRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/CreditRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[CreditRead]"
    "Page_CustomerRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/CustomerRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[CustomerRead]"
    "Page_FilingRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/FilingRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[FilingRead]"
    "Page_Import_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/Import"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[Import]"
    "Page_MarketplaceTransaction_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/MarketplaceTransaction"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[MarketplaceTransaction]"
    "Page_NexusResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/NexusResponse"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[NexusResponse]"
    "Page_OrganizationExperienceTasks_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/OrganizationExperienceTasks"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[OrganizationExperienceTasks]"
    "Page_OrganizationRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/OrganizationRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[OrganizationRead]"
    "Page_PhysicalNexusRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/PhysicalNexusRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[PhysicalNexusRead]"
    "Page_ProductRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/ProductRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[ProductRead]"
    "Page_RegistrationReadWithPassword_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/RegistrationReadWithPassword"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[RegistrationReadWithPassword]"
    "Page_TransactionAddressRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/TransactionAddressRead-Output"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[TransactionAddressRead]"
    "Page_TransactionEstimateResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/TransactionEstimateResponse"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[TransactionEstimateResponse]"
    "Page_TransactionRead_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/TransactionRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[TransactionRead]"
    "Partner":
      properties:
        "id":
          type: "string"
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
      type: "object"
      required:
        - "name"
      title: "Partner"
    "PaymentMethod":
      properties:
        "object":
          type: "string"
          title: "Object"
        "type":
          type: "string"
          title: "Type"
        "reference_id":
          type: "string"
          title: "Reference Id"
        "gateway":
          type: "string"
          title: "Gateway"
        "gateway_account_id":
          type: "string"
          title: "Gateway Account Id"
        "status":
          type: "string"
          title: "Status"
      type: "object"
      required:
        - "object"
        - "type"
        - "reference_id"
        - "gateway"
        - "gateway_account_id"
        - "status"
      title: "PaymentMethod"
    "PendingInvitesResponse":
      properties:
        "invites":
          items: {"$ref": "#/components/schemas/InviteResponse"}
          type: "array"
          title: "Invites"
        "total_invites":
          type: "integer"
          title: "Total Invites"
        "page_size":
          type: "integer"
          title: "Page Size"
        "current_page":
          type: "integer"
          title: "Current Page"
        "has_more_results":
          type: "boolean"
          title: "Has More Results"
      type: "object"
      required:
        - "invites"
        - "total_invites"
        - "page_size"
        - "current_page"
        - "has_more_results"
      title: "PendingInvitesResponse"
    "PeriodModelEnum":
      type: "string"
      enum:
        - "CURRENT_OR_PREVIOUS"
        - "PRECEDING_YEAR_FROM_OCTOBER"
        - "CALENDAR_YEAR"
        - "PREVIOUS_12_MONTHS"
        - "PREVIOUS_4_QUARTERS"
        - "PREVIOUS_4_QUARTERS_OFFSET"
        - "PRECEDING_YEAR"
        - "PRECEDING_YEAR_QUARTERLY"
        - "PRECEDING_YEAR_QUARTERLY_OFFSET"
      title: "PeriodModelEnum"
    "PhysicalNexusCategories":
      properties:
        "name":
          type: "string"
          title: "Name"
        "title":
          type: "string"
          title: "Title"
        "description":
          type: "string"
          title: "Description"
        "example":
          type: "string"
          title: "Example"
        "is_category_assigned":
          type: "boolean"
          title: "Is Category Assigned"
      type: "object"
      required:
        - "name"
        - "title"
        - "description"
        - "example"
        - "is_category_assigned"
      title: "PhysicalNexusCategories"
    "PhysicalNexusCategory":
      type: "string"
      enum:
        - "PHYSICAL_BUSINESS_LOCATION"
        - "TELECOMMUTING_OR_REMOTE_EMPLOYEE"
        - "WARRANTY_AND_REPAIR_SERVICES"
        - "CATALOGUE_DISTRIBUTION_OR_ADVERTISING_MATERIAL"
        - "DELIVERY_BY_COMMON_CARRIER"
        - "DELIVERY_BY_OWN_VEHICLES"
        - "IN_STATE_SALES_PERSON"
        - "INDEPENDENT_CONTRACTOR_OR_THIRD_PARTY_SALES_PERSON"
        - "WAREHOUSE_AND_INVENTORY_PRESENCE"
        - "EMPLOYEES_AGENTS_CONTRACTORS"
        - "OWN_LEASE_A_PROPERTY"
        - "INVENTORY"
        - "DELIVERY_USING_COMPANY_VEHICLES"
        - "OWN_BUSINESS_INFRASTRUCTURE_AND_EQUIPMENT"
        - "ON_SITE_INSTALLATION_MAINTENANCE_SERVICES"
        - "FREQUENT_PARTICIPATION_IN_TRADE_SHOWS_EVENTS"
        - "MANUFACTURE_OR_PRODUCTION_IN_CANADA"
        - "PERFORMING_SERVICES_IN_THE_JURISDICTION"
        - "MANUFACTURING_FACILITIES"
        - "SERVERS_DATA_CENTERS"
        - "TRADE_SHOW_PRESENCE"
        - "DIGITAL_INFRASTRUCTURE_LOCALIZED"
        - "PERMANENT_ESTABLISHMENT"
      title: "PhysicalNexusCategory"
    "PhysicalNexusCreate":
      properties:
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The country code in ISO\n                                        3166-1 alpha-2 format (e.g., US)."}
        "state_code":
          type: "string"
          title: "State Code"
          description: "The state or province code in\n                            ISO 3166-2 format (e.g., CA)."
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The date when the nexus became\n                            effective (YYYY-MM-DD)."
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "The date when the\n                                        nexus ended, if applicable."
        "category": {"$ref": "#/components/schemas/PhysicalNexusCategory", "description": "The reason for the\n                                            nexus (e.g.,\n                                            'TELECOMMUTING_OR_REMOTE_EMPLOYEE')."}
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "Optional\n                                        external identifier for the nexus."
      type: "object"
      required:
        - "country_code"
        - "state_code"
        - "start_date"
        - "category"
      title: "PhysicalNexusCreate"
    "PhysicalNexusRead":
      properties:
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The country code in ISO\n                                        3166-1 alpha-2 format (e.g., US)."}
        "state_code":
          type: "string"
          title: "State Code"
          description: "The state or province code in\n                            ISO 3166-2 format (e.g., CA)."
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The date when the nexus became\n                            effective (YYYY-MM-DD)."
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "The date when the\n                                        nexus ended, if applicable."
        "category": {"$ref": "#/components/schemas/PhysicalNexusCategory", "description": "The reason for the\n                                            nexus (e.g.,\n                                            'TELECOMMUTING_OR_REMOTE_EMPLOYEE')."}
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "Optional\n                                        external identifier for the nexus."
        "id":
          type: "string"
          title: "Id"
          description: "The unique identifier for the physical nexus."
      type: "object"
      required:
        - "country_code"
        - "state_code"
        - "start_date"
        - "category"
        - "id"
      title: "PhysicalNexusRead"
    "PhysicalNexusUpdate":
      properties:
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "The date when the nexus became\n                                effective (YYYY-MM-DD)."
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "The date when the\n                                        nexus ends, if applicable (YYYY-MM-DD)."
        "category": {"$ref": "#/components/schemas/PhysicalNexusCategory", "description": "The updated reason for the nexus, such as\n        PHYSICAL_BUSINESS_LOCATION or TELECOMMUTING_OR_REMOTE_EMPLOYEE, etc."}
      type: "object"
      required:
        - "start_date"
        - "category"
      title: "PhysicalNexusUpdate"
    "PortalSessionHostedPage":
      properties:
        "access_url":
          type: "string"
          title: "Access Url"
        "created_at":
          type: "integer"
          title: "Created At"
        "customer_id":
          type: "string"
          title: "Customer Id"
        "expires_at":
          type: "integer"
          title: "Expires At"
        "id":
          type: "string"
          title: "Id"
        "linked_customers":
          items: {"$ref": "#/components/schemas/LinkedCustomer"}
          type: "array"
          title: "Linked Customers"
        "object":
          type: "string"
          title: "Object"
        "redirect_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Redirect Url"
        "status":
          type: "string"
          title: "Status"
        "token":
          type: "string"
          title: "Token"
      type: "object"
      required:
        - "access_url"
        - "created_at"
        - "customer_id"
        - "expires_at"
        - "id"
        - "linked_customers"
        - "object"
        - "status"
        - "token"
      title: "PortalSessionHostedPage"
    "Price":
      properties:
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
        "tax_inclusive":
          type: "boolean"
          title: "Tax Inclusive"
      type: "object"
      required:
        - "amount"
        - "tax_inclusive"
      title: "Price"
    "ProcessingStatusEnum":
      type: "string"
      enum:
        - "NEW"
        - "UPDATED"
        - "QUEUED"
        - "ADDRESS_DONE"
        - "EXEMPT_DONE"
        - "NEXUS_DONE"
        - "PROCESSED"
        - "FILING_STARTED"
        - "FILING_DONE"
        - "LOCKED"
        - "PENDING"
        - "ARCHIVED"
        - "NEEDS_REFETCH"
      title: "ProcessingStatusEnum"
      description: "Our transaction state, used to determine when/if a transaction needs additional\nprocessing."
    "ProductCatCreateUpdate":
      properties:
        "name":
          type: "string"
          title: "Name"
        "description":
          type: "string"
          title: "Description"
        "product_category": {"$ref": "#/components/schemas/ProductCategoryEnum"}
        "product_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
        "product_code": {"$ref": "#/components/schemas/ProductCodeEnum"}
        "product_example":
          type: "string"
          title: "Product Example"
      type: "object"
      required:
        - "name"
        - "description"
        - "product_category"
        - "product_subcategory"
        - "product_code"
        - "product_example"
      title: "ProductCatCreateUpdate"
    "ProductCatRead":
      properties:
        "id":
          type: "string"
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
        "name":
          type: "string"
          title: "Name"
        "description":
          type: "string"
          title: "Description"
        "product_category": {"$ref": "#/components/schemas/ProductCategoryEnum"}
        "product_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
        "product_code": {"$ref": "#/components/schemas/ProductCodeEnum"}
        "product_example":
          type: "string"
          title: "Product Example"
      type: "object"
      title: "ProductCatRead"
    "ProductCategories":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Name of the product category\n            (e.g., PHYSICAL, SERVICE, DIGITAL, MISCELLANEOUS)"
        "subcategories":
          items: {"$ref": "#/components/schemas/ProductSubCategory"}
          type: "array"
          title: "Subcategories"
          description: "List of subcategories associated with the product category"
      type: "object"
      required:
        - "name"
        - "subcategories"
      title: "ProductCategories"
    "ProductCategoryEnum":
      type: "string"
      enum:
        - "PHYSICAL"
        - "DIGITAL"
        - "SERVICE"
        - "UNKNOWN"
        - "MISCELLANEOUS"
      title: "ProductCategoryEnum"
    "ProductCodeByCategoryEnum":
      enum:
        - {"category": "Digital", "description": "Software as a Service designed for business-to-business interactions.", "example": "Enterprise resource planning (ERP) systems.", "subcategory": "B2B SaaS"}
        - {"category": "Digital", "description": "Software as a Service aimed at consumers.", "example": "Personal finance management tools.", "subcategory": "B2C SaaS"}
        - {"category": "Digital", "description": "Software applications provided to businesses over a network, hosted on servers not located at the customer's premises.", "example": "Salesforce (CRM), Microsoft 365 (Business), Google Workspace, SAP S/4HANA Cloud, Workday", "subcategory": "Hosted Software with Server Off-Premise B2B"}
        - {"category": "Digital", "description": "Software applications provided to individual consumers over a network, hosted on servers not located at the consumer's premises.", "example": "Streaming services (Netflix/Spotify software), Online games (cloud-hosted), Personal cloud storage apps, Web-based email clients, Freemium SaaS (consumer)", "subcategory": "Hosted Software with Server Off-Premise B2C"}
        - {"category": "Digital", "description": "Charges billed to a business specifically for initial installation, configuration, or setup of an ASP or hosted software service.", "example": "SaaS onboarding fee, Hosted software setup charge, ASP configuration fee, Cloud application deployment fee, Initial user setup (ASP)", "subcategory": "Installation/Setup Fees for Hosted Software B2B"}
        - {"category": "Digital", "description": "Charges billed to an individual consumer specifically for initial installation, configuration, or setup of an ASP or hosted software service.", "example": "Consumer SaaS setup fee, Hosted game installation charge, Personal cloud setup assistance, Streaming service activation fee, Online app configuration support", "subcategory": "Installation/Setup Fees for Hosted Software B2C"}
        - {"category": "Digital", "description": "Infrastructure as a Service for businesses, offering virtualized computing resources like virtual machines, storage, and networks.", "example": "AWS EC2 instances (business), Azure Virtual Machines (B2B), Google Compute Engine (enterprise), Cloud storage (business tier), Dedicated hosting (IaaS)", "subcategory": "IaaS B2B"}
        - {"category": "Digital", "description": "Infrastructure as a Service for individual consumers, offering access to fundamental computing resources like virtual servers or storage.", "example": "Personal cloud servers (VPS), Consumer cloud storage, Hobbyist virtual machines, Developer sandbox (IaaS), Personal VPN (self-hosted IaaS)", "subcategory": "IaaS B2C"}
        - {"category": "Digital", "description": "Platform as a Service for businesses, offering a platform for developing, running, and managing applications without managing infrastructure.", "example": "AWS Elastic Beanstalk (business), Azure App Service (B2B), Google App Engine (enterprise), Heroku (professional tier), Salesforce Platform", "subcategory": "PaaS B2B"}
        - {"category": "Digital", "description": "Platform as a Service for individual consumers/developers, offering a platform for creating, deploying, and managing personal applications.", "example": "Free/hobbyist PaaS tiers, Developer PaaS (individual accounts), App building platforms (consumer), Cloud development environments (personal), Serverless functions (personal use)", "subcategory": "PaaS B2C"}
        - {"category": "Digital", "description": "A service model where digital data is stored on third-party servers and accessed via a network like the internet.", "example": "Dropbox, Google Drive, iCloud, OneDrive, Amazon S3 (personal/business)", "subcategory": "Cloud or Remote Storage"}
        - {"category": "Digital", "description": "Pre-existing software installed by a vendor directly onto an individual consumer's device, where the vendor does not provide ongoing hosting.", "example": "Home productivity software (installed by tech), Anti-virus setup (on-site), Game installation service (local), Educational software (vendor installed), OS installation (by technician)", "subcategory": "Canned Software Load & Leave B2C"}
        - {"category": "Digital", "description": "Pre-existing software acquired by individual consumers via electronic download for installation on their personal devices.", "example": "Downloaded games, Productivity apps (download), Utility software (ESD), Mobile apps (purchased/downloaded), Creative software (download license)", "subcategory": "Canned Software Downloaded B2C"}
        - {"category": "Digital", "description": "Pre-existing software delivered to individual consumers on tangible storage media like CDs, DVDs, or USB drives.", "example": "Games on DVD, OS on USB drive, Productivity suite (CD-ROM), Educational software (boxed), Tax software (physical media)", "subcategory": "Canned Software Physical Media B2C"}
        - {"category": "Digital", "description": "Pre-existing software for educational purposes, licensed and delivered to educational institutions or businesses via electronic download.", "example": "Learning Management Systems (LMS downloaded), Classroom software (institutional download), Training simulation software (B2B ESD), Educational game licenses (bulk download), K-12 curriculum software (download)", "subcategory": "Canned Educational Software Downloaded B2B"}
        - {"category": "Digital", "description": "General-purpose or business-specific pre-existing software (not primarily educational) licensed and delivered to businesses via electronic download.", "example": "Office productivity suites (B2B download), Accounting software (download license), CRM software (downloaded), Design software (B2B ESD), Project management tools (download)", "subcategory": "Canned Non-Educational Software Downloaded B2B"}
        - {"category": "Digital", "description": "Computer programs and associated documentation designed for and licensed to businesses for various operational or productivity functions.", "example": "ERP systems, CRM software, Business analytics tools, Accounting software, Project management software", "subcategory": "Software B2B"}
        - {"category": "Digital", "description": "Computer programs and associated documentation designed for and licensed to individual consumers for personal use, entertainment, or productivity.", "example": "Video games, Personal productivity apps, Antivirus software (consumer), Photo editing software (personal), Mobile apps (consumer)", "subcategory": "Software B2C"}
        - {"category": "Digital", "description": "Pre-existing software installed by a vendor directly onto a business customer's hardware, where the vendor does not provide ongoing hosting.", "example": "On-premise ERP installation, Vendor-installed accounting software, Local server application setup, Desktop productivity suite (on-site install), Machine-specific control software", "subcategory": "Canned Software Load & Leave B2B"}
        - {"category": "Digital", "description": "Pre-existing software acquired by businesses through electronic download, for installation on their own systems.", "example": "Microsoft Office (volume license download), Adobe Creative Suite (B2B download), Accounting software (ESD), CAD software (download), Server software licenses (downloaded)", "subcategory": "Canned Software Downloaded B2B"}
        - {"category": "Digital", "description": "Pre-existing software delivered to businesses on tangible storage media such as CDs, DVDs, or USB drives.", "example": "ERP software (on DVD), CAD/CAM on USB, Boxed office suites, Industry-specific software (CD), Archived software (physical)", "subcategory": "Canned Software Physical Media B2B"}
        - {"category": "Digital", "description": "Software designed to operate and manage computer hardware and provide a platform for running application software.", "example": "Operating systems (Windows/macOS/Linux), Device drivers, Utility programs, Firmware, Boot loaders", "subcategory": "System Software"}
        - {"category": "Digital", "description": "Granting permission or providing means to use a computer workstation, often for a specified period or purpose, including shared/public computers.", "example": "Internet cafe access, Library computer use, Co-working space hot desk, Kiosk computer session, Pay-per-use terminal", "subcategory": "Computer Use Access Fee"}
        - {"category": "Digital", "description": "Unique software for specific business needs, installed directly onto client's hardware by vendor, without ongoing vendor hosting.", "example": "Bespoke on-premise ERP, Custom local database app, Tailored B2B desktop tool, Vendor-installed proprietary software, Client-server custom application", "subcategory": "Custom Software Load & Leave"}
        - {"category": "Digital", "description": "Unique software for specific business needs, delivered to client via electronic download for installation on their systems.", "example": "Bespoke CRM (downloaded), Custom ERP modules (ESD), Tailored B2B app (download), Proprietary analysis tool (download), Custom e-commerce platform (client-hosted)", "subcategory": "Custom Software Downloaded"}
        - {"category": "Digital", "description": "Unique software for specific business needs, delivered to client on tangible storage media like CDs, DVDs, or USB drives.", "example": "Bespoke software on CD (B2B), Custom application (USB delivery), Tailored ERP system (physical media), Proprietary tool (on DVD for business), Custom database app (physical install media)", "subcategory": "Custom Software Physical Media"}
        - {"category": "Digital", "description": "Services to alter or add features to existing prewritten software to meet specific user requirements, without changing core code.", "example": "Configuring modules, Setting user parameters, Creating report templates, Scripting for integration, Workflow adjustments (COTS)", "subcategory": "Canned Software Customization"}
        - {"category": "Digital", "description": "Services for businesses involving automated or manual processing of data, where the results or output are delivered electronically.", "example": "Electronic payroll processing, B2B data analysis reports (digital), Digital claims processing, E-statements, Cloud data transformation services", "subcategory": "Data Processing Electronic Output B2B"}
        - {"category": "Digital", "description": "Services provided to businesses involving the collection, manipulation, computation, or organization of data, often automated.", "example": "B2B payroll processing, Claims processing services, Business data entry, Market research data analysis, Batch data conversion (B2B)", "subcategory": "Data Processing B2B"}
        - {"category": "Digital", "description": "Charges incurred by businesses for the right to access or retrieve information from databases, platforms, or information services.", "example": "Database subscription fees (B2B), API access charges, Financial data feed fees, Legal research platform access, Market intelligence report access", "subcategory": "Data Access Fees B2B"}
        - {"category": "Digital", "description": "Charges incurred by individual consumers for the right to access information from online databases, content platforms, or specialized services.", "example": "Premium content subscription, Online archive access fees, Genealogy database access, Consumer credit report fees, Pay-per-view data services", "subcategory": "Data Access Fees B2C"}
        - {"category": "Digital", "description": "Services involving manipulation or computation of data where final results are delivered in a digital or electronic format.", "example": "Digital report, E-statement processing, Online data analysis, Cloud data transformation, Electronic data interchange (EDI)", "subcategory": "Data Processing Electronic Output B2C"}
        - {"category": "Digital", "description": "Services involving manipulation or computation of data where final results are delivered in a tangible, physical format.", "example": "Printed report, Direct mail processing, Check printing services, Physical document archiving, Label printing services", "subcategory": "Data Processing Physical Output"}
        - {"category": "Digital", "description": "The collection and manipulation of items of data to produce meaningful information, a general term covering various computation or data organization tasks.", "example": "Data entry, Data conversion, Information processing, Reports, Statistical analysis", "subcategory": "Data Processing B2C"}
        - {"category": "Digital", "description": "Recordings of books being read aloud, distributed and consumed in digital formats such as MP3 or proprietary app-based files.", "example": "Audible audiobooks, MP3 audiobooks, Digital book narrations, Downloadable audiobooks, Streaming audiobooks", "subcategory": "Audio Books"}
        - {"category": "Digital", "description": "Elective ongoing electronic delivery of software updates and version upgrades for custom-developed software, purchased separately (no other support).", "example": "Optional custom SW upgrades (ESD), Elective version enhancements (download), Add-on patch service (custom electronic), A la carte custom software updates, Separately purchased upgrade-only plan", "subcategory": "Custom Software Support - Optional - Electronic Updates/Upgrades Only"}
        - {"category": "Digital", "description": "Elective ongoing software updates/upgrades for custom software (installed on client hardware), purchased separately (no other support).", "example": "Optional custom SW upgrades (on-prem), Elective version enhancements (local install), Add-on patch service (custom local), A la carte custom software updates (load & leave), Separately purchased upgrade-only plan (local)", "subcategory": "Custom Software Support - Optional - Load & Leave Updates/Upgrades Only"}
        - {"category": "Digital", "description": "Elective ongoing delivery of software updates and version upgrades for custom-developed software, purchased separately (no other support services).", "example": "Optional custom SW upgrades, Elective version enhancements, Add-on patch service (custom), A la carte custom software updates, Separately purchased upgrade-only plan (custom)", "subcategory": "Custom Software Support - Optional - Updates/Upgrades Only"}
        - {"category": "Digital", "description": "Elective ongoing software updates/upgrades for prewritten software (installed on client hardware by vendor), purchased separately (no other support).", "example": "Optional COTS upgrades (on-prem), Elective version enhancements (local install), Add-on patch service (local COTS), A la carte prewritten software updates (load & leave), Separately purchased upgrade-only plan (local)", "subcategory": "Canned Software Support - Optional - Load & Leave Updates/Upgrades Only"}
        - {"category": "Digital", "description": "An elective service contract for future repair or maintenance of Tangible Personal Property (excluding software), purchased with the TPP.", "example": "Extended hardware warranty, Appliance service plan, Equipment maintenance contract, Furniture protection plan, Vehicle service agreement (optional)", "subcategory": "Optional Maintenance Agreement with TPP Sales"}
        - {"category": "Digital", "description": "Any Digital good outside of Kintsugi's defined categories", "example": "Any Digital good outside of Kintsugi's defined categories", "subcategory": "General Digital Goods - No TPP"}
        - {"category": "Misc", "description": "Reductions from the usual price of goods or services, offered for various reasons like promotions or volume purchases.", "example": "Percentage off, Fixed amount off, Buy-one-get-one, Seasonal sale, Clearance discount", "subcategory": "Discounts - General"}
        - {"category": "Misc", "description": "Price reductions achieved by customers redeeming accumulated points or credits earned through a customer loyalty program.", "example": "Points redemption, Rewards cash-back, Frequent buyer discount, Tiered loyalty savings, Gamified rewards", "subcategory": "Discounts - Loyalty Rewards Points"}
        - {"category": "Misc", "description": "A price reduction by a retailer for customer paying an invoice early, applied after the initial point of sale.", "example": "2/10 net 30 terms, Prompt payment discount, Early settlement discount, Invoice credit (early pay), Account balance reduction", "subcategory": "Discounts - Cash (Retailer Early Payment, After POS)"}
        - {"category": "Misc", "description": "A price reduction by a retailer at point of sale if customer makes immediate cash payment or meets other early payment conditions.", "example": "Immediate payment discount, Upfront cash reduction, Pay-now-save offer, POS early settlement, Instant cash rebate", "subcategory": "Discounts - Cash (Retailer Early Payment, At POS)"}
        - {"category": "Misc", "description": "A price reduction offered by a retailer to customers who pay with cash instead of credit card or other non-cash methods.", "example": "Cash discount (at gas station), Pay-by-cash savings, Surcharge avoidance (cash), Dual pricing (cash lower), Cash-only price", "subcategory": "Discounts - Cash Payment (vs Credit, Retailer)"}
        - {"category": "Misc", "description": "Reductions from the usual price specifically applied to Tangible Personal Property (TPP).", "example": "Discount on goods, Price cut (merchandise), Sale on items, Reduced price (products), Special offer (tangibles)", "subcategory": "Discounts - TPP"}
        - {"category": "Misc", "description": "A partial refund by a product's manufacturer to customers after purchase, where the initial item sale was taxable.", "example": "Mail-in rebate, Instant rebate (manufacturer), Cashback offer (mfr.), Product registration rebate, Loyalty rebate (mfr.)", "subcategory": "Discount - Manufacturer Rebate"}
        - {"category": "Misc", "description": "Cards issued by retailers or organizations entitling the holder to discounts on goods or services upon presentation.", "example": "Loyalty cards (discount type), Store membership cards, Association discount cards, Senior discount cards, Student discount cards", "subcategory": "Membership Discount Cards"}
        - {"category": "Misc", "description": "Bound collections of vouchers or certificates offering discounts, special deals, or free goods/services from various businesses.", "example": "Entertainment Book, Local coupon books, Restaurant discount books, Travel coupon books, Fundraiser coupon books", "subcategory": "Books - Coupon or Discount Book"}
        - {"category": "Misc", "description": "Monetary value stored in a digital format (e.g., email, mobile app) usable as payment for goods/services, delivered via electronic means.", "example": "E-gift cards, Digital gift vouchers, Mobile gift cards, Email gift certificates, Virtual gift cards", "subcategory": "Gift Cards Electronically Delivered"}
        - {"category": "Misc", "description": "Shipping Charges separately stated, where the possession of goods get transferred at the time of Sales", "example": "Shipping Charges separately stated, where the possession of goods get transferred at the time of Sales", "subcategory": "Shipping - Title transfer at time of Sales"}
        - {"category": "Misc", "description": "Shipping Charges separately stated, where the possession of goods get transferred at customer location after possession", "example": "Shipping Charges separately stated, where the possession of goods get transferred at customer location after possession", "subcategory": "Shipping - Title transfer after Customer Possession"}
        - {"category": "Misc", "description": "Shipping and Handling charges combined", "example": "Shipping and Handling charges combined", "subcategory": "Shipping and handling combined"}
        - {"category": "Misc", "description": "Fees levied by credit card companies for various services.", "example": "Annual fees, late payment fees.", "subcategory": "Credit card processing fees"}
        - {"category": "Misc", "description": "Banking fees or Financial Transaction Fees", "example": "OD Fees, Cheque Book Fees", "subcategory": "Financial & Banking Fees"}
        - {"category": "Misc", "description": "Exempt Products & Services", "example": "Exempt Products & Services", "subcategory": "Exempt"}
        - {"category": "Physical", "description": "Any physical good outside of Kintsugi's defined categories", "example": "Barbells and dumbells.", "subcategory": "General Physical"}
        - {"category": "Physical", "description": "Medicines Sold OTC, which do not require doctors prescription", "example": "Paracetamol, Ointments for Pain Releif, Gastro Releif Gel", "subcategory": "Medicines - Over the Counter"}
        - {"category": "Physical", "description": "Common items of everyday wearing apparel designed for human use, covering a wide variety of non-specialized garments.", "example": "T-shirts, Jeans, Dresses, Socks, Underwear", "subcategory": "General Clothing"}
        - {"category": "Physical", "description": "Protective overgarments worn to shield clothing during domestic tasks such as cooking, cleaning, or crafting.", "example": "Kitchen aprons, Bib aprons, Cleaning aprons, Craft aprons, Garden aprons", "subcategory": "Apron used in Household"}
        - {"category": "Physical", "description": "Undergarments specifically designed to provide support and protection for the male genitalia during sports or physical activity.", "example": "Jockstraps, Support briefs, Cup supporters, Dance belts, Groin guards", "subcategory": "Athletic Supporters"}
        - {"category": "Physical", "description": "Square or triangular pieces of cloth, often patterned, worn on the head, around the neck, or face for practical or decorative use.", "example": "Paisley bandanas, Cotton bandanas, Silk headscarves, Neckerchiefs, Tube bandanas", "subcategory": "Bandanas"}
        - {"category": "Physical", "description": "Garments designed for wear during water-based activities like swimming or sunbathing, and associated headwear.", "example": "Bikinis, One-piece suits, Swim trunks, Rash guards, Swim caps", "subcategory": "Bathing Suits & Caps"}
        - {"category": "Physical", "description": "Accessories worn to secure or hold up garments, particularly trousers, belts encircle the waist, suspenders use shoulder straps.", "example": "Leather belts, Fabric belts, Elastic suspenders, Clip-on suspenders, Button suspenders", "subcategory": "Belts & Suspenders"}
        - {"category": "Physical", "description": "Garments worn hanging from the neck over the chest to protect clothing from spills, primarily for infants or during messy activities.", "example": "Baby bibs, Toddler bibs, Silicone bibs, Drool bibs, Adult lobster bibs", "subcategory": "Bibs"}
        - {"category": "Physical", "description": "Footwear covering the foot and ankle, and often part of the lower leg, for various uses and conditions.", "example": "Ankle boots, Chelsea boots, Cowboy boots, Hiking boots, Winter boots", "subcategory": "Boots"}
        - {"category": "Physical", "description": "Outer garments for the upper body providing warmth or protection from weather, coats are generally longer or heavier than jackets.", "example": "Trench coats, Parkas, Blazers, Denim jackets, Winter coats", "subcategory": "Coats & Jackets"}
        - {"category": "Physical", "description": "One-piece garments that cover the torso, arms, and legs, typically worn over other clothes for protection during work or specialized activities.", "example": "Work coveralls, Disposable coveralls, Boiler suits, Flight suits, Insulated coveralls", "subcategory": "Coveralls"}
        - {"category": "Physical", "description": "Absorbent pads worn under clothing in the armpit area to protect garments from perspiration stains and odor.", "example": "Disposable shields, Sew-in shields, Cotton shields, Underarm pads, Sweat guards", "subcategory": "Dress Shields"}
        - {"category": "Physical", "description": "Accessories consisting of two soft pads connected by a band, worn over the ears for warmth or noise protection.", "example": "Winter earmuffs, Fleece earmuffs, Fashion earmuffs, Noise-reduction muffs, Adjustable earmuffs", "subcategory": "Ear Muffs"}
        - {"category": "Physical", "description": "Very short, sock-like foot coverings designed to be invisible or barely visible when worn with low-cut shoes.", "example": "No-show socks, Liner socks, Peds, Invisible socks, Shoe liners", "subcategory": "Footlets"}
        - {"category": "Physical", "description": "Apparel suitable for highly formal occasions, such as tuxedos or tailcoats for men, and evening or ball gowns for women.", "example": "Tuxedos, Evening gowns, Ball gowns, Morning suits, White tie attire", "subcategory": "Formal Wear"}
        - {"category": "Physical", "description": "Waterproof overshoes, typically made of rubber, worn over regular shoes to protect them from rain, snow, or mud.", "example": "Rubber overshoes, Snow boots (pull-on), Waterproof shoe covers, Mud boots, Storm wellingtons", "subcategory": "Galoshes"}
        - {"category": "Physical", "description": "Undergarments used to hold up stockings or socks, garters are individual bands, while garter belts are waistbands with suspender straps.", "example": "Lace garter belts, Satin garters, Bridal garters, Suspender belts, Leg garters", "subcategory": "Garters & Garter Belts"}
        - {"category": "Physical", "description": "Form-fitting undergarments designed to shape or support the waist, hips, and abdomen, typically made of elasticized fabric.", "example": "Shaping girdles, Support girdles, Posture girdles, Panty girdles, Open-bottom girdles", "subcategory": "Girdles"}
        - {"category": "Physical", "description": "Hand coverings made from woven or knitted fabric, providing light protection, warmth, or for fashion purposes in everyday situations.", "example": "Cotton gloves, Jersey gloves, Knitted gloves, Parade gloves, Liner gloves", "subcategory": "General Use Gloves - Cloth"}
        - {"category": "Physical", "description": "Hand coverings made from tanned animal hides, offering durability, abrasion resistance, and often a stylish appearance for everyday wear.", "example": "Driving gloves, Dress gloves, Casual leather gloves, Unlined leather gloves, Winter leather gloves", "subcategory": "General Use Gloves - Leather"}
        - {"category": "Physical", "description": "Small hand coverings designed for children, made from various materials (cloth, wool, synthetic) for warmth, play, or basic protection.", "example": "Children's mittens, Kids' winter gloves, Toddler play gloves, Fleece gloves (child), Knitted mittens (child)", "subcategory": "General Use Gloves - Kid"}
        - {"category": "Physical", "description": "Hand coverings made from sheepskin with the wool intact, prized for exceptional softness, warmth, and breathability for everyday wear.", "example": "Sheepskin mittens, Shearling gloves, Fleece-lined sheepskin gloves, Winter sheepskin gloves, Driving gloves (sheepskin)", "subcategory": "General Use Gloves - Sheepskin"}
        - {"category": "Physical", "description": "Hand coverings made from or lined with animal fur, providing significant warmth and a luxurious appearance for general, non-specialized wear.", "example": "Mink fur gloves, Fox fur trimmed gloves, Rabbit fur mittens, Beaver fur gauntlets, Rex rabbit gloves", "subcategory": "General Use Gloves - Fur"}
        - {"category": "Physical", "description": "Waterproof hand coverings made from natural or synthetic rubber, designed for light protection during household tasks or general non-industrial activities.", "example": "Household cleaning gloves, Dishwashing gloves, Light gardening gloves, Latex gloves (non-medical), Nitrile gloves (non-medical)", "subcategory": "General Use Gloves - Rubber"}
        - {"category": "Physical", "description": "Apparel specifically designed for playing golf, emphasizing comfort, freedom of movement, and often moisture-wicking or weather-resistant properties.", "example": "Golf shirts (polos), Golf trousers/shorts, Golf sweaters/vests, Golf skirts/skorts, Golf windbreakers", "subcategory": "Golf Clothing"}
        - {"category": "Physical", "description": "Head coverings worn for various purposes including protection from weather, fashion, religious reasons, or as part of an informal uniform.", "example": "Baseball caps, Beanies, Fedoras, Sun hats, Berets", "subcategory": "Hats & Caps"}
        - {"category": "Physical", "description": "Knitted garments worn directly on the feet and legs, including items like stockings, pantyhose, tights, and various lengths of socks.", "example": "Pantyhose, Stockings, Tights, Knee-highs, Trouser socks", "subcategory": "Hosiery"}
        - {"category": "Physical", "description": "Removable pads or layers of material placed inside shoes for added comfort, support, warmth, or to improve fit. (Also known as shoe inserts).", "example": "Arch supports, Gel insoles, Memory foam inserts, Heel cups, Odor-control insoles", "subcategory": "Insoles for Shoes"}
        - {"category": "Physical", "description": "Hand coverings, typically made of soft, breathable material like cotton, used to enhance the absorption of hand creams or lotions, or for gentle hand care.", "example": "Cotton moisturizing gloves, Overnight treatment gloves, Hand spa gloves, Eczema therapy gloves, Beauty gloves (for lotion)", "subcategory": "Gloves: Cosmetic Gloves"}
        - {"category": "Physical", "description": "Garments made primarily from tanned animal hides or skins, such as jackets, pants, skirts, or vests, valued for durability and style.", "example": "Leather jackets, Leather pants, Leather skirts, Leather vests, Leather coats", "subcategory": "Leather Wearing Apparel"}
        - {"category": "Physical", "description": "Long pieces of cloth worn, typically by men, around the neck, resting under the shirt collar and knotted at the throat for formal or decorative purposes.", "example": "Silk ties, Bow ties, Skinny ties, Patterned ties, Solid color ties", "subcategory": "Neckties"}
        - {"category": "Physical", "description": "Loose, comfortable garments, typically for women and girls, designed to be worn in bed.", "example": "Sleep shirts, Chemises, Babydolls, Nightdresses, Flannel nighties", "subcategory": "Nightgowns"}
        - {"category": "Physical", "description": "Sheer, close-fitting one-piece legwear for women, covering the body from the waist to the toes.", "example": "Sheer pantyhose, Opaque pantyhose, Control-top, Fishnet pantyhose, Support pantyhose", "subcategory": "Pantyhose"}
        - {"category": "Physical", "description": "Outer garments, essentially a single large piece of fabric with an opening for the head, worn draped over the shoulders for warmth or as rainwear.", "example": "Woolen ponchos, Knitted ponchos, Rain ponchos, Fashion ponchos, Hooded ponchos", "subcategory": "Ponchos"}
        - {"category": "Physical", "description": "Formal evening gowns or dresses purchased by individuals for attending a school prom or similar formal dance event.", "example": "Ballgowns, A-line dresses, Mermaid style, Sheath dresses, Two-piece gowns", "subcategory": "Prom Dresses (Not Rented)"}
        - {"category": "Physical", "description": "Waterproof or water-resistant outer garments designed to protect the wearer from rain.", "example": "Raincoats, Rain jackets, Waterproof pants, Rain ponchos, Rain suits", "subcategory": "Rainwear"}
        - {"category": "Physical", "description": "Open types of footwear, consisting of a sole held to the wearer's foot by straps going over the instep and sometimes around the ankle.", "example": "Flip-flops, Slide sandals, Strappy sandals, Espadrilles, Wedge sandals", "subcategory": "Sandals"}
        - {"category": "Physical", "description": "Pieces of fabric worn around the neck, head, or shoulders for warmth, sun protection, fashion, or religious reasons.", "example": "Silk scarves, Wool scarves, Infinity scarves, Headscarves, Fashion scarves", "subcategory": "Scarves"}
        - {"category": "Physical", "description": "Outer coverings for the human foot, and the cords (laces) used to secure them.", "example": "Dress shoes, Casual shoes, Flat laces, Round laces, Boot laces", "subcategory": "Shoes & Shoe Laces"}
        - {"category": "Physical", "description": "Removable items placed inside footwear for added comfort, support, warmth, or to improve fit, distinct from prescribed orthotics.", "example": "Arch supports, Gel insoles, Memory foam inserts, Heel cushions, Odor-eaters", "subcategory": "Shoe Inserts"}
        - {"category": "Physical", "description": "Light, soft, and comfortable footwear designed primarily to be worn indoors, especially at home.", "example": "Moccasin slippers, Bootie slippers, Slide slippers, Fuzzy slippers, Open-heel slippers", "subcategory": "Slippers"}
        - {"category": "Physical", "description": "Shoes primarily designed for sports or other physical exercise, but also widely worn for everyday casual wear and fashion.", "example": "Running shoes, Trainers, Athletic shoes, Casual sneakers, Fashion sneakers", "subcategory": "Sneakers"}
        - {"category": "Physical", "description": "Knitted garments worn on the feet and legs, socks typically cover the foot and ankle, while stockings extend further up the leg.", "example": "Ankle socks, Crew socks, Knee-highs, Dress socks, Thigh-high stockings", "subcategory": "Socks & Stockings"}
        - {"category": "Physical", "description": "Straps of fabric or leather worn over the shoulders to hold up trousers or skirts, attaching with clips or buttons. (Also known as braces).", "example": "Clip-on suspenders, Button-on suspenders, Leather suspenders, Elastic suspenders, Y-back suspenders", "subcategory": "Suspenders"}
        - {"category": "Physical", "description": "Men's formal evening suits, typically black or midnight blue with satin facings on lapels and trousers, purchased for ownership rather than rented.", "example": "Dinner jackets, Tuxedo trousers, Cummerbunds, Bow ties (tuxedo), Formal waistcoats", "subcategory": "Tuxedos (Not Rentals)"}
        - {"category": "Physical", "description": "Garments worn next to the skin and under other clothing, including items like briefs, boxers, bras, and undershirts.", "example": "Briefs, Boxers, Bras, Panties, Undershirts", "subcategory": "Underwear"}
        - {"category": "Physical", "description": "Standardized sets of clothing worn by members of an organization (e.g., school, specific occupations) for identification or professional appearance, excluding sports uniforms.", "example": "School uniforms, Work uniforms (e.g. retail), Service uniforms, Security guard uniforms, Band uniforms", "subcategory": "Uniform, Non-Athletic"}
        - {"category": "Physical", "description": "Special attire purchased for wear by wedding party members (bride, groom, bridesmaids, groomsmen) for a wedding ceremony and reception.", "example": "Bridal gowns, Groom's suits, Bridesmaid dresses, Groomsmen attire, Flower girl dresses", "subcategory": "Wedding Apparel (Not Rented)"}
        - {"category": "Physical", "description": "Durable garments specifically designed for manual labor or particular occupations, providing protection or utility, beyond general safety apparel or specific uniforms.", "example": "Overalls, Work pants, Utility shirts, Shop coats, Heavy-duty jackets", "subcategory": "Work Clothes"}
        - {"category": "Physical", "description": "Specialized clothing designed to protect wearers from occupational or activity-specific hazards, not intended for general daily use.", "example": "High-visibility vests, Reflective jackets, Cut-resistant gloves, Flame-resistant suits, Chemical aprons", "subcategory": "Safety Apparel (Not for Everyday Wear)"}
        - {"category": "Physical", "description": "Shoes or boots designed to protect feet from workplace hazards like impact, compression, punctures, or electrical shock.", "example": "Steel-toe boots, Composite-toe shoes, Safety shoes, Puncture-resistant boots, Metatarsal guards", "subcategory": "Protective Footwear"}
        - {"category": "Physical", "description": "Sleeveless garments made of brightly colored fluorescent material with reflective tape, designed to make the wearer highly visible in low light or complex backgrounds.", "example": "Reflective vests, Fluorescent vests, ANSI class vests, Construction vests, Surveyor vests", "subcategory": "High Visibility Safety Vests"}
        - {"category": "Physical", "description": "Lightweight, flexible footwear designed for use in and around water, providing grip and protection against sharp objects on wet surfaces.", "example": "Water shoes, Swim shoes, Beach shoes, Reef shoes, Pool socks", "subcategory": "Aqua Shoes"}
        - {"category": "Physical", "description": "Items used to complement clothing outfits or for specific activities, a broad category where context (often implied by sale alongside clothing) is key.", "example": "Belts, Scarves, Hats, Bags, Gloves (fashion/utility)", "subcategory": "Accessories or Equipment"}
        - {"category": "Physical", "description": "Flat, rectangular bags, often with a handle, typically used by business people for carrying documents, laptops, or books.", "example": "Leather briefcases, Laptop bags, Attache cases, Messenger bags (structured), Portfolio cases", "subcategory": "Briefcases"}
        - {"category": "Physical", "description": "Substances applied to the human body for cleansing, beautifying, promoting attractiveness, or altering appearance, excluding soap.", "example": "Lipstick, Foundation, Mascara, Eyeshadow, Perfume", "subcategory": "Cosmetics"}
        - {"category": "Physical", "description": "Small items and accessories used for styling, holding, restraining, or decorating hair.", "example": "Barrettes, Hair bows, Hair nets, Hair elastics, Bobby pins", "subcategory": "Hair Notions (Barrettes, Bows, Hair Nets)"}
        - {"category": "Physical", "description": "Bags of various shapes and sizes, often fashionable, carried by hand or over the shoulder to hold personal items.", "example": "Tote bags, Shoulder bags, Clutches, Crossbody bags, Satchels", "subcategory": "Handbags"}
        - {"category": "Physical", "description": "Small, square pieces of cloth used for personal hygiene (e.g., wiping nose/eyes) or as a decorative pocket square.", "example": "Cotton hankies, Linen hankies, Silk pocket squares, Embroidered hankies, Patterned hankies", "subcategory": "Handkerchiefs"}
        - {"category": "Physical", "description": "Personal ornaments, such as rings, necklaces, earrings, and bracelets, often made from or containing precious metals and gemstones.", "example": "Rings, Necklaces, Earrings, Bracelets, Pendants", "subcategory": "Jewelry"}
        - {"category": "Physical", "description": "Eyewear with tinted or protective lenses, without corrective lens power, designed to shield the eyes from sunlight and glare.", "example": "Aviator sunglasses, Wayfarer sunglasses, Sport sunglasses, Fashion sunglasses, Polarized sunglasses", "subcategory": "Sunglasses, Non-Prescription"}
        - {"category": "Physical", "description": "Portable, collapsible canopies used for protection from rain or sunlight, typically consisting of a fabric cover on a folding metal frame.", "example": "Compact umbrellas, Golf umbrellas, Stick umbrellas, Bubble umbrellas, Beach umbrellas", "subcategory": "Umbrellas"}
        - {"category": "Physical", "description": "Small, flat cases, often made of leather or fabric, used to carry personal items such as paper currency, credit cards, and identification.", "example": "Bifold wallets, Trifold wallets, Cardholder wallets, Coin purses, Travel wallets", "subcategory": "Wallets"}
        - {"category": "Physical", "description": "Portable timepieces, typically worn on the wrist with a strap or as a pocket watch, for telling time and sometimes other functions.", "example": "Wristwatches, Pocket watches, Analog watches, Digital watches, Smartwatches", "subcategory": "Watches"}
        - {"category": "Physical", "description": "Items or gear designed to protect the wearer's body from injury or infection, specific types depend on context (e.g., sports, work, daily hazards).", "example": "Helmets (general), Safety glasses, Gloves (protective general), Knee pads (general), Elbow pads (general)", "subcategory": "Protective Equipment"}
        - {"category": "Physical", "description": "Coverings worn over the mouth and nose to protect the respiratory system from inhaling airborne particles, pollutants, or pathogens.", "example": "Dust masks, Surgical masks, N95 respirators, Cloth face masks, Pollution masks", "subcategory": "Breathing Masks"}
        - {"category": "Physical", "description": "Specialized garments and related items designed to minimize contamination in controlled environments by containing particles shed by the wearer or protecting the wearer.", "example": "Coveralls (cleanroom), Hoods (cleanroom), Boot covers, Face masks (cleanroom), Gloves (cleanroom)", "subcategory": "Clean Room Apparel & Equipment"}
        - {"category": "Physical", "description": "Devices worn in or over the ears to protect them from loud noises, water intrusion, or cold.", "example": "Earplugs (foam/silicone), Earmuffs (noise-reducing), Swim earplugs, Musician earplugs, Sleep earplugs", "subcategory": "Ear & Hearing Protectors"}
        - {"category": "Physical", "description": "Protective devices that cover the wearer's face (or part of it) to guard against impact, debris, splashes, or infectious agents.", "example": "Safety face shields, Medical face shields, Splash guards (face), Full-face visors, Dental face shields", "subcategory": "Face Shields"}
        - {"category": "Physical", "description": "Rigid protective helmets primarily used in workplace environments, such as construction sites, to protect the head from injury due to falling objects or impact.", "example": "Construction hard hats, Industrial safety helmets, Type I hard hats, Type II hard hats, Full brim hard hats", "subcategory": "Hard Hats"}
        - {"category": "Physical", "description": "Protective headgear specifically designed and worn by participants to prevent head injuries during various sports activities.", "example": "Bicycle helmets, Football helmets, Hockey helmets, Ski helmets, Batting helmets", "subcategory": "Helmets (Athletic)"}
        - {"category": "Physical", "description": "Protective headgear specifically designed for cyclists to reduce the risk of head injuries from impacts.", "example": "Road bike helmets, Mountain bike helmets, Commuter helmets, BMX helmets, Kids' bike helmets", "subcategory": "Helmets (Bicycle)"}
        - {"category": "Physical", "description": "Protective headgear worn by motorcycle riders to protect the head from injury in the event of an accident.", "example": "Full-face helmets, Open-face helmets, Modular helmets, Half helmets, Off-road helmets", "subcategory": "Helmets (Motorcycle)"}
        - {"category": "Physical", "description": "Protective headgear for various activities not covered by specific helmet categories, designed to prevent head injuries.", "example": "Skateboarding helmets, Ski/snowboard helmets, Equestrian helmets, Kayaking helmets, Rock climbing helmets", "subcategory": "Helmets (Other)"}
        - {"category": "Physical", "description": "Protective headgear specifically designed for snowmobile riders, offering impact protection, warmth, and often features like heated shields.", "example": "Full-face snowmobile helmets, Modular snowmobile helmets, Snocross helmets, Dual-sport snow helmets, Heated shield helmets", "subcategory": "Helmets (Snowmobile)"}
        - {"category": "Physical", "description": "Protective masks designed to prevent inhalation of paint fumes, dust particles, or other airborne contaminants during activities like painting or woodworking.", "example": "N95 dust masks, Half-mask respirators, Full-face respirators, Cartridge respirators, Disposable particulate masks", "subcategory": "Paint or Dust Respirators"}
        - {"category": "Physical", "description": "Hand coverings designed for specific tasks to protect against hazards such as cuts, chemicals, heat, or abrasion, beyond general daily use gloves.", "example": "Cut-resistant gloves, Chemical-resistant gloves, Heat-resistant gloves, Impact gloves, Work gloves (heavy-duty)", "subcategory": "Protective Gloves (Not for Everyday Wear)"}
        - {"category": "Physical", "description": "Protective eyewear designed to shield the eyes from impact, debris, dust, splashes, or harmful radiation in various environments.", "example": "Safety glasses (impact), Safety goggles (sealed), UV protection glasses, Anti-fog goggles, Chemical splash goggles", "subcategory": "Safety Glasses & Goggles"}
        - {"category": "Physical", "description": "Restraining belts designed to secure a person to prevent injury from falls or sudden movements, commonly referring to fall arrest systems or specialized work belts.", "example": "Fall arrest harnesses, Positioning belts, Lineman's belts, Construction safety belts, Tree-stand harnesses", "subcategory": "Safety Belts"}
        - {"category": "Physical", "description": "Belts worn around the waist with multiple pouches and loops designed for conveniently carrying tools and fasteners, typically used by tradespeople.", "example": "Carpenter tool belts, Electrician tool belts, Leather tool belts, Padded tool belts, Modular tool belts", "subcategory": "Tool Belts"}
        - {"category": "Physical", "description": "Protective gear for welders, including heavy-duty gloves to shield hands from heat and sparks, and masks (helmets) to protect the face and eyes.", "example": "Welding gloves (leather), Welding helmets (auto-darkening), Welding gauntlets, Handheld welding shields, Welding masks (passive)", "subcategory": "Welders Gloves & Masks"}
        - {"category": "Physical", "description": "One-piece garments designed to cover the entire body, providing protection against hazards like chemicals, particulates, or biological agents.", "example": "Disposable coveralls, Chemical resistant suits, Painters coveralls, Hazmat suits (limited use), Particulate protection suits", "subcategory": "Protective Coveralls"}
        - {"category": "Physical", "description": "Items and gear used in playing sports or engaging in recreational activities, excluding general clothing or footwear unless specialized.", "example": "Balls (soccer/basketball), Tennis rackets, Skis/snowboards, Fishing rods, Bicycles", "subcategory": "Sports/Recreational Equipment"}
        - {"category": "Physical", "description": "Specialized footwear for ballet (soft shoes or hard-toed pointe shoes) and tap dancing (shoes with metal taps).", "example": "Ballet slippers (soft), Pointe shoes, Tap shoes (oxford), Character tap shoes, Jazz tap shoes", "subcategory": "Ballet & Tap Shoes"}
        - {"category": "Physical", "description": "Athletic footwear with studs (cleats) or spikes on the soles to provide enhanced traction for sports on grass, turf, or tracks.", "example": "Football cleats, Baseball spikes, Soccer cleats, Track spikes, Golf shoes (spiked)", "subcategory": "Cleated or Spiked Athletic Shoes"}
        - {"category": "Physical", "description": "Specialized hand coverings designed to enhance performance, provide protection, or improve grip in specific sports.", "example": "Batting gloves, Bowling gloves (wrist support), Boxing gloves, Hockey gloves, Golf gloves", "subcategory": "Gloves (Baseball, Bowling, Boxing, Hockey, Golf)"}
        - {"category": "Physical", "description": "Close-fitting eyewear with protective lenses, often held by a strap, to shield eyes from impact, water, chemicals, or debris.", "example": "Swim goggles, Ski goggles, Safety goggles, Motorcycle goggles, Lab goggles", "subcategory": "Goggles"}
        - {"category": "Physical", "description": "Clothing articles, often a two-piece set, specifically designed or designated for wear during gymnastic activities or physical education.", "example": "PE uniforms, Leotards, Workout shorts, Athletic t-shirts, Warm-up suits", "subcategory": "Gym Suits"}
        - {"category": "Physical", "description": "Protective padding worn on hands, wrists, or elbows to prevent injury from impacts, falls, or abrasions, common in sports.", "example": "Wrist guards, Elbow pads, Forearm guards, Skateboarding pads, Volleyball pads", "subcategory": "Hand & Elbow Guards"}
        - {"category": "Physical", "description": "Comfortable two-piece garments (trousers and matching top) designed for athletic activities like jogging or for casual leisurewear.", "example": "Tracksuits, Sweatsuits, Warm-up suits, Fleece joggers, Hoodie sets", "subcategory": "Jogging Outfits, Sweat Suits"}
        - {"category": "Physical", "description": "Buoyant or inflatable devices worn to keep a person afloat in water, preventing drowning, includes life jackets and PFDs.", "example": "Life jackets, Inflatable PFDs, Buoyancy aids, Water ski vests, Fishing life vests", "subcategory": "Life Preservers & Vests"}
        - {"category": "Physical", "description": "Protective devices worn inside the mouth to prevent or reduce injury to teeth, arches, lips, and gums, primarily during sports.", "example": "Stock mouthguards, Boil-and-bite mouthguards, Custom-fitted mouthguards, Sports mouthguards, Dental protectors", "subcategory": "Mouth Guards"}
        - {"category": "Physical", "description": "Footwear with wheels (roller skates/blades) or metal blades (ice skates) attached to the soles, used for gliding over hard surfaces or ice.", "example": "Quad roller skates, Inline skates (rollerblades), Ice hockey skates, Figure skates, Recreational ice skates", "subcategory": "Roller & Ice Skates"}
        - {"category": "Physical", "description": "Protective equipment worn on the front of the lower legs (shins) to prevent injury from impact, commonly used in sports like soccer or hockey.", "example": "Soccer shin guards, Hockey shin guards, Field hockey shin pads, Youth shin guards, Slip-in shin guards", "subcategory": "Shin Guards"}
        - {"category": "Physical", "description": "Protective padding worn over the shoulders to absorb impacts and prevent injuries, primarily used in contact sports.", "example": "Football shoulder pads, Hockey shoulder pads, Lacrosse shoulder pads, Youth shoulder pads, Goalie shoulder pads", "subcategory": "Shoulder Pads"}
        - {"category": "Physical", "description": "Specialized, rigid footwear designed to attach to skis via bindings, providing support, control, and warmth for skiing.", "example": "Alpine ski boots, Touring ski boots, Downhill ski boots, Cross-country ski boots, Race ski boots", "subcategory": "Ski Boots"}
        - {"category": "Physical", "description": "Standardized sets of clothing worn by individuals or teams when participating in specific sports, designed for performance, identification, and team cohesion.", "example": "Soccer jerseys, Basketball uniforms, Baseball uniforms, Track singlets, Volleyball jerseys", "subcategory": "Uniform, Athletic"}
        - {"category": "Physical", "description": "Waterproof garments, typically boots extending up to the chest or waist, worn for walking or standing in water, common for anglers or wet work.", "example": "Chest waders, Hip waders, Boot-foot waders, Stocking-foot waders, Fishing waders", "subcategory": "Waders"}
        - {"category": "Physical", "description": "Animal skins with the hair still attached, processed and used to make or trim garments and accessories.", "example": "Mink coats, Fox stoles, Rabbit fur hats, Shearling jackets, Fur collars", "subcategory": "Fur"}
        - {"category": "Physical", "description": "Hand coverings designed for specific protective or functional purposes beyond everyday casual wear, such as for sports or specialized work.", "example": "Work gloves (specific task), Sports gloves (e.g. hockey), Chemical resistant gloves, Medical gloves, Insulated work gloves", "subcategory": "Gloves for Non-General Use"}
        - {"category": "Physical", "description": "Close-fitting garments, typically made of neoprene, providing thermal insulation for activities in cold water, such as surfing, diving, or triathlon.", "example": "Full wetsuits, Shorty wetsuits, Spring suits, Drysuits (related), Neoprene tops/bottoms", "subcategory": "Wetsuits"}
        - {"category": "Physical", "description": "Foot-worn paddle-like devices that increase propulsion and efficiency when swimming or moving through water.", "example": "Snorkeling fins, Scuba diving fins, Training fins, Bodyboarding fins, Freediving fins", "subcategory": "Swim Fins"}
        - {"category": "Physical", "description": "Breathing tubes, typically L or J-shaped, allowing a swimmer to breathe surface air while their face is submerged in water.", "example": "Classic snorkels, Dry snorkels, Semi-dry snorkels, Flexible snorkels, Roll-up snorkels", "subcategory": "Snorkels"}
        - {"category": "Physical", "description": "Watertight coverings for the eyes, and often the nose, allowing swimmers or divers to see clearly underwater while protecting the eyes.", "example": "Dive masks, Snorkeling masks, Full-face snorkel masks, Prescription swim masks, Kids' swim masks", "subcategory": "Swimming Mask"}
        - {"category": "Physical", "description": "Substances used to impart or change the color of fabrics and clothing for personal, non-commercial crafting or customization.", "example": "Rit dye (all-purpose), Acid dyes (wool/silk), Fiber reactive dyes (cotton), Natural dyes, Tie-dye kits", "subcategory": "Sewing Supplies (Non-Commercial) - Clothing Dye"}
        - {"category": "Physical", "description": "Services performed to adjust the fit, mend, or modify existing clothing items, when not part of the original purchase transaction of the clothing.", "example": "Hemming pants, Taking in seams, Zipper replacement, Patching holes, Sleeve shortening", "subcategory": "Clothing Alteration/Repair (Not with Clothing Sale)"}
        - {"category": "Physical", "description": "A printing technique where a mesh screen is used to transfer ink onto clothing, creating designs, logos, or text.", "example": "Custom T-shirt printing, Hoodie graphics (screened), Band merchandise printing, Team jersey logos, Event apparel designs", "subcategory": "Screen Printing (On Clothing)"}
        - {"category": "Physical", "description": "A fee charged by a solar company when a home with a leased solar panel system or PPA is sold, to transfer the contract to the new homeowner.", "example": "Solar lease transfer fee, PPA assignment fee, System transfer processing, Contract assumption charge, New owner onboarding (solar)", "subcategory": "Solar Homeowner Transfer Fee"}
        - {"category": "Physical", "description": "Devices designed for emergency situations that are powered by solar energy, such as lights, radios, or chargers.", "example": "Solar emergency lights, Solar crank radios, PV phone chargers (emergency), Solar first aid kits (powered components), Portable solar power packs", "subcategory": "Solar Powered Emergency Equipment"}
        - {"category": "Physical", "description": "Electrical cables and protective conduits used on the AC side of a solar PV system, from inverter output to the point of interconnection.", "example": "Inverter output cable, AC wiring (solar), Main panel connection wire, AC conduit runs, Interconnection cabling", "subcategory": "Solar Retail AC Cable & Conduit (Generation)"}
        - {"category": "Physical", "description": "Electrical cables and conduits for transmitting AC power over longer distances within or from a solar installation, beyond immediate generation.", "example": "AC feeder cables, Subpanel connection wires, Long-distance AC runs, Underground AC conduit, Overhead AC lines (solar farm)", "subcategory": "Solar Retail AC Cable & Conduit (Transmission)"}
        - {"category": "Physical", "description": "Components within a solar PV system that operate on or manage direct current (DC) electricity from solar panels before inversion.", "example": "Solar panels (modules), Charge controllers, DC disconnects, Combiner boxes, DC wiring/cables", "subcategory": "Solar Retail DC Equipment"}
        - {"category": "Physical", "description": "Electrical wiring and components connecting a backup generator to a building's electrical system, often via a transfer switch.", "example": "Generator interlock kits, Transfer switch wiring, Backup power cables, Gen-to-panel connection, Emergency power lines", "subcategory": "Solar Retail Generator Tie Line"}
        - {"category": "Physical", "description": "An electrical power electronics device that converts direct current (DC) from sources like solar panels or batteries into alternating current (AC).", "example": "Grid-tie inverters, Off-grid inverters, Hybrid inverters, String inverters, Central inverters", "subcategory": "Solar Retail Inverter"}
        - {"category": "Physical", "description": "Small inverters installed directly on individual solar panels, converting DC to AC at the panel level for per-panel optimization.", "example": "Single-panel microinverters, Dual-panel microinverters, AC module inverters, Module-level inverters, Enphase IQ series", "subcategory": "Solar Retail Microinverters"}
        - {"category": "Physical", "description": "Vertical support structures, typically steel pipes or beams, driven or set into the ground for ground-mounted solar racking systems.", "example": "Steel I-beams, Driven piles, Concrete piers, Schedule 40 pipes, Foundation posts", "subcategory": "Solar Retail Groundmount Posts"}
        - {"category": "Physical", "description": "Photovoltaic (PV) devices comprising an assembly of connected solar cells that absorb sunlight to generate electricity.", "example": "Monocrystalline panels, Polycrystalline panels, Thin-film panels, Bifacial modules, Shingled panels", "subcategory": "Solar Retail Modules, Panels"}
        - {"category": "Physical", "description": "Components used to electrically connect solar panels and racking systems to the earth (grounding) and to each other (bonding) for electrical safety.", "example": "Grounding lugs, Grounding clips, Bonding jumpers, Copper wire (grounding), WEEBs (washers)", "subcategory": "Solar Retail Panel Grounding, Bonding Comp."}
        - {"category": "Physical", "description": "Frameworks and components, such as rails, clamps, and bolts, used to securely attach solar panels to roofs or ground-based structures.", "example": "Roof mounts, Ground mounts, Pole mounts, Rail sets, L-feet brackets", "subcategory": "Solar Retail Panel Mounting Structures"}
        - {"category": "Physical", "description": "Adjustable or fixed brackets and associated hardware that allow solar panels to be tilted at an optimal angle for sunlight exposure.", "example": "Tilt legs, Adjustable brackets, Mounting arms, Angle brackets, Pivot joints", "subcategory": "Solar Retail Panel Tilt Brackets"}
        - {"category": "Physical", "description": "Combination of electrical disconnect switches, fuses, or circuit breakers used to control, protect, and isolate electrical equipment in a solar system.", "example": "Circuit breakers, Disconnect switches, Fuse holders, Load centers, Panelboards", "subcategory": "Solar Retail Switchgear"}
        - {"category": "Physical", "description": "Solar panel kits where each panel has an integrated microinverter, converting DC to AC directly at the panel, simplifying installation.", "example": "Enphase AC modules, LG AC modules, Solaria AC modules, Integrated panel kits, Microinverter panels", "subcategory": "Solar Retail AC Module, Panel Kits"}
        - {"category": "Physical", "description": "Systems, typically involving rechargeable batteries, used to store electrical energy, often from solar panels, for later use.", "example": "Lithium-ion batteries, Lead-acid batteries, Battery banks, Home energy storage, Powerwalls", "subcategory": "Solar Retail Batteries & Storage"}
        - {"category": "Physical", "description": "Electrical wires (cables) and fittings (connectors) used to transmit power and signals within a solar PV system.", "example": "PV wire, MC4 connectors, Battery cables, Inverter cables, Solar extension cables", "subcategory": "Solar Retail Cables & Connectors"}
        - {"category": "Physical", "description": "Various supplementary components used in solar PV installations, aiding in functionality or completion beyond core components.", "example": "Cable clips, Wire management, Conduit fittings, End caps (rail), Combiner box accessories", "subcategory": "Solar Retail System Accessories"}
        - {"category": "Physical", "description": "Hardware and software used to track the performance of a solar PV system, including energy production, consumption, and component status.", "example": "Production monitors, Consumption meters, Inverter monitoring, Web dashboards, Mobile apps (solar)", "subcategory": "Solar Retail Monitoring System"}
        - {"category": "Physical", "description": "Publications that tell stories through sequential art, often in panels with images and text (dialogue, captions).", "example": "Superhero comics, Graphic novels, Manga, Indie comics, Collector's edition comics", "subcategory": "Comic Books"}
        - {"category": "Physical", "description": "Lumbar products and Timber sawn into planks, beams, or boards directly from felled trees, not structurally altered by bonding with adhesives.", "example": "Dimensional lumber (2x4s), Hardwood boards (oak/maple), Softwood planks (pine/fir), Timber beams, Wood siding (solid)", "subcategory": "Solid Wood Product"}
        - {"category": "Physical", "description": "Man-made wood products created by binding strands, particles, fibers, or veneers of wood together with adhesives.", "example": "Plywood, OSB (Oriented Strand Board), Glulam beams, I-joists, Laminated Veneer Lumber (LVL)", "subcategory": "Engineered Wood Product"}
        - {"category": "Physical", "description": "Wood cut for fuel in fires (firewood), and small, easily combustible sticks/twigs to start fires (kindling).", "example": "Split logs, Seasoned hardwood, Softwood bundles, Fatwood sticks, Twig bundles", "subcategory": "Firewood & Kindling"}
        - {"category": "Physical", "description": "The transaction involving the transfer of ownership of a new or used motor vehicle from a seller to a buyer.", "example": "New car purchase, Used car sale, Dealership car sale, Private party car sale, Fleet vehicle sales", "subcategory": "Automobile Sales and Lease - Automobile Sales"}
        - {"category": "Physical", "description": "Beverages made primarily from fruit juice (>50%), with wine-like characteristics but containing less than 0.5% alcohol by volume.", "example": "De-alcoholized wine (juice based), Sparkling grape juice (wine style), Non-alcoholic sangria (>50% juice), Fruit wine (dealcoholized), Adult non-alcoholic grape beverage", "subcategory": "Non-Alcoholic Wine (>50% Juice, <0.5% ABV)"}
        - {"category": "Physical", "description": "Powdered mixes for combining with milk/water to create a coffee-flavored beverage, often including instant coffee, milk solids, and sweeteners.", "example": "3-in-1 coffee mix, Instant cappuccino powder, Flavored latte mix (powder), Mocha powder (with milk solids), Iced coffee mix (powder)", "subcategory": "Nutrition Labeled Powder with Milk & Coffee"}
        - {"category": "Physical", "description": "Plant-based liquid alternatives to animal milk, derived from sources such as soybeans, rice, almonds, oats, or coconuts.", "example": "Soy milk, Almond milk, Rice milk, Oat milk, Coconut milk beverage", "subcategory": "Nutrition Labeled Non-Animal Milks"}
        - {"category": "Physical", "description": "Carbonated beverages, typically sweetened, containing between 0% and 50% fruit juice, including traditional soft drinks and some sparkling juice drinks.", "example": "Cola, Lemon-lime soda, Orange soda (low juice), Sparkling fruit punch (0-50% juice), Ginger ale", "subcategory": "Nutrition Labeled Carbonated Soda (0-50% Juice)"}
        - {"category": "Physical", "description": "Ready-to-drink beverages that combine milk or milk components with carbonation, often flavored and sweetened.", "example": "Milkis, Calpis Soda, Carbonated milk drinks, Sparkling yogurt drinks, Fizzy milk beverages", "subcategory": "Nutrition Labeled Carbonated with Milk (RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink beverages made solely from 100% fruit juice that has been carbonated, without any added sugars, flavors, or preservatives.", "example": "Sparkling 100% apple juice, Carbonated pure orange juice, Fizzy 100% grape juice, Sparkling unsweetened fruit juice, All-natural carbonated juice", "subcategory": "Nutrition Labeled Carbonated 100% Fruit Juice (No Additives, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink beverages from 100% fruit juice (from concentrate or not) that has been carbonated, may include minor permitted ingredients.", "example": "Sparkling apple cider (100% juice), Carbonated orange juice (RTD), Fizzy grape juice, Sparkling fruit blends (100% juice), Carbonated pineapple juice", "subcategory": "Nutrition Labeled Carbonated 100% Fruit Juice (RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink carbonated beverages containing 50.01% to 99.99% fruit juice, with other ingredients like water, flavors, or sweeteners.", "example": "Sparkling juice drinks (high percentage), Carbonated fruit nectars, Fizzy fruit coolers (>50% juice), Lightly carbonated juice blends, Sparkling fruit beverages (not 100%)", "subcategory": "Nutrition Labeled Carbonated Fruit Juice (50.01-99.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink tea (black, green, herbal) that is carbonated and contains no added sweeteners or flavors beyond the tea itself.", "example": "Sparkling black tea (unsweetened), Carbonated green tea (plain), Fizzy herbal tea (unsweetened), Unsweetened sparkling iced tea, Bubbly tea (no sugar)", "subcategory": "Nutrition Labeled Carbonated Unsweetened Tea (RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink coffee beverages containing brewed coffee and milk (dairy or plant-based), often sweetened and flavored.", "example": "Bottled Frappuccino, Canned lattes, Iced coffee with milk (RTD), Mocha drinks (RTD), Cold brew with milk (packaged)", "subcategory": "Nutrition Labeled Coffee with Milk (RTD)"}
        - {"category": "Physical", "description": "Powdered mixes or RTD beverages with protein, vitamins, minerals, often sweetened, consumed with/containing milk for weight management.", "example": "SlimFast powder (milk-based), Ensure Light (RTD), Protein shake mix (diet, with milk), Meal replacement powder (diet), Weight loss shakes (milk added)", "subcategory": "Nutrition Labeled Diet Aid with Milk (Sweetened, Powder/RTD)"}
        - {"category": "Physical", "description": "Fruit juice with water removed, sold frozen or shelf-stable liquid, for reconstitution to 100% fruit juice.", "example": "Orange juice concentrate, Apple juice concentrate, Grape juice concentrate, Lemonade concentrate (100% juice base), Pineapple juice concentrate", "subcategory": "Nutrition Labeled Frozen/Liquid Concentrate (100% Fruit Juice)"}
        - {"category": "Physical", "description": "Concentrated liquid (frozen/shelf-stable) that when reconstituted yields a beverage containing 50.01% to 69.99% fruit juice.", "example": "Fruit punch concentrate (high juice), Juice blend concentrate (50-70%), Nectar concentrate (high percentage), Lemonade base concentrate (>50% juice), Tropical drink concentrate", "subcategory": "Nutrition Labeled Frozen/Liquid Concentrate (50.01-69.99% Juice)"}
        - {"category": "Physical", "description": "Highly concentrated liquid (frozen/shelf-stable) that when reconstituted yields a beverage containing 70% to 99.99% fruit juice.", "example": "Premium fruit juice concentrate, Near 100% juice concentrate, High-juice blend concentrate, Single-strength equivalent concentrate (diluted), Rich fruit concentrate", "subcategory": "Nutrition Labeled Frozen/Liquid Concentrate (70-99.99% Juice)"}
        - {"category": "Physical", "description": "Powdered preparations containing cocoa, sugar, and often milk solids, designed to be mixed with hot water or milk to create a chocolate beverage.", "example": "Swiss Miss, Nesquik Hot Chocolate, Cadbury Drinking Chocolate, Abuelita Mexican Chocolate, Dark chocolate cocoa mix", "subcategory": "Nutrition Labeled Hot Cocoa Mixes"}
        - {"category": "Physical", "description": "Ready-to-drink, carbonated, fermented tea with minimal residual sugar, unflavored, and containing less than 0.5% alcohol.", "example": "Plain sparkling kombucha, Unsweetened bubbly kombucha, Raw carbonated kombucha, Original effervescent kombucha, Natural fizzy kombucha", "subcategory": "Nutrition Labeled Kombucha (Unsweetened, Carbonated, RTD, <0.5% ABV)"}
        - {"category": "Physical", "description": "Ready-to-drink, carbonated, fermented tea, flavored and sweetened (nutritively or non-nutritively), with less than 0.5% alcohol.", "example": "Flavored sparkling kombucha, Sweetened bubbly kombucha, Fruit-infused fizzy kombucha, Ginger kombucha (carbonated), Herbal kombucha (effervescent)", "subcategory": "Nutrition Labeled Kombucha (Sweetened, Carbonated, RTD, <0.5% ABV)"}
        - {"category": "Physical", "description": "Flavored liquid concentrates with caloric sweeteners and a very small amount (0.1% to 9.99%) of fruit juice, for dilution.", "example": "Fruit squash (low juice), Cordial (low juice, sweetened), Lemonade concentrate (low juice, sweetened), Drink base (trace juice), Flavored syrup (for drinks)", "subcategory": "Nutrition Labeled Liquid Concentrate (Sweetened, 0.1-9.99% Juice)"}
        - {"category": "Physical", "description": "Flavored liquid concentrates with caloric sweeteners but no fruit juice, for dilution with water or other liquids.", "example": "Flavored drink concentrate (no juice), Sweetened cordial (0% juice), Punch concentrate (artificial, sweetened), Iced tea concentrate (sweetened, no lemon juice), Syrup for soda stream (no juice)", "subcategory": "Nutrition Labeled Liquid Concentrate (Sweetened, 0% Juice)"}
        - {"category": "Physical", "description": "Sweetened liquid concentrates with flavorings (e.g., chocolate, strawberry) designed to be mixed directly into milk.", "example": "Chocolate milk syrup, Strawberry milk syrup, Banana milk flavoring (liquid), Vanilla syrup (for milk), Malt liquid concentrate", "subcategory": "Nutrition Labeled Liquid Concentrate for Milk (Sweetened)"}
        - {"category": "Physical", "description": "Liquid or powdered products with balanced macronutrients, vitamins, and minerals to substitute for a solid meal.", "example": "Ensure, SlimFast, Soylent, Huel, Kate Farms", "subcategory": "Nutrition Labeled Meal Replacement (Liquid/Powder)"}
        - {"category": "Physical", "description": "Powders designed to be mixed with milk to add flavor (e.g., chocolate, strawberry) and often sweetness, specific nutrition varies by brand.", "example": "Nesquik powder, Ovaltine powder, Horlicks powder, Milo powder, Store-brand chocolate milk mix", "subcategory": "Nutrition Labeled Milk Flavoring Powder (Brand Specific)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with a milk, soy, or rice base blended with 25% to 50% fruit juice.", "example": "Juice & milk blend, Soy drink with fruit juice, Rice milk & juice smoothie, Dairy-juice blend (RTD), Breakfast drink (milk-juice)", "subcategory": "Nutrition Labeled Non-Carbonated with Milk/Soy/Rice (25-50% Juice, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 0.1% to 9.99% fruit juice, primarily water, flavors, and possibly sweeteners.", "example": "Fruit-flavored drink (low juice), Diluted juice beverage, Juice drink (very low percentage), Light fruit punch (RTD), Kids' fruit drink (low juice)", "subcategory": "Nutrition Labeled Non-Carbonated Fruit Juice (0.1-9.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 10% to 24.99% fruit juice, plus water, flavors, and sweeteners.", "example": "Juice drink (10-24% juice), Fruit punch (10-24% juice), Nectar-style drink (lower juice), Fruit beverage (RTD), Light juice cocktail", "subcategory": "Nutrition Labeled Non-Carbonated Fruit Juice (10-24.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 25% to 50% fruit juice, often blended with water, flavors, and sweeteners.", "example": "Juice cocktail (25-50% juice), Fruit nectar (25-50% juice), Juice blend (RTD), Half-juice half-water drink, Enriched fruit drink", "subcategory": "Nutrition Labeled Non-Carbonated Fruit Juice (25-50%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 50.01% to 69.99% fruit juice, plus water, flavors, or sweeteners.", "example": "Juice blend (50-70% juice), Fruit nectar (high juice), Enriched fruit drink (RTD), Daily juice (50-70%), Kids' juice drink (high percentage)", "subcategory": "Nutrition Labeled Non-Carbonated Fruit Juice (50.01-69.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 70% to 99.99% fruit juice, possibly with minor added ingredients.", "example": "Premium juice blend (RTD), Almost 100% juice drink, Fruit juice (not from concentrate, <100%), High-percentage nectar, Single-strength juice (not 100%)", "subcategory": "Nutrition Labeled Non-Carbonated Fruit Juice (70-99.99%, RTD)"}
        - {"category": "Physical", "description": "Liquid concentrates that, when reconstituted, produce a still beverage containing 25% to 50% vegetable juice.", "example": "Vegetable juice concentrate, Tomato concentrate (for drink), Carrot juice blend concentrate, Mixed veggie concentrate, Garden blend concentrate", "subcategory": "Nutrition Labeled Non-Carbonated Liquid Concentrate (25-50% Vegetable Juice)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages based on soy, whey, or rice, with 0% to 24.99% fruit juice.", "example": "Soy milk drink (low juice), Whey protein drink (fruit flavored), Rice beverage (lightly juiced), Plant-based drink (0-25% juice), Flavored whey water (low juice)", "subcategory": "Nutrition Labeled Non-Carbonated with Soy/Whey/Rice (0-24.99% Juice, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with no fruit juice, sweetened (caloric or non-caloric), and typically flavored.", "example": "Flavored water (sweetened, no juice), Sweetened iced tea (no fruit), Sports drinks (some types), Vitamin-enhanced water (sweetened), Electrolyte drinks (sweetened)", "subcategory": "Nutrition Labeled Non-Carbonated Sweetened (0% Fruit Juice, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 0.1% to 9.99% vegetable juice, primarily water, flavors, and possibly sweeteners.", "example": "Vegetable-flavored drink (low juice), Diluted veggie beverage, Veggie drink (very low percentage), Light V-blend (RTD), Kids' veggie drink (low juice)", "subcategory": "Nutrition Labeled Non-Carbonated Vegetable Juice (0.1-9.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 10% to 24.99% vegetable juice, plus water, flavors, and sweeteners.", "example": "Veggie juice drink (10-24% juice), Vegetable blend (10-24% juice), Light V-juice (RTD), Vegetable beverage (lower juice), Garden cocktail (10-24% juice)", "subcategory": "Nutrition Labeled Non-Carbonated Vegetable Juice (10-24.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink beverage made entirely from unfermented liquid from vegetables, or reconstituted 100% vegetable juice concentrate.", "example": "Tomato juice (100%), Carrot juice (100%), V8 juice (original), Beet juice (100%), Celery juice (100%)", "subcategory": "Nutrition Labeled Non-Carbonated 100% Vegetable Juice (RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 25% to 50% vegetable juice, often blended with water, flavors, and possibly spices or sweeteners.", "example": "Vegetable juice cocktail (25-50%), Tomato blend drink, Carrot juice blend (RTD), Garden blend (25-50% juice), V-Fusion Light (example type)", "subcategory": "Nutrition Labeled Non-Carbonated Vegetable Juice (25-50%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 50.01% to 69.99% vegetable juice, plus water, flavors, or spices.", "example": "Veggie blend (50-70% juice), High-percentage vegetable nectar, Enriched veggie drink (RTD), Daily greens (50-70% juice), Savory veggie drink", "subcategory": "Nutrition Labeled Non-Carbonated Vegetable Juice (50.01-69.99%, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with 70% to 99.99% vegetable juice, possibly with minor added seasonings.", "example": "Premium veggie blend (RTD), Almost 100% veggie juice, Vegetable juice (not from concentrate, <100%), High-percentage V-nectar, Single-strength veggie juice (not 100%)", "subcategory": "Nutrition Labeled Non-Carbonated Vegetable Juice (70-99.99%, RTD)"}
        - {"category": "Physical", "description": "Sweetened powders with flavorings (like chocolate, strawberry, malt) designed to be stirred into milk to create a flavored beverage.", "example": "Chocolate milk powder, Strawberry milk mix, Malted milk powder, Banana flavor powder (for milk), Vanilla milk mix", "subcategory": "Nutrition Labeled Powdered Mix for Milk (Sweetened)"}
        - {"category": "Physical", "description": "Powdered mixes with stimulants (e.g., caffeine) and often vitamins, for mixing with water to create an energy-boosting beverage, without milk components.", "example": "G Fuel powder, Celsius powder packs, Zipfizz, Advocare Spark, Amino energy powder", "subcategory": "Nutrition Labeled Powdered Energy Drink (No Milk/Soy/Rice)"}
        - {"category": "Physical", "description": "Ready-to-drink beverages containing significant protein, where milk (dairy) is a primary ingredient or base, often flavored and sweetened.", "example": "Fairlife Core Power, Muscle Milk (dairy RTD), Premier Protein (milk-based RTD), RTD whey protein shakes, Chocolate protein milk", "subcategory": "Nutrition Labeled Protein Drink with Milk (RTD)"}
        - {"category": "Physical", "description": "Protein supplements (powder/RTD) not containing dairy milk as a primary ingredient, may use plant-based proteins or whey isolate with water.", "example": "Plant-based protein powder, Vegan protein shakes (RTD), Whey protein isolate (water mix), Clear whey drinks, Collagen peptide drinks", "subcategory": "Nutrition Labeled Protein Drink No Milk (Powder/RTD)"}
        - {"category": "Physical", "description": "A specific brand of powdered fruit-flavored drink mix, typically orange, containing sugar and vitamins, designed to be mixed with water.", "example": "Tang Orange powder, Tang Mango powder, Tang Lemon powder, Generic orange drink mix, Vitamin C drink powder (Tang-like)", "subcategory": "Nutrition Labeled Tang Powder (Sweetened, For Water)"}
        - {"category": "Physical", "description": "Flavored liquid concentrates containing tea extracts and caloric sweeteners, designed to be diluted with water or milk to create a tea beverage.", "example": "Sweetened iced tea concentrate, Chai latte concentrate, Flavored tea syrup, Liquid sweet tea mix, Boba tea concentrate", "subcategory": "Nutrition Labeled Tea Liquid Concentrate (Sweetened)"}
        - {"category": "Physical", "description": "Ready-to-drink beverages combining tea or coffee with carbonation and caloric sweeteners.", "example": "Sparkling sweet tea, Carbonated coffee drink, Fizzy latte (sweetened), Sparkling chai, Sweetened bubbly coffee", "subcategory": "Nutrition Labeled Carbonated Tea/Coffee (Sweetened, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink tea or coffee beverages, without milk or dairy alternatives, containing caloric sweeteners.", "example": "Sweetened iced tea (bottled), Sweetened black coffee (RTD), Flavored sweet tea (no milk), Bottled sweet green tea, Cold brew (sweetened, black)", "subcategory": "Nutrition Labeled Tea/Coffee No Milk (Sweetened, RTD)"}
        - {"category": "Physical", "description": "Powdered mixes intended to be combined with milk (or containing milk solids for mixing with water) to create a beverage, often flavored and sweetened.", "example": "Chocolate milk powder, Malted milk powder, Breakfast drink mix, Instant latte powder, Milkshake powder", "subcategory": "Nutrition Labeled Powder with Milk or For Milk"}
        - {"category": "Physical", "description": "Ready-to-drink carbonated beverages (≥4oz) with stimulants and other ingredients marketed to boost energy, labeled as a supplement.", "example": "Red Bull (labeled as supplement), Monster (supplement label), Rockstar (supplement label), Celsius (carbonated, supplement), Bang Energy (supplement)", "subcategory": "Supplement Labeled Carbonated Energy Drink (≥4oz, RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink coffee beverages marketed and labeled as dietary supplements, often with added vitamins, minerals, or functional ingredients.", "example": "RTD coffee + vitamins, Functional coffee drink, Nootropic coffee (RTD), Keto coffee (RTD, supplement), Protein coffee (RTD)", "subcategory": "Supplement Labeled Coffee (RTD)"}
        - {"category": "Physical", "description": "Energy-boosting products (≥4oz prepared/served), either as sweetened powders for mixing or unsweetened liquids, labeled as supplements.", "example": "G Fuel powder (sweetened), Zipfizz powder (sweetened), Unsweetened liquid energy concentrate, Amino energy powder (sweetened), Pre-workout powder (energy, sweetened)", "subcategory": "Supplement Labeled Energy Drink (Sweetened Powder/Unsweetened Liquid, ≥4oz)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages with some fruit/vegetable juice, marketed as dietary supplements, often with added functional ingredients.", "example": "V8 +Energy (some juice), Functional juice drink, Vitamin drink with juice, Nootropic juice blend, Immunity drink (juice base)", "subcategory": "Supplement Labeled Non-Carbonated with Some Juice (RTD)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages (≥4oz) with stimulants and other ingredients marketed to boost energy, labeled as a supplement.", "example": "Non-carbonated Monster Rehab, Still energy fuel, Vitamin energy drink (still), Focus drink (non-carbonated), Endurance beverage (liquid)", "subcategory": "Supplement Labeled Non-Carbonated Liquid Energy Drink (≥4oz, RTD)"}
        - {"category": "Physical", "description": "Concentrated, RTD, still liquid beverages (<4oz) with stimulants for an energy boost, labeled as supplements.", "example": "5-hour Energy shot, Stacker 2 shot, Tweaker shots, Mini energy drinks, Focus shots", "subcategory": "Supplement Labeled Non-Carbonated Liquid Energy Shot (<4oz, RTD)"}
        - {"category": "Physical", "description": "RTD, still beverages based on soy, whey, or rice, with 0-24.99% juice, marketed as dietary supplements, often with added nutrients.", "example": "Soy protein drink (low juice, supplement), Whey-based recovery drink (flavored, supplement), Rice milk beverage (fortified, supplement), Plant protein water (low juice), Functional dairy-alternative drink", "subcategory": "Supplement Labeled Non-Carbonated with Soy/Whey/Rice (0-24.99% Juice, RTD)"}
        - {"category": "Physical", "description": "RTD, still liquid products larger than 2.5 fl oz, labeled as dietary supplements, for specific health or nutritional benefits beyond basic nutrition.", "example": "Herbal supplement drinks, Vitamin enhanced beverages (supplement), Nootropic drinks (>2.5oz), Liquid mineral supplements, Recovery drinks (non-energy)", "subcategory": "Supplement Labeled Non-Carbonated Dietary Supplement (>2.5oz, RTD)"}
        - {"category": "Physical", "description": "RTD, still tea beverages (sweetened or unsweetened), marketed as dietary supplements, often highlighting specific health benefits or added ingredients.", "example": "Herbal detox tea (RTD, supplement), Vitamin-infused iced tea (supplement), Functional green tea (bottled), Adaptogenic tea drink, Calming tea beverage (supplement)", "subcategory": "Supplement Labeled Non-Carbonated Tea (Sweetened/Unsweetened, RTD)"}
        - {"category": "Physical", "description": "Concentrated liquid extracts of coffee or tea, without added sweeteners, for dilution, marketed/labeled as a dietary supplement.", "example": "Unsweetened green tea extract (liquid), Coffee concentrate (for focus, supplement), Herbal tea concentrate (unsweetened, supplement), Black tea extract (liquid, supplement), Cold brew concentrate (as supplement)", "subcategory": "Supplement Labeled Unsweetened Coffee/Tea Concentrate"}
        - {"category": "Physical", "description": "Carbon dioxide gas, typically supplied in cylinders, used as an ingredient to carbonate water and other beverages in home carbonation systems.", "example": "CO2 cylinders (SodaStream), Carbonator refills, Sparkling water gas, Beverage carbonation gas, Drinkmate CO2", "subcategory": "Beverage Ingredients - CO2 (Soda Stream Refills)"}
        - {"category": "Physical", "description": "Ready-to-drink, still beverages containing protein (dairy or plant-based), with 0-24% juice content, typically flavored and sweetened.", "example": "Protein water (flavored), Whey protein drink (low juice), Plant-based protein shake (RTD), Collagen drink (fruit flavored), Light protein smoothie", "subcategory": "Nutrition Labeled Non-Carbonated Protein Drink (0-24% Juice, RTD)"}
        - {"category": "Physical", "description": "Products designed to consume less energy to perform their intended function compared to standard equivalent supplies.", "example": "LED light bulbs, Energy Star appliances, Low-flow showerheads, Smart thermostats, High-efficiency air filters", "subcategory": "Energy Efficient Products"}
        - {"category": "Physical", "description": "Food products, including specially formulated foods or supplements, intended to meet particular dietary needs or provide specific nutritional benefits.", "example": "Gluten-free foods, Meal replacement shakes, Protein bars, Vitamin supplements, Electrolyte drinks", "subcategory": "Dietary Supplies"}
        - {"category": "Physical", "description": "Substances providing nourishment essential for life (e.g., proteins, vitamins) when sold directly to medical facilities.", "example": "Enteral feeding formulas, Intravenous nutrition solutions, Medical-grade protein powders, Calorie supplements (bulk), Vitamin/mineral preparations (hospital)", "subcategory": "Nutrients (Sold to Medical Facility)"}
        - {"category": "Physical", "description": "Pre-packaged cold food items, confectionery, and drinks dispensed through automated self-service machines.", "example": "Sandwiches (vended), Chocolate bars (vended), Soda cans (vended), Bagged chips (vended), Bottled water (vended)", "subcategory": "Vending Machine (Cold Food, Candy, Beverages)"}
        - {"category": "Physical", "description": "Assortments of baked goods arranged on a platter, prepared by an external bakery and sold prepackaged for events.", "example": "Cookie platters (prepackaged), Pastry assortments (boxed), Mini croissant trays, Brownie bite platters, Cupcake assortments (packaged)", "subcategory": "Bakery Party Trays (Third-Party Prepared, Prepackaged)"}
        - {"category": "Physical", "description": "Confectionery items containing alcohol as an ingredient and not made with flour.", "example": "Liqueur-filled chocolates, Rum balls (no flour), Wine gummies, Bourbon caramels, Cocktail-flavored hard candies", "subcategory": "Candy (No Flour, with Alcohol)"}
        - {"category": "Physical", "description": "A specific brand and package size of candy bar: Twix, in a family pack containing 10 individual units.", "example": "Twix 10-pack, Mars Twix Family Size, Caramel cookie bars (Twix pack), Chocolate multi-pack (Twix 10ct), Confectionery (Twix specific pack)", "subcategory": "Candy - Twix Family Pack (10 Count)"}
        - {"category": "Physical", "description": "Dried cranberries that have typically been infused with sugar or fruit juice concentrate to enhance sweetness.", "example": "Original Craisins, Reduced Sugar Craisins, Flavored dried cranberries, Cherry infused Craisins, Cranberry trail mix component", "subcategory": "Craisins / Sweetened Dried Cranberries"}
        - {"category": "Physical", "description": "Pre-packaged salads (e.g., potato, macaroni) prepared by an external deli/producer, sold in containers for four or more servings.", "example": "Large potato salad tub, Family-size coleslaw, Bulk macaroni salad, Prepackaged large pasta salad, Large quinoa salad (deli)", "subcategory": "Deli Salads (Third-Party Prepared, Bulk ≥4 Servings, Prepackaged)"}
        - {"category": "Physical", "description": "Salads prepared by an external deli/producer, portioned and packaged by hand (e.g., scooped into containers) at point of sale or for retail.", "example": "Scooped potato salad, Hand-packed coleslaw, Deli counter pasta salad, Freshly portioned chicken salad, Individual Tabbouleh (deli packaged)", "subcategory": "Deli Salads (Third-Party Prepared, Hand Dipped/Scooped, Packaged)"}
        - {"category": "Physical", "description": "Pre-packaged salads (e.g., potato, macaroni) prepared by an external deli/producer, sold in containers for one to three servings.", "example": "Single-serve potato salad, Small macaroni salad cup, Individual coleslaw container, Small pasta salad (prepackaged), Quinoa salad (1-3 servings)", "subcategory": "Deli Salads (Third-Party Prepared, 1-3 Servings, Prepackaged)"}
        - {"category": "Physical", "description": "Fruits that have had most of their original water content removed, with added caloric sweeteners like sugar or fruit juice concentrate.", "example": "Sweetened dried cranberries (Craisins), Candied pineapple, Sugared dried mango, Glazed dried apricots, Sweetened banana chips", "subcategory": "Dried Fruit (Sweetened)"}
        - {"category": "Physical", "description": "Pre-packaged ready-to-eat mixtures of cut fresh fruits (fruit salads) or layered desserts of fruit, yogurt, and often granola (parfaits).", "example": "Packaged mixed fruit cup, Pre-made fruit salad bowl, Yogurt parfait (prepackaged), Granola fruit parfait cup, Layered fruit dessert (packaged)", "subcategory": "Fruit Salads/Parfaits (Third-Party Prepared, Prepackaged)"}
        - {"category": "Physical", "description": "Food products, excluding confectionery, that contain a noticeable or functional amount of alcohol as an ingredient.", "example": "Rum cake, Wine-poached pears, Bourbon BBQ sauce, Beer cheese dip, Flambéed desserts", "subcategory": "Items with Significant Alcohol (Not Candy)"}
        - {"category": "Physical", "description": "A soft, sweet, spongy confection made from sugar, water, and gelatin, often cylindrical or square in shape.", "example": "Regular marshmallows, Mini marshmallows, Flavored marshmallows, Marshmallow creme, Toasted marshmallows (as product)", "subcategory": "Marshmallows"}
        - {"category": "Physical", "description": "Edible nuts or seeds sweetened (e.g., with sugar, honey) but not covered in a hard candy shell or combined with flour.", "example": "Honey roasted peanuts, Glazed almonds, Candied pecans (no shell), Sweetened sunflower seeds, Maple glazed walnuts", "subcategory": "Nuts/Seeds (Sweetened, Not Candy Coated, No Flour)"}
        - {"category": "Physical", "description": "Single-serving packages (≤2.499oz) of nuts, seeds, or popcorn with added sugar, not classified as candy and no flour.", "example": "Small pack kettle corn, Single-serve honey nuts, Small glazed seed packet, Individual sweet popcorn bag, Portion-control sweet nuts", "subcategory": "Nuts/Seeds/Popcorn with Sugar (Not Candy, No Flour, ≤2.499oz/Single)"}
        - {"category": "Physical", "description": "Nuts, seeds, or popcorn with added sugar, not classified as candy and no flour, sold in various package sizes.", "example": "Kettle corn (bagged), Honey roasted cashews, Caramel popcorn (no candy coating), Glazed mixed nuts, Sweet & salty trail mix (nut/seed base)", "subcategory": "Nuts/Seeds/Popcorn with Sugar (Not Candy, No Flour)"}
        - {"category": "Physical", "description": "Assortments of ready-to-eat food items (e.g., meats, cheeses, fruits) arranged on a tray or platter, prepared by an external vendor and sold prepackaged.", "example": "Deli meat/cheese trays, Vegetable platters (prepackaged), Fruit trays (premade), Sandwich ring platters, Dessert platters (assorted)", "subcategory": "Party Trays/Platters (Third-Party Prepared, Prepackaged)"}
        - {"category": "Physical", "description": "Prepackaged baked items (e.g., bread, cakes, pastries, cookies)", "example": "Single-serve muffin, Small cookie pack (2-3), Individual pastry (wrapped), Small cupcake pack, Loaf", "subcategory": "Baked Goods Prepackaged"}
        - {"category": "Physical", "description": "Prepackaged kits with pre-portioned ingredients (greens, toppings, dressing) for assembling a complete salad meal, prepared by an external food producer.", "example": "Chopped salad kits, Caesar salad kits (all components), Greek salad meal kit, Chef salad kit (prepackaged), Asian salad kit (includes protein)", "subcategory": "Salad Meal Kit (Third-Party Prepared, Prepackaged)"}
        - {"category": "Physical", "description": "Ready-to-eat salads (e.g., potato, macaroni, coleslaw) prepared by an external vendor and sold prepackaged in containers.", "example": "Large potato salad tub, Family-size coleslaw, Bulk macaroni salad, Prepackaged large green salad, Quinoa salad (bulk pack)", "subcategory": "Salads Prepackaged"}
        - {"category": "Physical", "description": "Single, ready-to-eat cold sandwiches prepared by an external vendor and sold individually in prepackaged form.", "example": "Turkey & cheese sandwich (packaged), Ham sandwich (premade), Veggie wrap (cold, packaged), Chicken salad sandwich (individual), Egg salad sandwich (prepackaged)", "subcategory": "Sandwiches (Individual, Third-Party Prepared, Cold, Prepackaged)"}
        - {"category": "Physical", "description": "Assortments of cold sandwiches or sandwich portions arranged on a platter, prepared by an external vendor and sold prepackaged for group consumption.", "example": "Assorted sandwich tray, Pinwheel sandwich platter, Mini croissant sandwich platter, Club sandwich platter, Vegetarian sandwich tray", "subcategory": "Sandwich Platters (Third-Party Prepared, Cold, Prepackaged)"}
        - {"category": "Physical", "description": "Prepackaged savory or sweet snack items like chips, popcorn, nuts, or crackers, sold in sizes ranging from 2.5 to 5.0 ounces.", "example": "Medium bag potato chips, Popcorn bag (3oz), Nuts container (4oz), Cracker box (small), Pretzel bag (sharing size)", "subcategory": "Snack Foods (Chips, Popcorn, Nuts, Crackers, 2.5-5.0oz)"}
        - {"category": "Physical", "description": "Single-serving prepackaged savory or sweet snack items like chips, popcorn, nuts, or crackers, with a weight of less than 2.5 ounces.", "example": "Small chip bag (single), Individual popcorn pack, Nut packet (<2.5oz), Cracker snack pack, Single-serve pretzels", "subcategory": "Snack Foods (Chips, Popcorn, Nuts, Crackers, <2.5oz/Single)"}
        - {"category": "Physical", "description": "Assortments of various sushi rolls and pieces, prepared by an external vendor and sold prepackaged on a tray or platter for multiple servings.", "example": "Assorted sushi tray, Nigiri & maki platter, Party sushi set, California roll platter, Rainbow roll assortment", "subcategory": "Sushi Platters (Third-Party Prepared, Prepackaged)"}
        - {"category": "Physical", "description": "Individual servings or small sets of sushi (vinegared rice with seafood, vegetables, etc.), prepared by an external vendor and sold prepackaged.", "example": "California roll pack, Tuna nigiri set, Spicy salmon roll (packaged), Veggie sushi combo, Inari sushi pack", "subcategory": "Sushi (Third-Party Prepared, Prepackaged)"}
        - {"category": "Physical", "description": "Snack mixtures typically containing nuts, seeds, dried fruit, and also including items with flour (like pretzels) and/or confectionery pieces.", "example": "Monster trail mix (M&Ms/pretzels), Sweet & salty mix (chocolate/crackers), Yogurt pretzel trail mix, Chocolate chip granola mix, GORP (with candy/pretzels)", "subcategory": "Trail Mix (Flour, Confection Item)"}
        - {"category": "Physical", "description": "Single-serving packages of trail mix that include items with flour (like pretzels) and/or confectionery pieces (like chocolate candies).", "example": "Snack pack trail mix (candy/pretzels), Individual monster mix, Single-serve sweet/salty mix, Personal trail mix (chocolate bits), Portion-control GORP (with M&Ms)", "subcategory": "Trail Mix (Flour, Confection Item, Individual)"}
        - {"category": "Physical", "description": "Simple, often single-ingredient or minimally processed food items commonly used as or in the preparation of appetizers before a main meal.", "example": "Olives (jarred), Pickles (jarred), Artichoke hearts (canned), Crackers (plain), Cheese cubes (plain)", "subcategory": "Appetizers (Basic)"}
        - {"category": "Physical", "description": "Ingredients or pre-made components primarily made from flour or eggs, used in creating appetizers, such as batter mixes, doughs, or small baked items.", "example": "Pastry dough (puff/phyllo), Cracker meal/breadcrumbs, Batter mix (for frying), Mini quiche shells, Blini mix", "subcategory": "Appetizers (Flour/Egg-Based)"}
        - {"category": "Physical", "description": "Pre-packaged sweet or savory snack items commonly used as or incorporated into appetizers, often ready-to-eat or requiring minimal preparation.", "example": "Pretzels (for dipping), Tortilla chips (for salsa), Nuts (flavored), Mini cookies (for dessert tray), Savory crackers", "subcategory": "Appetizers (Sweet/Savory Snacks)"}
        - {"category": "Physical", "description": "Food products preserved by sealing them in airtight containers (cans) and then heat-processing them.", "example": "Canned vegetables, Canned fruits, Canned tuna/salmon, Canned soups, Canned beans", "subcategory": "Canned Food"}
        - {"category": "Physical", "description": "Dairy products made from pressed milk curds (cheeses) and the specially fattened liver of a duck or goose (foie gras).", "example": "Cheddar cheese, Brie cheese, Parmesan cheese, Foie gras terrine, Foie gras (whole liver)", "subcategory": "Cheeses & Foie Gras"}
        - {"category": "Physical", "description": "Rich, thick style of drinking chocolate, often less sweet than typical hot cocoa, intended to be sipped, sometimes made from solid chocolate pieces.", "example": "Spanish drinking chocolate, Thick hot chocolate mix, European style drinking chocolate, Stone-ground chocolate (for drinking), Churro dipping chocolate", "subcategory": "Drinking Chocolate (A La Taza)"}
        - {"category": "Physical", "description": "Breakfast cereals made from granola where clusters/pieces are covered with a coating, often sweet (e.g., yogurt, chocolate, honey).", "example": "Yogurt-coated granola, Chocolate-covered granola clusters, Honey-glazed granola, Frosted granola, Peanut butter coated granola", "subcategory": "Coated Granola Cereal"}
        - {"category": "Physical", "description": "Snack bars from granola (oats, nuts, sweeteners) with an outer coating (e.g., yogurt, chocolate) and no primary flour ingredient.", "example": "Yogurt-dipped granola bars, Chocolate-coated oat bars, Nut & seed bars (coated), Fruit & nut bars (coated, no flour), Protein granola bars (coated)", "subcategory": "Coated Granola Bars (No Flour)"}
        - {"category": "Physical", "description": "Sweet, often rich, spreadable products or liquid toppings used for desserts, pastries, or as confectionery components.", "example": "Chocolate hazelnut spread, Caramel sauce, Fruit coulis, Chocolate fudge sauce, Marshmallow fluff", "subcategory": "Confectionery Spreads & Dessert Sauces"}
        - {"category": "Physical", "description": "Raw materials and additives used in the process of making beer, wine, spirits, or other alcoholic beverages.", "example": "Malted barley, Hops, Wine yeast, Brewing sugars, Distiller's yeast", "subcategory": "For Brewing/Alcohol Production"}
        - {"category": "Physical", "description": "Snack or breakfast bars made with fruit and/or granola, containing flour as an ingredient, and not covered in a confectionery coating.", "example": "Cereal bars (flour-based), Breakfast biscuits (bar form), Fruit-filled oat bars, Soft baked granola bars, Fig bars", "subcategory": "Bars (Fruit/Granola/Breakfast, Flour, Not Candy-Coated)"}
        - {"category": "Physical", "description": "Cured or cooked pork leg (hams) and specific types of cured meats originating from the Iberian Peninsula, such as chorizo or lomo.", "example": "Serrano ham, Ibérico ham, Chorizo Ibérico, Salchichón Ibérico, Lomo Ibérico", "subcategory": "Hams & Iberian Cold Meats"}
        - {"category": "Physical", "description": "A sweet, viscous food substance produced by bees from the nectar of flowers.", "example": "Clover honey, Wildflower honey, Manuka honey, Raw honey, Liquid honey", "subcategory": "Honey"}
        - {"category": "Physical", "description": "Single-serving portions of frozen dessert from dairy or non-dairy alternatives, typically less than 200ml (approx. 0.4 US pint).", "example": "Ice cream cups (small),Mini ice cream tubs,Single-serve gelato,Novelty ice cream bars,Small sorbet portions", "subcategory": "Ice Cream (<200ml / ~0.4 pint)"}
        - {"category": "Physical", "description": "Fruit preserves from fruit pulp/juice boiled with sugar and pectin, jam contains fruit pieces, jelly is from fruit juice.", "example": "Strawberry jam, Grape jelly, Orange marmalade, Raspberry preserves, Fruit spread", "subcategory": "Jam/Jelly"}
        - {"category": "Physical", "description": "Savory snacks from potatoes or nuts, packaged in sizes between 2.5 and 5.0 ounces, typically larger than a single serving.", "example": "Medium bag potato chips, Sharing size peanuts, Cashew pack (3-4oz), Mixed nuts (4oz bag), Flavored almonds (medium pack)", "subcategory": "Potato/Nut Snacks (2.5-5oz, Not Single Serve)"}
        - {"category": "Physical", "description": "Single-serving packages (less than 2.5 ounces) of savory snacks made primarily from potatoes (e.g., chips) or various types of nuts.", "example": "Small chip bag (single), Individual nut packet, Vending machine nuts, Portion-control potato crisps, Lunchbox size peanuts", "subcategory": "Potato/Nut Snacks (<2.5oz or Single Serve)"}
        - {"category": "Physical", "description": "Prepackaged, ready-to-consume savory spreads or sauces intended for dipping other foods like chips, vegetables, or crackers.", "example": "Hummus (prepackaged), Salsa (jarred), Guacamole (ready-to-eat), Onion dip (refrigerated), Bean dip (canned)", "subcategory": "Dips (Prepackaged, Ready-to-Eat)"}
        - {"category": "Physical", "description": "Prepackaged, ready-to-consume single-serving or multi-serving desserts made from milk or cream (puddings) or gelling agents (gelatin).", "example": "Pudding cups, Jell-O cups, Rice pudding (packaged), Chia seed pudding (premade), Flan (individual portion)", "subcategory": "Puddings/Gelatin (Prepackaged, Ready-to-Eat)"}
        - {"category": "Physical", "description": "Complete or near-complete meals, pre-cooked and packaged, requiring minimal preparation (often just heating), composed of simple, staple ingredients.", "example": "Frozen TV dinners, Chilled pasta meals, Microwaveable rice bowls, Pre-cooked chicken & veg, Shepherd's pie (frozen)", "subcategory": "Ready Meals (Basic)"}
        - {"category": "Physical", "description": "Pre-cooked packaged meals where a significant component is a bakery item with flour/eggs (e.g., quiches, savory pies), requiring minimal reheating.", "example": "Frozen quiche, Savory meat pie (individual), Pre-made lasagna (single serve), Chicken pot pie (frozen), Filled croissants (savory, packaged)", "subcategory": "Ready Meals (Flour/Egg-Based Bakery)"}
        - {"category": "Physical", "description": "Pre-packaged, ready-to-eat items that can function as a small meal or substantial snack, available in both sweet and savory varieties.", "example": "Lunchables (snack kit), Protein snack packs, Cheese & cracker kits, Mini pizza (frozen), Fruit & nut bars (meal replacement type)", "subcategory": "Ready Meals (Sweet/Savory Snacks)"}
        - {"category": "Physical", "description": "Grains from the Oryza sativa plant (rice) and the edible seeds of leguminous plants (pulses, e.g., beans, lentils, peas), often sold dried.", "example": "White rice, Brown rice, Lentils (dried), Chickpeas (dried/canned), Kidney beans (dried/canned)", "subcategory": "Rice & Pulses"}
        - {"category": "Physical", "description": "Fermented milk product, sold in individual containers of 8 ounces or less, often flavored or plain.", "example": "Yogurt cups (individual), Greek yogurt (single), Drinkable yogurt (small bottle), Kids' yogurt tubes, Skyr (single serve)", "subcategory": "Yogurt (Single Serve ≤8oz)"}
        - {"category": "Physical", "description": "Prepackaged savory or Cereal-based/fruit/nut snack items (excluding candy), eaten without utensils, in sizes between 2.5 and 5.0 ounces.", "example": "Medium bag pretzels, Sharing size crackers, Granola pouch (3-4oz), Dried fruit bag (medium), Beef jerky (3oz)", "subcategory": "Snacks (Non-Candy, No Utensils, 2.5-5oz, Not Single)"}
        - {"category": "Physical", "description": "Single-serving prepackaged savory or Cereal-based/fruit/nut snack items (excluding candy), eaten without utensils, weight less than 2.5 ounces.", "example": "Individual pretzel pack, Cracker snack pack (small), Single fruit leather strip, Nut packet (<2.5oz), Small granola bar", "subcategory": "Snacks (Non-Candy, No Utensils, <2.5oz/Single)"}
        - {"category": "Physical", "description": "A food product by bacterial fermentation of milk, in various styles, flavors, and fat contents, used as an ingredient or consumed directly.", "example": "Plain yogurt (bulk), Greek yogurt (tubs), Flavored yogurt (large container), Drinkable yogurt (ingredient), Skyr (for recipes)", "subcategory": "Yogurt"}
        - {"category": "Physical", "description": "Baked goods, typically sweet and flour-based, that are not enrobed or coated in chocolate, used as ingredients or standalone.", "example": "Shortbread (for crusts), Sugar cookies (plain), Oatmeal cookies (no choc), Digestive biscuits, Graham crackers (for baking)", "subcategory": "Biscuits/Cookies (Not Chocolate Covered)"}
        - {"category": "Physical", "description": "Savory snack foods from potatoes (e.g., chips) or nuts, as ingredients or general snack items.", "example": "Potato chips (ingredient/snack), Roasted peanuts (ingredient/snack), Mixed nuts (bulk), Cashews (for recipes), Potato sticks (ingredient)", "subcategory": "Potato/Nut Snacks"}
        - {"category": "Physical", "description": "Baked, conical or cup-shaped wafers designed to hold ice cream or other frozen desserts, sold empty for filling.", "example": "Wafer cones, Sugar cones, Waffle cones, Cake cones, Gluten-free cones", "subcategory": "Empty Ice Cream Cones"}
        - {"category": "Physical", "description": "Food items and household supplies purchased by consumers for use and consumption at home, a broad category for staple pantry items.", "example": "Flour/sugar, Canned goods, Pasta/rice, Baking supplies, Spices", "subcategory": "Groceries (Home Consumption)"}
        - {"category": "Physical", "description": "Snack products where fruit (e.g., puree, concentrate, pieces) is listed as the primary ingredient by weight, often chewy and sweet.", "example": "Fruit leathers (fruit first), Gummy fruit snacks (real fruit), Fruit puree snacks, Dried fruit bars (fruit primary), Fruit ropes", "subcategory": "Fruit Snacks (Fruit First Ingredient)"}
        - {"category": "Physical", "description": "Snack products with fruit flavoring or minor fruit content where fruit is not primary ingredient, and which do not contain flour.", "example": "Fruit-flavored gummies (gelatin based), Hard candies (fruit flavored), Jelly beans (fruit type), Fruit-flavored chews (no flour), Marshmallows (fruit flavored)", "subcategory": "Fruit Snacks (Not Fruit First, No Flour)"}
        - {"category": "Physical", "description": "Pre-cooked items resembling sandwiches (e.g., filled pockets, breakfast sandwiches) sold frozen and requiring reheating, used as meal components.", "example": "Hot Pockets, Breakfast sandwiches (frozen), Frozen burgers (with bun), Panini (frozen), Stuffed bread pockets", "subcategory": "Frozen Cooked Sandwich-Type Items"}
        - {"category": "Physical", "description": "Breakfast/snack food of rolled oats, nuts, sweeteners, sometimes puffed rice, usually baked crisp, used as ingredient or standalone.", "example": "Loose granola (topping), Granola cereal (base), Homemade style granola, Granola clusters (ingredient), Toasted oat granola", "subcategory": "Granola"}
        - {"category": "Physical", "description": "Frozen dessert from dairy/non-dairy alternatives, in containers larger than 16 fl oz (typically 1 US pint or more), used as ingredient or dessert.", "example": "Pint ice cream, Quart ice cream tubs, Half-gallon ice cream, Family-size gelato, Large sorbet container", "subcategory": "Ice Cream (>16oz / 1 Pint)"}
        - {"category": "Physical", "description": "Prepackaged, ready-to-consume dessert products like puddings or gelatin, specifically formulated and portioned for infants and young children.", "example": "Baby dessert cups, Infant fruit gels, Toddler pudding pouches, Custard for babies, Organic baby gelatin snacks", "subcategory": "Baby Puddings/Gelatin (Prepackaged, Ready-to-Eat)"}
        - {"category": "Physical", "description": "Individual, whole pieces of fresh fruit sold unpackaged or minimally packaged, for direct consumption or as an ingredient.", "example": "Apples (single), Bananas (single), Oranges (individual), Pears (loose), Peaches (single)", "subcategory": "Single Fruit Pieces"}
        - {"category": "Physical", "description": "The dried outer leaves of an ear of corn, primarily used as a wrapping for foods like tamales during cooking, or for crafts.", "example": "Dried corn husks (for tamales), Corn shucks, Tamale wrappers, Corn wrappers, Hoja de tamal", "subcategory": "Corn Husks"}
        - {"category": "Physical", "description": "Drinkable liquids infused with carbon dioxide gas to make them effervescent, a broad category including sodas, sparkling water, etc.", "example": "Soda water (ingredient), Sparkling water (bulk), Cola (for mixing), Lemon-lime soda (ingredient), Club soda (large bottle)", "subcategory": "Carbonated Drinks"}
        - {"category": "Physical", "description": "Water that has been carbonated, containing no added flavors, sweeteners, or other ingredients, often used as a beverage base or mixer.", "example": "Seltzer water (plain), Unflavored sparkling water, Plain soda water, Carbonated mineral water (unsweetened), Bubbly water (unflavored)", "subcategory": "Carbonated Plain Water"}
        - {"category": "Physical", "description": "Still (non-carbonated) drinkable liquids made entirely from fruit or vegetable juice, or from 100% juice concentrate.", "example": "Orange juice (100%, still), Apple juice (100%, still), Grape juice (100%, still), Tomato juice (100%, still), Pineapple juice (100%, still)", "subcategory": "Non-Carbonated 100% Juice"}
        - {"category": "Physical", "description": "Still (non-carbonated) drinkable liquids containing 0.5% or more alcohol by volume, used as beverages or sometimes as ingredients.", "example": "Wine (still), Sake, Mead (still), Hard cider (still, >0.5% ABV), Fortified wines (port/sherry)", "subcategory": "Non-Carbonated Drinks Abv ≥0.5%"}
        - {"category": "Physical", "description": "Ground or whole roasted coffee beans, or instant coffee powder, used as an ingredient to prepare non-carbonated coffee beverages.", "example": "Ground coffee, Whole coffee beans, Instant coffee crystals, Espresso powder, Decaf coffee powder", "subcategory": "Non-Carbonated Coffee Powder/Beans"}
        - {"category": "Physical", "description": "A broad category for still (non-carbonated) drinkable liquids that are sweetened or not and do not fall into more specific categories.", "example": "Sweetened iced tea (bottled), Lemonade (not 100% juice), Fruit punch (sweetened), Sports drinks (sweetened), Flavored water (sweetened)", "subcategory": "Non-Carbonated Other Sweetened"}
        - {"category": "Physical", "description": "Still (non-carbonated) commercially produced flavored beverages, typically sweetened, that do not contain alcohol.", "example": "Fruit punch (still), Lemonade (bottled), Iced tea (sweetened, bottled), Flavored still drinks, Kids' juice drinks (non-carbonated)", "subcategory": "Non-Carbonated Soft Drinks"}
        - {"category": "Physical", "description": "Ready-to-drink still tea beverages, or unsweetened liquid tea concentrates for dilution, containing no added sweeteners, as food ingredients.", "example": "Bottled unsweetened black tea, Unsweetened iced green tea (RTD), Herbal tea infusion (unsweetened, bottled), Cold brew tea (unsweetened), Unsweetened tea concentrate (liquid)", "subcategory": "Non-Carbonated Tea - Liquid Unsweetened"}
        - {"category": "Physical", "description": "Dried tea leaves (loose or in bags) or powdered tea extracts intended for brewing or mixing non-carbonated tea, as food ingredients.", "example": "Black tea bags, Loose leaf green tea, Herbal tea sachets, Instant tea powder (unsweetened), Matcha powder", "subcategory": "Non-Carbonated Tea - Powder/Loose/Bag"}
        - {"category": "Physical", "description": "Still (non-carbonated) water with added natural or artificial flavors and caloric or non-caloric sweeteners, sold as a grocery item.", "example": "Vitaminwater, Propel flavored water, Sweetened fruit-infused water, Flavored electrolyte water (sweetened), Kids' flavored water (sweetened)", "subcategory": "Non-Carbonated Flavored Water - Sweetened"}
        - {"category": "Physical", "description": "Still (non-carbonated) water infused with natural or artificial fruit or herbal flavors, containing no added sweeteners, sold as a grocery item.", "example": "Hint water (unsweetened), Unsweetened fruit essence water, Herbal infused water (no sugar), Cucumber water (unsweetened), Lemon essence water", "subcategory": "Non-Carbonated Flavored Water - Unsweetened"}
        - {"category": "Physical", "description": "Still (non-carbonated) water without any added flavors, sweeteners, or other ingredients, intended for drinking, sold as a grocery item.", "example": "Purified bottled water, Spring water (still), Mineral water (plain, still), Filtered tap water (as product), Distilled water (drinking)", "subcategory": "Non-Carbonated Plain Water"}
        - {"category": "Physical", "description": "A broad category of sweet confections, typically made with sugar or sugar substitutes, often flavored and used as ingredients or final products.", "example": "Chocolate bars, Gummy candies, Hard candies, Lollipops, Caramels", "subcategory": "Candy"}
        - {"category": "Physical", "description": "Heavy-duty powered machines or equipment used in industrial settings for the production, processing, or assembly of goods.", "example": "CNC machines, Lathes, Milling machines, Injection molding machines, Industrial robots", "subcategory": "Manufacturing Machinery"}
        - {"category": "Physical", "description": "An elective service contract, purchased separately, providing for repair or replacement of tangible personal property beyond standard manufacturer's warranty.", "example": "Extended warranty (electronics), Appliance service contract, Vehicle protection plan (optional), Jewelry care plan, Furniture protection warranty", "subcategory": "Optional Warranty with TPP Sales"}
        - {"category": "Physical", "description": "Drinks dispensed by customers themselves from a fountain machine, typically carbonated soft drinks or iced tea, for immediate consumption.", "example": "Fountain soda, Self-serve iced tea, Dispensed lemonade, Flavored water (fountain), Sports drink (dispenser)", "subcategory": "Self-Serve/Fountain (Immediate Consumption)"}
        - {"category": "Physical", "description": "Hot or iced coffee, tea, or cocoa beverages prepared by the seller to customer order for immediate consumption.", "example": "Brewed coffee (to-go), Latte/Cappuccino, Iced tea (cafe prepared), Hot chocolate (seller made), Espresso shot", "subcategory": "Seller-Prepared Hot/Iced Coffee/Tea/Cocoa (Immediate Consumption)"}
        - {"category": "Physical", "description": "Cold, ready-to-eat food items by seller, as starters or accompaniments, sold packaged.", "example": "Packaged deviled eggs, Cold shrimp cocktail (packaged), Pre-made bruschetta topping (packaged), Small coleslaw side (packaged), Individual pasta salad cup", "subcategory": "Prepared Food - Appetizers/Sides (Seller-Prepared, Cold, Packaged)"}
        - {"category": "Physical", "description": "Assortments of baked goods arranged on a platter by the seller and sold packaged for events or group consumption.", "example": "Cookie platters (seller-arranged), Assorted pastry trays (packaged), Mini cupcake platters, Brownie bite assortments, Breakfast pastry platters", "subcategory": "Prepared Food - Bakery Party Trays/Platters (Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Baked goods by seller, sold unpackaged or minimally packaged for consumption shortly after purchase.", "example": "Fresh croissant (counter sale), Donut (from display case), Slice of cake (to-go), Warm cookie (bakery), Individual muffin (unpackaged)", "subcategory": "Prepared Food - Bakery (Seller-Prepared, Immediate Consumption)"}
        - {"category": "Physical", "description": "Baked goods prepared by the seller and sold individually packaged in a single-serving portion.", "example": "Wrapped muffin, Individual brownie (packaged), Single cupcake (boxed), Packaged scone, Slice of pie (packaged)", "subcategory": "Prepared Food - Bakery (Seller-Prepared, Single Serving, Packaged)"}
        - {"category": "Physical", "description": "Cold baked goods prepared by the seller and sold packaged in portions suitable for two to three servings.", "example": "Small pie (packaged, cold), Half-dozen cookies (boxed), Small cake (2-3 serve, packaged), Packaged cheesecake slice (large), Loaf cake (small, packaged)", "subcategory": "Prepared Food - Bakery (Seller-Prepared, Cold, 2-3 Servings, Packaged)"}
        - {"category": "Physical", "description": "Cold baked goods prepared by the seller and sold packaged in portions suitable for four to five servings.", "example": "Medium pie (packaged, cold), Dozen cookies (boxed), Medium cake (4-5 serve, packaged), Cheesecake (small, packaged), Large loaf cake (packaged)", "subcategory": "Prepared Food - Bakery (Seller-Prepared, Cold, 4-5 Servings, Packaged)"}
        - {"category": "Physical", "description": "Cold baked goods prepared by the seller and sold packaged in portions suitable for six or more servings.", "example": "Large pie (packaged, cold), Cookie platters (seller-made, >6 svgs), Full sheet cake (boxed), Large cheesecake (packaged), Box of pastries (large quantity)", "subcategory": "Prepared Food - Bakery (Seller-Prepared, Cold, ≥6 Servings, Packaged)"}
        - {"category": "Physical", "description": "Meats cooked by the seller (e.g., roasted, grilled), then chilled and sold in packaged form, ready to eat cold or be reheated.", "example": "Sliced roast beef (packaged), Rotisserie chicken (chilled, packaged), Cooked ham slices (deli pack), Turkey breast (cooked, packaged), Pulled pork (cold, packaged)", "subcategory": "Prepared Food - Cooked Meats (Seller-Prepared, Cold, Packaged)"}
        - {"category": "Physical", "description": "Salads (e.g., potato, macaroni, chicken salad) prepared by the seller and portioned by hand (scooped) into containers for sale.", "example": "Scooped potato salad, Hand-packed coleslaw, Deli counter pasta salad, Freshly portioned chicken salad, Individual Tabbouleh (deli packaged)", "subcategory": "Prepared Food - Deli Salads (Seller-Prepared, Hand Dipped/Scooped, Packaged)"}
        - {"category": "Physical", "description": "Main course dishes prepared by the seller, packaged, and sold in a state that requires heating by the consumer before eating.", "example": "Frozen lasagna, Chilled shepherd's pie, Take-and-bake pizza, Packaged mac & cheese (reheat), Chicken Alfredo (requires heating)", "subcategory": "Prepared Food - Entrees (Seller-Prepared, Requires Heating, Packaged)"}
        - {"category": "Physical", "description": "Cooked main dishes, starters, or accompaniments by seller, then chilled and packaged for sale, eaten cold or reheated.", "example": "Packaged cold chicken entree, Chilled pasta salad side, Pre-cooked meatloaf slice, Cold quiche (packaged), Cooked & chilled vegetable medley", "subcategory": "Prepared Food - Entrees/Appetizers/Sides (Seller-Prepared, Previously Cooked, Cold, Packaged)"}
        - {"category": "Physical", "description": "A mixture of cut fresh fruits, prepared by the seller without other ingredients like yogurt or dressings, and sold in a packaged form.", "example": "Mixed fruit cup (packaged), Cut melon bowl, Berry medley (packaged), Sliced apple container, Pineapple chunks (packaged)", "subcategory": "Prepared Food - Fresh Fruit Salad (Fruit Only, Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Frozen desserts, blended milky drinks (shakes), or blended fruit/vegetable drinks (smoothies) prepared by seller to order for immediate consumption.", "example": "Ice cream cone/cup, Milkshake (made-to-order), Fruit smoothie (freshly blended), Sundae (custom made), Frozen yogurt (soft serve)", "subcategory": "Prepared Food - Ice Cream/Shakes/Smoothies (Seller-Prepared, Immediate Consumption)"}
        - {"category": "Physical", "description": "Food prepared by a seller in a ready-to-eat state, typically for consumption on or shortly after leaving the premises.", "example": "Hot dog (from cart), Deli sandwich (made-to-order), Pizza slice (heated), Restaurant meal (dine-in/take-out), Salad (from salad bar)", "subcategory": "Prepared Food - Intended for Immediate Consumption"}
        - {"category": "Physical", "description": "Complete meals or plates with multiple food components, prepared by the seller, then chilled and packaged for sale, often requiring reheating.", "example": "Packaged bento box (cold), Chilled TV dinner, Cold cut platter (meal), Pre-made lunch combo, Sushi meal (packaged cold)", "subcategory": "Prepared Food - Meals/Combination Plates (Seller-Prepared, Cold, Packaged)"}
        - {"category": "Physical", "description": "Assortments of food items (e.g., fruits, vegetables, cheeses) simply cut and arranged on a platter by the seller and packaged.", "example": "Sliced fruit platter, Vegetable crudité tray, Cheese cube platter, Cut meat tray, Relish tray (pickles/olives)", "subcategory": "Prepared Food - Party Trays/Platters (Seller-Prepared, Cut & Packaged Only)"}
        - {"category": "Physical", "description": "Cold assortments of food where different ingredients are mixed or assembled into dishes (e.g., salads, dips, mini sandwiches) on a platter by seller.", "example": "Cold cut combo platter, Mixed salad platter, Dip & chip tray, Pinwheel sandwich platter, Antipasto platter", "subcategory": "Prepared Food - Party Trays/Platters (Seller-Prepared, Cold, Combined Ingredients)"}
        - {"category": "Physical", "description": "Hot assortments of food where ingredients are cooked and combined into dishes (e.g., mini quiches, meatballs) on a platter by seller.", "example": "Hot appetizer platter, Mini quiche tray (hot), Spring roll assortment (hot), Meatball platter (warm), Chicken wing platter", "subcategory": "Prepared Food - Party Trays/Platters (Seller-Prepared, Hot, Combined Ingredients)"}
        - {"category": "Physical", "description": "Self-service or seller-served selection of salad ingredients from which customers create their own salads for immediate consumption.", "example": "Self-serve salad bar, Custom-made salad (salad bar), Pay-by-weight salad, To-go salad (from bar), Cafeteria salad station", "subcategory": "Prepared Food - Salad Bars (Immediate Consumption)"}
        - {"category": "Physical", "description": "Prepackaged kits with pre-portioned ingredients (greens, toppings, dressing, protein) for assembling a complete salad meal, assembled by seller.", "example": "Chef salad kit (seller assembled), Caesar salad kit (with chicken, packaged by seller), Greek salad kit (store-made), Cobb salad kit (packaged in-house), Taco salad kit (seller prepared)", "subcategory": "Prepared Food - Salad Meal Kit (Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Ready-to-eat salads prepared and packaged by the seller, available in single-serving (individual) or larger, multi-serving (large) containers.", "example": "Single-serve Caesar salad, Family-size garden salad (packaged), Large potato salad tub, Individual quinoa salad cup, Packaged Greek salad (various sizes)", "subcategory": "Prepared Food - Salads (Individual/Large, Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Ready-to-eat salads prepared and packaged by the seller in containers intended for more than one person.", "example": "Large coleslaw container, Family-pack pasta salad, Shareable green salad (packaged), Bulk tabbouleh (seller packaged), Party-size fruit salad", "subcategory": "Prepared Food - Salads (Multiple-Serving, Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Single, ready-to-eat cold sandwiches prepared by the seller and sold individually in prepackaged form.", "example": "Turkey & cheese sandwich (packaged), Ham sandwich (premade), Veggie wrap (cold, packaged), Chicken salad sandwich (individual), Egg salad sandwich (prepackaged)", "subcategory": "Prepared Food - Sandwiches (Individual, Seller-Prepared, Cold, Packaged)"}
        - {"category": "Physical", "description": "Assortments of cold sandwiches or portions arranged on a platter by the seller and sold prepackaged for group consumption.", "example": "Assorted sandwich tray, Pinwheel sandwich platter, Mini croissant sandwich platter, Club sandwich platter, Vegetarian sandwich tray", "subcategory": "Prepared Food - Sandwich Platters (Seller-Prepared, Cold, Packaged)"}
        - {"category": "Physical", "description": "Assortments of various sushi rolls and pieces, prepared and arranged on a platter by the seller, and sold prepackaged.", "example": "Assorted sushi tray (in-house), Nigiri & maki platter (seller-made), Party sushi set (store packaged), California roll platter (freshly made), Rainbow roll assortment (seller pack)", "subcategory": "Prepared Food - Sushi Platters (Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Individual servings or small sets of sushi prepared and packaged by the seller for retail sale.", "example": "California roll pack (in-house), Tuna nigiri set (seller-made), Spicy salmon roll (store packaged), Veggie sushi combo (freshly made), Inari sushi pack (seller)", "subcategory": "Prepared Food - Sushi (Seller-Prepared, Packaged)"}
        - {"category": "Physical", "description": "Uncooked pizzas assembled by the seller with toppings, then packaged for the customer to bake at home.", "example": "Uncooked pepperoni pizza, Fresh veggie pizza (take & bake), Build-your-own pizza (uncooked), Gourmet uncooked pizza, Family-size take & bake", "subcategory": "Prepared Food - Take & Bake Pizza (Seller-Prepared, Uncooked, Packaged)"}
        - {"category": "Physical", "description": "Food items sold prepared to a certain stage by the seller but requiring cooking or further significant preparation by the consumer, without utensils.", "example": "Marinated raw chicken (packaged), Uncooked lasagna (ready-to-bake), Frozen entrees (oven-ready), Pre-cut stir-fry kits (raw), Cookie dough (refrigerated)", "subcategory": "Prepared Food (No Utensils, Requires Consumer Cooking)"}
        - {"category": "Physical", "description": "The sale of food items, including snacks, cold foods, and beverages, through automated self-service machines.", "example": "Vended candy bars, Soda machine sales, Chip machine purchases, Vended sandwiches, Coffee vending sales", "subcategory": "Vending Machine Food Sales"}
        - {"category": "Physical", "description": "Feminine Hygiene in sales tax applications refers to products that are used by women during menstruation, vaginal discharge, and other bodily functions related to the vulva and vagina.", "example": "Tampons, Pads", "subcategory": "Feminine Hygiene"}
        - {"category": "Physical", "description": "Oral hygiene products are personal care items used to maintain oral health, such as toothpaste, mouthwash, and dental floss.", "example": "Toothpaste, Mouthwash", "subcategory": "Oral Hygiene"}
        - {"category": "Physical", "description": "Machines that sell various consumer products.", "example": "Machines vending electronics or cosmetics.", "subcategory": "Merchandise Vending Machine"}
        - {"category": "Physical", "description": "Equipment used to reduce or eliminate environmental pollution.", "example": "Smokestack scrubbers, wastewater treatment systems.", "subcategory": "General Pollution Control Equipment"}
        - {"category": "Physical", "description": "A transaction where a used item is part of the payment for another item.", "example": "Trading in an old car for a new one.", "subcategory": "General Trade-Ins"}
        - {"category": "Physical", "description": "Providing food services for events.", "example": "Wedding receptions, corporate events.", "subcategory": "Catering"}
        - {"category": "Physical", "description": "Base materials used in the production of goods.", "example": "Iron ore, crude oil.", "subcategory": "Raw Materials"}
        - {"category": "Physical", "description": "Publications containing news, information, and advertising, printed regularly.", "example": "Daily city newspaper.", "subcategory": "Newspapers"}
        - {"category": "Physical", "description": "Magazines or journals published at regular intervals.", "example": "Monthly fashion magazine.", "subcategory": "Periodicals"}
        - {"category": "Physical", "description": "Infrequent sales not part of regular business activities.", "example": "Garage sales.", "subcategory": "General Occasional Sales"}
        - {"category": "Physical", "description": "This represents media inserts distributed via newspaper insert.  Includes the sale of TPP.", "example": "Coupon Booklet ,Collectible Postcards, Discount Voucher ,Branded Magnet", "subcategory": "Advertising media / inserts distributed via newspaper insert"}
        - {"category": "Physical", "description": "This represents media inserts distributed via shared mail package.  Includes the sale of TPP.", "example": "Product Catalog, Promotional Calendar, Order Form Insert, Special Flyer", "subcategory": "Advertising media / inserts distributed via shared mail package"}
        - {"category": "Physical", "description": "Foundational religious texts including sacred scriptures (Bibles), collections of songs for worship (hymnals), compilations of prayers, and instructional materials sold to Religious Org or Church", "example": "Holy Bibles, Hymnals (songbooks), Book of Common Prayer, Catechisms, Sunday school textbooks", "subcategory": "Religious Books for Church/Religious Org"}
        - {"category": "Physical", "description": "Written or printed works of a spiritual or religious nature, including sacred texts, theological studies, devotional guides, and biographies of religious figures.", "example": "Holy Bibles, Hymnals (songbooks), Book of Common Prayer, Catechisms, Sunday school textbooks, Devotional books, Christian fiction, Books on theology", "subcategory": "Religious Books - General Sales"}
        - {"category": "Physical", "description": "A subscription to a regularly published magazine or journal that focuses on religious topics, news, faith-based living, or denominational matters.", "example": "Christianity Today subscription, Guideposts magazine, Catholic Digest subscription, Relevant Magazine subscription, Faith-based journals", "subcategory": "Religious Periodical/Magazine Subscription"}
        - {"category": "Services", "description": "Services requiring special training or certification.", "example": "Legal advice, medical consultation", "subcategory": "Professional Services"}
        - {"category": "Services", "description": "Activities designed for entertainment or enjoyment.", "example": "Theme parks, bowling alleys.", "subcategory": "Amusement / Recreation"}
        - {"category": "Services", "description": "Monitoring services to observe and protect a location or environment", "example": "Intrusion Systems, Intrusion Alarm Systems, Perimeter Detection Systems, Monitored home security alarm systems", "subcategory": "Security Services-Electronic Monitoring"}
        - {"category": "Services", "description": "Maintenance performed under a maintenance contract agreement - Labor Charge Only", "example": "Cleaning, HVAC system upkeep, Electrical repairs, Plumbing, Preventive Maintenance.", "subcategory": "Facility Maintenance Real Property - Labor Only"}
        - {"category": "Services", "description": "Major renovation of existing buildings - Labor Charge Only", "example": "Remodeling, Renovation, Capital Improvement", "subcategory": "Commercial Major Renovation Services (Capital Improvement - Labor Only)"}
        - {"category": "Services", "description": "Construction or Remodeling performed on an Existing Building - Labor Charge Only", "example": "General Remodeling and Renovation not resulting in Capital Improvement.", "subcategory": "Commercial Construction Services (Existing Buildings - Labor Only)"}
        - {"category": "Services", "description": "The application of decorative stitched designs or monograms to clothing items at the time of their sale, as part of the same transaction.", "example": "Monogramming new shirts, Logo embroidery (on purchase), Custom stitching (new apparel), Personalized embroidery (at sale), Team name on new jerseys", "subcategory": "Embroidery Services (With Clothing Sale)"}
        - {"category": "Services", "description": "Standalone services for applying decorative stitched designs or monograms to customer-owned clothing or other tangible personal property.", "example": "Monogramming existing items, Logo on customer's jacket, Custom embroidery (client's item), Badge stitching service, Repair embroidery", "subcategory": "Embroidery Services (Not with Clothing/TPP Sale)"}
        - {"category": "Services", "description": "Ongoing services that track and report the performance, energy production, and health of a solar PV system, often remotely.", "example": "Production monitoring, System health alerts, Performance reporting, Remote diagnostics, App-based tracking", "subcategory": "Solar Monitoring Service"}
        - {"category": "Services", "description": "The physical labor and workmanship involved in installing a residential solar panel system, excluding equipment costs.", "example": "Panel mounting labor, Wiring installation labor, Inverter setup labor, Racking assembly labor, System commissioning labor", "subcategory": "Solar Install Services (Residential, Labor Only)"}
        - {"category": "Services", "description": "The physical labor and expertise for installing commercial-scale solar panel systems, excluding equipment costs.", "example": "Large-scale panel installation, Commercial rooftop mounting labor, Ground-mount system labor (commercial), Heavy equipment operation (solar install), Project management (labor portion)", "subcategory": "Solar Install Services (Commercial, Labor Only)"}
        - {"category": "Services", "description": "The labor involved in diagnosing and fixing issues with existing residential solar panel systems, separate from equipment replacement costs.", "example": "Inverter troubleshooting labor, Panel replacement labor, Wiring repair labor, Leak fixing (solar mounts), System inspection labor", "subcategory": "Solar Repair Services (Residential, Labor Only)"}
        - {"category": "Services", "description": "The labor component for diagnosing and repairing malfunctions in commercial-scale solar panel systems, distinct from replacement part costs.", "example": "Commercial inverter repair labor, Module cleaning/repair labor, O&M service labor, Fault diagnosis labor, System recommissioning labor", "subcategory": "Solar Repair Services (Commercial, Labor Only)"}
        - {"category": "Services", "description": "Professional services for planning and engineering a solar PV system, including site assessment, component selection, and layout schematics.", "example": "Site assessment, Shading analysis, Electrical design (solar), Structural engineering (solar), Permit package preparation", "subcategory": "Solar System Design Services"}
        - {"category": "Services", "description": "Advisory services for businesses to design, improve, implement, or manage operational or information technology systems.", "example": "IT systems consulting, ERP implementation advice, Business process optimization, Workflow analysis, Infrastructure planning", "subcategory": "Consulting IT Systems (Business Use)"}
        - {"category": "Services", "description": "Advisory services to help businesses choose appropriate software solutions and design how software will be structured or customized.", "example": "Needs analysis (software), Vendor evaluation, RFP development, Software architecture design, Customization planning", "subcategory": "Consulting Services for Software Selection & Design"}
        - {"category": "Services", "description": "Carpentry services on commercial real property resulting in a permanent addition or upgrade, increasing property value or extending its useful life.", "example": "New building framing, Installing permanent fixtures, Major structural woodwork, Custom cabinetry (built-in), Office build-outs", "subcategory": "Carpentry for Commercial Real Property (Capital Improvement)"}
        - {"category": "Services", "description": "Carpentry services on commercial real property for repair, maintenance, or minor alterations not substantially adding to value or prolonging life.", "example": "Repairing wood fixtures, Replacing damaged trim, Minor office partition changes, Fixing wooden stairs, Door frame repair", "subcategory": "Carpentry for Commercial Real Property (No Capital Improvement)"}
        - {"category": "Services", "description": "Carpentry services on residential real property resulting in a permanent addition, significant upgrade, or extension of useful life.", "example": "Building a new deck, Framing a home addition, Installing new kitchen cabinets, Major window/door replacement, Built-in bookshelves", "subcategory": "Carpentry for Residential Real Property (Capital Improvement)"}
        - {"category": "Services", "description": "Carpentry services on residential real property for repair, maintenance, or minor alterations not materially adding to value or extending life.", "example": "Repairing a wooden fence, Replacing a broken step, Fixing a door jamb, Minor trim repair, Adjusting sticking doors", "subcategory": "Carpentry for Residential Real Property (No Capital Improvement)"}
        - {"category": "Services", "description": "Carpentry services for creating, repairing, or modifying movable wooden items or fixtures not permanently attached to real property.", "example": "Custom furniture building, Wooden cabinet repair (freestanding), Picture frame making, Wooden toy construction, Crating services (wood)", "subcategory": "Carpentry for Tangible Personal Property"}
        - {"category": "Services", "description": "Instructional services exclusively for business clients on using Software as a Service (SaaS) applications relevant to their operations.", "example": "Corporate SaaS onboarding, Employee training (SaaS tool), Admin training (business SaaS), SaaS certification programs (B2B), On-site team training (SaaS)", "subcategory": "SaaS Training B2B"}
        - {"category": "Services", "description": "Instructional services exclusively for individual consumers on using Software as a Service (SaaS) applications for personal use.", "example": "Personal productivity SaaS tutorials, Consumer app training, Online course (SaaS usage), User guides (interactive SaaS), Individual coaching (SaaS app)", "subcategory": "SaaS Training B2C"}
        - {"category": "Services", "description": "A contract between a SaaS provider and a business client outlining terms of use, service levels, support, and other legal specifics.", "example": "Enterprise SaaS license, Business cloud service contract, Master Service Agreement (SaaS), Service Level Agreement (SaaS B2B), Subscription terms (business SaaS)", "subcategory": "SaaS Service Agreement B2B"}
        - {"category": "Services", "description": "Cloud-based database solutions for businesses as SaaS, offering managed database functionalities without physical server maintenance.", "example": "Amazon RDS (business use), Azure SQL Database (B2B), Google Cloud SQL (enterprise), MongoDB Atlas (professional), Managed NoSQL service (B2B)", "subcategory": "SaaS Database Service B2B"}
        - {"category": "Services", "description": "Cloud-based database solutions for individual consumers as SaaS, often for personal projects or limited use.", "example": "Free tier DBaaS, Hobbyist cloud database, Personal project database service, Developer sandbox DBaaS, Firebase Realtime Database (individual)", "subcategory": "SaaS Database Service B2C"}
        - {"category": "Services", "description": "A contract between a SaaS provider and an individual consumer outlining terms of use, service levels, privacy, and payment.", "example": "Streaming service terms, Social media user agreements, Personal cloud storage T&Cs, Online game EULAs (SaaS), Freemium app terms (consumer)", "subcategory": "SaaS Service Agreement B2C"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of custom-developed software delivered to the client via electronic download.", "example": "Custom software setup (downloaded), Configuration services (custom ESD), Deployment assistance (downloaded custom), Integration services (downloaded custom), Post-download setup (custom)", "subcategory": "Custom Software Setup - Downloaded"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of custom-developed software directly installed on the client's hardware by the vendor.", "example": "On-premise custom software setup, Vendor-led configuration (custom), Custom software deployment (local), Integration services (load & leave), System setup (custom on-site)", "subcategory": "Custom Software Setup - Load & Leave"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of custom-developed software initially delivered to the business client on tangible physical media.", "example": "Custom SW install (from CD/DVD), Configuration from physical media, Deployment from USB (custom SW), Integration (custom, physical source), On-site setup (custom, media based)", "subcategory": "Custom Software Setup - Physical Media"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of prewritten software delivered to the business client via electronic download.", "example": "Prewritten software setup (downloaded), Configuration (downloaded COTS), Deployment assistance (downloaded prewritten), Integration services (downloaded prewritten), Post-download setup (prewritten)", "subcategory": "Canned Software Setup - Downloaded"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of prewritten software directly installed on the business client's hardware by the vendor.", "example": "On-premise COTS software setup, Vendor-led configuration (prewritten), Prewritten software deployment (local), Integration (load & leave prewritten), System setup (prewritten on-site)", "subcategory": "Canned Software Setup - Load & Leave"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of prewritten software initially delivered to the business client on tangible physical media.", "example": "Prewritten SW install (from CD/DVD), Configuration from physical media (COTS), Deployment from USB (prewritten SW), Integration (prewritten, physical source), On-site setup (prewritten, media based)", "subcategory": "Canned Software Setup - Physical Media"}
        - {"category": "Services", "description": "Required services for setup, configuration, and deployment of prewritten software, sold to businesses as an inseparable part of the downloaded license.", "example": "Required setup (downloaded SW), Bundled configuration (COTS ESD), Mandatory deployment (B2B download), Essential integration (downloaded), Forced initial setup (prewritten)", "subcategory": "Setup Services Mandatory Canned Software - Downloaded"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of custom-developed software (delivered via download), sold independently from the software sale.", "example": "Independent custom SW setup, Post-sale configuration (custom ESD), Standalone deployment (downloaded custom), Separate integration services (custom), Add-on setup (custom downloaded)", "subcategory": "Setup Services Standalone Custom Software - Downloaded"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of custom-developed software (installed directly on client hardware), sold independently.", "example": "Post-sale custom SW setup (on-premise), Independent configuration (custom local), Standalone deployment (load & leave custom), Separate integration (custom on-site), Add-on setup (custom on-prem)", "subcategory": "Setup Services Standalone Custom Software - Load & Leave"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of custom-developed software (initially delivered on physical media), sold independently.", "example": "Independent custom SW install (from media), Post-sale configuration (custom physical), Standalone deployment (media custom), Separate integration (custom physical source), Add-on setup (custom from media)", "subcategory": "Setup Services Standalone Custom Software - Physical Media"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of prewritten software (delivered via download), sold independently from the software license.", "example": "Independent COTS setup (downloaded), Post-sale configuration (downloaded prewritten), Standalone deployment (ESD prewritten), Separate integration (downloaded COTS), Add-on setup (prewritten downloaded)", "subcategory": "Setup Services Standalone Canned Software - Downloaded"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of prewritten software (installed directly on client hardware), sold independently.", "example": "Independent COTS setup (on-premise), Post-sale configuration (local prewritten), Standalone deployment (load & leave COTS), Separate integration (on-site prewritten), Add-on setup (prewritten on-prem)", "subcategory": "Setup Services Standalone Canned Software - Load & Leave"}
        - {"category": "Services", "description": "Services for setup, configuration, and deployment of prewritten software (initially delivered on physical media), sold independently.", "example": "Independent COTS install (from media), Post-sale configuration (physical prewritten), Standalone deployment (media COTS), Separate integration (physical COTS source), Add-on setup (prewritten from media)", "subcategory": "Setup Services Standalone Canned Software - Physical Media"}
        - {"category": "Services", "description": "Instructional services on using custom-developed software sold independently from the software development or sale.", "example": "Post-development user training (custom ESD), Independent custom software workshop, Standalone e-learning (custom SW), Separate admin training (downloaded custom), Ad-hoc feature training (custom)", "subcategory": "Custom Software Training (Standalone)"}
        - {"category": "Services", "description": "Advanced instructional services for IT professionals on managing or developing a custom software system, sold independently.", "example": "Custom system admin training (IT), Developer training (custom ESD), Technical deep-dive (downloaded custom), Custom API training (IT Pro), Backend management workshop (custom)", "subcategory": "Custom System Software Training (Standalone)"}
        - {"category": "Services", "description": "Instructional services on using prewritten software, sold independently from the software license.", "example": "COTS software user course (online), Independent e-learning (downloaded SW), Standalone product workshop, Separate admin training (prewritten ESD), Ad-hoc feature training (COTS)", "subcategory": "Canned Software Training (Standalone)"}
        - {"category": "Services", "description": "Services for setup of prewritten software (downloaded), offered to businesses as a separately purchased option, not required with the license.", "example": "Optional setup (downloaded SW), Elective configuration (COTS ESD), Add-on deployment (B2B download), Non-mandatory integration (downloaded), A la carte setup (prewritten)", "subcategory": "Setup Services Optional Canned Software - Downloaded"}
        - {"category": "Services", "description": "General services for setup, configuration, and deployment of prewritten software delivered via electronic download to business clients.", "example": "Prewritten software setup (downloaded), Configuration (downloaded COTS), Deployment assistance (downloaded prewritten), Integration services (downloaded prewritten), Post-download setup (prewritten)", "subcategory": "Setup Services Canned Software - Downloaded"}
        - {"category": "Services", "description": "Required instructional services on using prewritten software, sold to businesses as an inseparable part of the downloaded software license.", "example": "Bundled user training (downloaded SW), Required onboarding (COTS ESD), Compulsory e-learning (B2B download), Essential admin training (downloaded), Forced initial product training", "subcategory": "Canned Software Mandatory Training - Downloaded"}
        - {"category": "Services", "description": "Instructional services on using prewritten software (downloaded), offered to businesses as a separately purchased option, not required with the license.", "example": "Elective user course (downloaded SW), Add-on e-learning (COTS ESD), Optional workshop (B2B download), A la carte admin training (downloaded), Supplementary product training", "subcategory": "Canned Software Optional Training - Downloaded"}
        - {"category": "Services", "description": "General instructional services for business clients on using prewritten software that is delivered via electronic download.", "example": "COTS software user training (B2B online), Business e-learning (downloaded SW), Product workshop (B2B ESD), Admin training (prewritten B2B download), Feature training (B2B COTS)", "subcategory": "Software Training - Canned - Downloaded B2B"}
        - {"category": "Services", "description": "Instructional services to teach users how to effectively operate custom-developed software that is delivered via electronic download.", "example": "Bespoke software user training (ESD), Custom application workshop (downloaded), E-learning for custom SW, Admin training (custom downloaded), Custom feature instruction (ESD)", "subcategory": "Custom Software Training - Downloaded"}
        - {"category": "Services", "description": "Instructional services on using custom-developed software (installed directly on client hardware), potentially sold with or independently.", "example": "User training (custom on-prem SW), On-site workshop (local custom), Admin coaching (custom installed), Feature instruction (local custom), System orientation (custom on-site)", "subcategory": "Custom Software Training - Load & Leave"}
        - {"category": "Services", "description": "Instructional services on using custom-developed software (initially delivered on physical media), potentially sold with or independently.", "example": "Training (custom SW from media), Workshop (custom, physical source media), On-site training (custom, media delivery), Admin course (custom, from media), User guidance (custom, physical install)", "subcategory": "Custom Software Training - Physical Media"}
        - {"category": "Services", "description": "Instructional services for users on how to operate prewritten software that is delivered via electronic download.", "example": "COTS software e-learning, Downloaded application tutorials, Online product training, User webinars (downloaded SW), Certification prep (prewritten ESD)", "subcategory": "Canned Software Training - Downloaded"}
        - {"category": "Services", "description": "Instructional services for users on how to operate prewritten software that has been installed directly on their hardware by the vendor.", "example": "On-site COTS training, User workshop (local prewritten SW), Admin coaching (load & leave SW), Product familiarization (on-prem), Classroom training (installed SW)", "subcategory": "Canned Software Training - Load & Leave"}
        - {"category": "Services", "description": "Instructional services for users on how to operate prewritten software that was initially delivered on tangible physical media.", "example": "Training (COTS from CD/DVD), Workshop (prewritten, physical media source), On-site class (media-based SW), User guidance (physical COTS install), Product tutorials (from media)", "subcategory": "Canned Software Training - Physical Media"}
        - {"category": "Services", "description": "Required support services (excluding software updates) for prewritten or hosted software, provided remotely as an inseparable part of the license.", "example": "Bundled help desk (SaaS), Required technical support (hosted), Essential remote assistance, Non-update support plan (mandatory), Compulsory service contract (no updates)", "subcategory": "Canned/Hosted Software support - Mandatory - Services Only"}
        - {"category": "Services", "description": "Required software updates and support services for prewritten or hosted software, provided remotely as an inseparable part of the license.", "example": "SaaS subscription (updates/support included), Mandatory maintenance plan (hosted SW), Bundled updates & help desk, Required support & upgrades, All-inclusive hosted SW support", "subcategory": "Canned/Hosted Software support - Mandatory - Updates & Services"}
        - {"category": "Services", "description": "Elective support services (excluding software updates) for prewritten or hosted software, provided remotely and purchased separately.", "example": "Optional help desk (SaaS), Add-on technical support (hosted), Elective remote assistance plan, Pay-as-you-go support (services only), Premium support tier (no updates)", "subcategory": "Canned/Hosted Software support - Optional - Services Only"}
        - {"category": "Services", "description": "Elective software updates and support services for prewritten or hosted software, provided remotely and purchased separately.", "example": "Optional maintenance plan (SaaS), Add-on updates & support (hosted), Elective support & upgrade package, Premium support subscription, Pay-for-updates-and-service model", "subcategory": "Canned/Hosted Software support - Optional - Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support, bug fixes, and potentially updates for custom-developed software (delivered via download), sold inseparably.", "example": "Bundled custom SW support (ESD), Required bug fixes (downloaded custom), Essential maintenance (custom SW), Compulsory support package (downloaded), Non-optional custom software care", "subcategory": "Custom Software Support - Mandatory - Downloaded"}
        - {"category": "Services", "description": "Required ongoing software updates and support services for custom-developed software (downloaded), sold as an inseparable part of the agreement.", "example": "Bundled support & upgrades (custom ESD), Required patch & help desk (downloaded custom), Essential maintenance package (custom SW), Compulsory full support (downloaded), Non-optional custom care (updates/service)", "subcategory": "Custom Software Support - Mandatory - Downloaded Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support services (excluding updates) for custom-developed software (downloaded), sold as an inseparable part of the agreement.", "example": "Bundled help desk (custom ESD), Required technical support (downloaded custom, no updates), Essential remote assistance (custom SW), Compulsory service contract (no updates, downloaded), Non-optional custom support (services)", "subcategory": "Custom Software Support - Mandatory - Downloaded Services Only"}
        - {"category": "Services", "description": "Required ongoing support, bug fixes, and potentially updates for custom software (installed on client hardware), sold inseparably.", "example": "Bundled custom SW support (on-prem), Required bug fixes (local custom), Essential maintenance (custom installed), Compulsory support package (load & leave), Non-optional custom software care (local)", "subcategory": "Custom Software Support - Mandatory - Load & Leave"}
        - {"category": "Services", "description": "Required ongoing software updates and support services for custom software (installed on client hardware), sold as an inseparable part of the agreement.", "example": "Bundled support & upgrades (custom on-prem), Required patch & help desk (local custom), Essential maintenance package (custom installed), Compulsory full support (load & leave), Non-optional custom care (updates/service, local)", "subcategory": "Custom Software Support - Mandatory - Load & Leave Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support services (excluding updates) for custom software (installed on client hardware), sold as an inseparable part of the agreement.", "example": "Bundled help desk (custom on-prem), Required technical support (local custom, no updates), Essential remote assistance (custom installed SW), Compulsory service contract (no updates, local), Non-optional custom support (services, local)", "subcategory": "Custom Software Support - Mandatory - Load & Leave Services Only"}
        - {"category": "Services", "description": "Required ongoing support, bug fixes, and potentially updates for custom software (delivered on physical media), sold inseparably.", "example": "Bundled custom SW support (physical media delivery), Required bug fixes (custom from CD/DVD), Essential maintenance (custom SW media), Compulsory support package (physical media), Non-optional custom software care (media)", "subcategory": "Custom Software Support - Mandatory - Physical Media"}
        - {"category": "Services", "description": "Required ongoing software updates and support services for custom software (delivered on physical media), sold as an inseparable part of the agreement.", "example": "Bundled support & upgrades (custom, media), Required patch & help desk (custom, physical source), Essential maintenance package (custom SW, media), Compulsory full support (physical media based), Non-optional custom care (updates/service, media)", "subcategory": "Custom Software Support - Mandatory - Physical Media Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support services (excluding updates) for custom software (delivered on physical media), sold as an inseparable part of the agreement.", "example": "Bundled help desk (custom, media), Required tech support (custom, physical, no updates), Essential remote assistance (custom SW, media), Compulsory service contract (no updates, media), Non-optional custom support (services, media)", "subcategory": "Custom Software Support - Mandatory - Physical Media Services Only"}
        - {"category": "Services", "description": "Elective ongoing software updates and support services for custom-developed software (delivered via download), purchased separately.", "example": "Optional support & upgrades (custom ESD), Elective patch & help desk (downloaded custom), Add-on maintenance package (custom SW), A la carte full support (downloaded), Separately purchased custom care", "subcategory": "Custom Software Support - Optional - Downloaded Updates & Services"}
        - {"category": "Services", "description": "Elective ongoing support services (excluding updates) for custom-developed software (delivered via download), purchased separately.", "example": "Optional help desk (custom ESD), Elective tech support (downloaded custom, no updates), Add-on remote assistance (custom SW), Pay-as-you-go custom support (services), Separately purchased service contract (no updates)", "subcategory": "Custom Software Support - Optional - Downloaded Services Only"}
        - {"category": "Services", "description": "Elective ongoing software updates and support services for custom software (installed on client hardware), purchased separately.", "example": "Optional support & upgrades (custom on-prem), Elective patch & help desk (local custom), Add-on maintenance (custom installed), A la carte full support (load & leave), Separately purchased custom care (local)", "subcategory": "Custom Software Support - Optional - Load & Leave Updates & Services"}
        - {"category": "Services", "description": "Elective ongoing support services (excluding updates) for custom software (installed on client hardware), purchased separately.", "example": "Optional help desk (custom on-prem), Elective tech support (local custom, no updates), Add-on remote assistance (custom installed), Pay-as-you-go custom support (services, local), Separately purchased service contract (local)", "subcategory": "Custom Software Support - Optional - Load & Leave Services Only"}
        - {"category": "Services", "description": "Elective ongoing software updates and support services for custom software (delivered on physical media), purchased separately.", "example": "Optional support & upgrades (custom, media), Elective patch & help desk (custom, physical source), Add-on maintenance (custom SW, media), A la carte full support (physical media based), Separately purchased care (media)", "subcategory": "Custom Software Support - Optional - Physical Media Updates & Services"}
        - {"category": "Services", "description": "Elective ongoing support services (excluding updates) for custom software (delivered on physical media), purchased separately.", "example": "Optional help desk (custom, media), Elective tech support (custom, physical, no updates), Add-on remote assistance (custom SW, media), Pay-as-you-go support (services, media), Separately purchased service (media)", "subcategory": "Custom Software Support - Optional - Physical Media Services Only"}
        - {"category": "Services", "description": "Required ongoing electronic delivery of updates, patches, and new versions for prewritten software, sold as an inseparable part of the license.", "example": "Bundled software updates (ESD), Required version upgrades (download), Essential patch delivery (electronic), Compulsory update service, Non-optional electronic enhancements", "subcategory": "Canned Software Support - Mandatory - Electronic Updates"}
        - {"category": "Services", "description": "Required ongoing electronic delivery of updates for prewritten software, specifically for business customers, sold as an inseparable part of the license.", "example": "Business software update subscription (mandatory), Enterprise patch management (required ESD), B2B version upgrade service (compulsory), Essential corporate software updates, Non-optional B2B electronic maintenance", "subcategory": "Canned Software Support - Mandatory - Electronic Updates B2B"}
        - {"category": "Services", "description": "Required ongoing delivery of updates, patches, and new versions for prewritten software via physical media (e.g., CD, DVD, USB), sold inseparably.", "example": "Update CDs (mandatory), Version upgrades on DVD (required), Patch delivery (physical media), Compulsory tangible media updates, Non-optional physical software enhancements", "subcategory": "Canned Software Support - Mandatory - Tangible Updates"}
        - {"category": "Services", "description": "Elective ongoing electronic delivery of updates, patches, and new versions for prewritten software, purchased separately from the initial license.", "example": "Optional update subscription (ESD), Elective version upgrades (download), Add-on patch service (electronic), A la carte electronic enhancements, Pay-for-updates service", "subcategory": "Canned Software Support - Optional - Electronic Updates"}
        - {"category": "Services", "description": "Elective ongoing electronic delivery of updates for prewritten software, for business customers, purchased separately from the initial license.", "example": "B2B optional update subscription (ESD), Elective version upgrades (download, business), Add-on B2B patch service (electronic), A la carte electronic enhancements (corp), Pay-for-updates service (B2B)", "subcategory": "Canned Software Support - Optional - Electronic Updates B2B"}
        - {"category": "Services", "description": "Elective ongoing delivery of updates for prewritten software via physical media (e.g., CD, USB), purchased separately from the initial license.", "example": "Optional update CDs, Elective version upgrades (physical media), Add-on patch delivery (USB), A la carte physical media updates, Pay-for-tangible-updates service", "subcategory": "Canned Software Support - Optional - Tangible Updates"}
        - {"category": "Services", "description": "Elective ongoing software updates (delivered on physical media) and support services for prewritten software, purchased separately from the license.", "example": "Optional support & physical updates, Elective patch (media) & help desk, Add-on maintenance (physical media SW), A la carte full support (media based), Separately purchased care (physical media)", "subcategory": "Canned Software Support - Optional - Physical Media Updates & Services"}
        - {"category": "Services", "description": "Elective ongoing support services (excluding software updates on physical media) for prewritten software initially delivered on physical media, purchased separately.", "example": "Optional help desk (physical media SW), Elective tech support (COTS physical, no updates), Add-on remote assistance (physical SW), Pay-as-you-go support (services, media basis), Separately purchased service (media SW)", "subcategory": "Canned Software Support - Optional - Physical Media Services Only"}
        - {"category": "Services", "description": "Required ongoing software updates (downloaded) and support services for prewritten software, sold as an inseparable part of the license.", "example": "Bundled support & upgrades (ESD), Required patch & help desk (downloaded), Essential maintenance package (COTS), Compulsory full support (downloaded SW), Non-optional software care (updates/service)", "subcategory": "Canned Software Support - Mandatory - Downloaded Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support services (excluding software updates via download) for prewritten software, sold as an inseparable part of the license.", "example": "Bundled help desk (ESD SW), Required technical support (downloaded, no updates), Essential remote assistance (COTS), Compulsory service contract (no updates, downloaded), Non-optional software support (services)", "subcategory": "Canned Software Support - Mandatory - Downloaded Services Only"}
        - {"category": "Services", "description": "Required ongoing support, bug fixes, and potentially updates for prewritten software (installed by vendor on client hardware), sold inseparably.", "example": "Bundled COTS support (on-prem), Required bug fixes (local prewritten), Essential maintenance (installed SW), Compulsory support package (load & leave), Non-optional software care (local)", "subcategory": "Canned Software Support - Mandatory - Load & Leave"}
        - {"category": "Services", "description": "Required ongoing software updates and support services for prewritten software (installed by vendor on client hardware), sold inseparably.", "example": "Bundled support & upgrades (COTS on-prem), Required patch & help desk (local prewritten), Essential maintenance package (installed SW), Compulsory full support (load & leave COTS), Non-optional care (updates/service, local)", "subcategory": "Canned Software Support - Mandatory - Load & Leave Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support services (excluding updates) for prewritten software (installed by vendor on client hardware), sold inseparably.", "example": "Bundled help desk (COTS on-prem), Required tech support (local prewritten, no updates), Essential remote assistance (installed SW), Compulsory service contract (no updates, local), Non-optional support (services, local)", "subcategory": "Canned Software Support - Mandatory - Load & Leave Services Only"}
        - {"category": "Services", "description": "Required ongoing software updates (on physical media) and support services for prewritten software, sold as an inseparable part of the license.", "example": "Bundled support & physical updates (COTS), Required patch (media) & help desk, Essential maintenance (physical media SW), Compulsory full support (media based), Non-optional care (updates/service, media)", "subcategory": "Canned Software Support - Mandatory - Physical Media Updates & Services"}
        - {"category": "Services", "description": "Required ongoing support services (excluding updates on physical media) for prewritten software delivered on physical media, sold inseparably.", "example": "Bundled help desk (physical media SW), Required tech support (COTS physical, no updates), Essential remote assistance (physical SW), Compulsory service contract (no updates, media basis), Non-optional support (services, media SW)", "subcategory": "Canned Software Support - Mandatory - Physical Media Services Only"}
        - {"category": "Services", "description": "Elective ongoing software updates (downloaded) and support services for prewritten software, purchased separately from the initial license.", "example": "Optional support & upgrades (ESD), Elective patch & help desk (downloaded), Add-on maintenance package (COTS), A la carte full support (downloaded SW), Separately purchased software care", "subcategory": "Canned Software Support - Optional - Downloaded Updates & Services"}
        - {"category": "Services", "description": "Elective ongoing support services (excluding software updates via download) for prewritten software, purchased separately from the initial license.", "example": "Optional help desk (ESD SW), Elective tech support (downloaded, no updates), Add-on remote assistance (COTS), Pay-as-you-go support (services), Separately purchased service contract", "subcategory": "Canned Software Support - Optional - Downloaded Services Only"}
        - {"category": "Services", "description": "Elective ongoing software updates and support services for prewritten software (installed by vendor on client hardware), purchased separately.", "example": "Optional support & upgrades (COTS on-prem), Elective patch & help desk (local prewritten), Add-on maintenance (installed SW), A la carte full support (load & leave COTS), Separately purchased care (local)", "subcategory": "Canned Software Support - Optional - Load & Leave Updates & Services"}
        - {"category": "Services", "description": "Elective ongoing support services (excluding updates) for prewritten software (installed by vendor on client hardware), purchased separately.", "example": "Optional help desk (COTS on-prem), Elective tech support (local prewritten, no updates), Add-on remote assistance (installed SW), Pay-as-you-go support (services, local), Separately purchased service contract (local)", "subcategory": "Canned Software Support - Optional - Load & Leave Services Only"}
        - {"category": "Services", "description": "A required contractual agreement for businesses providing ongoing software updates and support services for prewritten software delivered via download.", "example": "Bundled enterprise support plan (ESD), Required B2B maintenance agreement, Compulsory update & service contract, Non-optional full support (B2B download), Essential software assurance (B2B)", "subcategory": "Canned Software Support - Mandatory - Updates & Services"}
        - {"category": "Services", "description": "An elective contractual agreement for businesses providing ongoing software updates and support services for prewritten software delivered via download.", "example": "Optional enterprise support plan (ESD), Elective B2B maintenance agreement, Add-on update & service contract, A la carte full support (B2B download), Separately purchased software assurance (B2B)", "subcategory": "Canned Software Support - Optional - Updates & Services"}
        - {"category": "Services", "description": "Required technical support services and ongoing updates for prewritten software, delivered via download to business customers as an inseparable part.", "example": "Bundled B2B tech support & updates, Required enterprise maintenance (ESD), Essential software care (B2B download), Compulsory service & upgrade plan, Non-optional full product support", "subcategory": "Software - Mandatory Technical Services & Updates (Canned, B2B, Downloaded)"}
        - {"category": "Services", "description": "Required remote technical support services for prewritten software (downloaded to businesses), sold as an inseparable part of the license.", "example": "Bundled remote help desk (B2B ESD), Required online support (COTS B2B), Essential virtual assistance (downloaded SW), Compulsory chat/phone support, Non-optional remote troubleshooting", "subcategory": "Canned Software Remote Support Services - Mandatory - Downloaded"}
        - {"category": "Services", "description": "Elective technical support services and ongoing software updates for prewritten software (downloaded to businesses), purchased separately.", "example": "Optional B2B support & upgrades (ESD), Elective patch & help desk (downloaded B2B), Add-on premium care (COTS), A la carte tech services & updates, Separately purchased enterprise support", "subcategory": "Software - Optional Technical Services & Updates (Canned, B2B, Downloaded)"}
        - {"category": "Services", "description": "Elective remote technical support services for prewritten software (downloaded to businesses), purchased separately from the license.", "example": "Optional remote help desk (B2B ESD), Elective online support (COTS B2B), Add-on virtual assistance (downloaded SW), Pay-per-incident remote support, Premium remote troubleshooting", "subcategory": "Canned Software Remote Support Services - Optional - Downloaded"}
        - {"category": "Services", "description": "Providing expert advice and professional services to individuals or organizations across a wide range of unspecified subject areas.", "example": "Business strategy advice, Management consulting, IT consulting (general), Marketing advice, Personal coaching (general)", "subcategory": "General Consulting"}
        - {"category": "Services", "description": "Advisory services focused on helping organizations improve their performance, through analysis of business problems and development of improvement plans.", "example": "Strategy consulting, Operations consulting, HR consulting, Financial advisory, Change management", "subcategory": "Management Consulting"}
        - {"category": "Services", "description": "Advisory services by tax professionals to individuals or businesses on tax planning, compliance, preparation, and controversy resolution.", "example": "Tax planning, Tax preparation advice, IRS audit representation, State tax consulting, International tax advice", "subcategory": "Tax Consulting"}
        - {"category": "Services", "description": "Services for businesses for electronic data storage and the ability to access and retrieve that data, often cloud-based.", "example": "Cloud data warehousing (B2B), Off-site backup services (business), Document management systems (cloud), Enterprise data archiving, Database hosting (storage/retrieval)", "subcategory": "Data Services Storage & Retrieval B2B"}
        - {"category": "Services", "description": "Services for individual consumers for electronic storage of personal data and the ability to access and retrieve it, often cloud-based.", "example": "Personal cloud storage, Photo backup services, Online file hosting, Consumer data backup, Digital locker services", "subcategory": "Data Services Storage & Retrieval B2C"}
        - {"category": "Services", "description": "Services involving the reproduction of text and images, typically with ink on paper or other materials, using various printing technologies.", "example": "Business card printing, Brochure printing, Offset printing, Digital printing, Large format printing", "subcategory": "Printing Services"}
        - {"category": "Services", "description": "Advisory services focused on optimizing an organization's operational processes, supply chain management, warehousing, transportation, and distribution networks.", "example": "Supply chain optimization, Warehouse design consulting, Transportation routing advice, Inventory management consulting, Logistics network planning", "subcategory": "Process, Physical Distribution & Logistics Consulting"}
        - {"category": "Services", "description": "Professional services involving the planning, organizing, securing, managing, leading, and controlling resources to achieve specific project goals.", "example": "Construction project management, IT project oversight, Event planning services, Product development management, Business change management", "subcategory": "Project Management Services"}
        - {"category": "Services", "description": "Products branded with a logo or slogan, used in marketing and communication programs to promote a company, brand, event, or message.", "example": "Branded pens, Logo t-shirts, Custom mugs, Promotional bags, Keychains with logo", "subcategory": "Promotional Merchandise"}
        - {"category": "Services", "description": "Activities and support functions related to the process of selling products or services, including lead generation, customer interaction, and closing sales.", "example": "Sales representation, Lead generation services, Sales outsourcing, Retail sales assistance, Telemarketing services", "subcategory": "Sales Services"}
        - {"category": "Services", "description": "This represents materials used in performance of maintenance services.", "example": "Filters, cleaning agents, paint, sealants, caulking, light bulbs, ballasts, HVAC parts, wiring, piping, fasteners, insulation", "subcategory": "Maintenance Services - Materials"}
        - {"category": "Services", "description": "In-person dance instruction provided by a live instructor.", "example": "Dance Class, Ballet Lessons, Hip-Hop Training, Jazz Workshop", "subcategory": "Dance Lessons"}
        - {"category": "Digital", "description": "Unknown digital product", "example": "Unknown digital product", "subcategory": "Unknown"}
        - {"category": "Misc", "description": "Unknown miscellaneous product", "example": "Unknown miscellaneous product", "subcategory": "Unknown"}
        - {"category": "Physical", "description": "Unknown physical product", "example": "Unknown physical product", "subcategory": "Unknown"}
        - {"category": "Services", "description": "Unknown service product", "example": "Unknown service product", "subcategory": "Unknown"}
        - {"category": "Unknown", "description": "Unknown product", "example": "Unknown product", "subcategory": "Unknown"}
      title: "ProductCodeByCategoryEnum"
    "ProductCodeEnum":
      type: "string"
      enum:
        - "CODE_0000"
        - "CODE_1001"
        - "CODE_1002"
        - "CODE_1003"
        - "CODE_1004"
        - "CODE_1005"
        - "CODE_1006"
        - "CODE_1007"
        - "CODE_1008"
        - "CODE_1009"
        - "CODE_2001"
        - "CODE_2002"
        - "CODE_2003"
        - "CODE_2004"
        - "CODE_2005"
        - "CODE_2006"
        - "CODE_2007"
        - "CODE_2008"
        - "CODE_2009"
        - "CODE_2010"
        - "CODE_2011"
        - "CODE_2012"
        - "CODE_3001"
        - "CODE_3002"
        - "CODE_3003"
        - "CODE_3004"
        - "CODE_3005"
        - "CODE_3006"
        - "CODE_3007"
        - "CODE_3008"
        - "CODE_3009"
        - "CODE_3010"
        - "CODE_3011"
        - "CODE_3012"
        - "CODE_3013"
        - "CODE_3014"
        - "CODE_3015"
        - "CODE_3016"
        - "CODE_3017"
        - "CODE_3018"
        - "CODE_3019"
        - "CODE_3020"
        - "CODE_3021"
        - "CODE_3022"
        - "CODE_3023"
        - "CODE_3024"
        - "CODE_3025"
        - "CODE_3026"
        - "CODE_3027"
        - "CODE_3028"
        - "CODE_3029"
        - "CODE_3030"
        - "CODE_9001"
        - "CODE_9002"
        - "CODE_9003"
        - "CODE_9004"
        - "CODE_9005"
        - "CODE_9006"
        - "CODE_9007"
        - "CODE_9008"
        - "CODE_9009"
        - "CODE_9010"
      title: "ProductCodeEnum"
    "ProductConfigCreate":
      properties:
        "primary_product_category": {"$ref": "#/components/schemas/ProductCategoryEnum"}
        "primary_product_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
        "ai_enabled":
          type: "boolean"
          title: "Ai Enabled"
          default: false
        "product_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Description"
      type: "object"
      required:
        - "primary_product_category"
        - "primary_product_subcategory"
      title: "ProductConfigCreate"
    "ProductConfigCreateUpdate":
      properties:
        "primary_product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "null"
        "primary_product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "null"
        "ai_enabled":
          type: "boolean"
          title: "Ai Enabled"
          default: false
        "product_description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Product Description"
      type: "object"
      required:
        - "primary_product_category"
        - "primary_product_subcategory"
      title: "ProductConfigCreateUpdate"
    "ProductConfigRead":
      properties:
        "primary_product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "null"
        "primary_product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "null"
        "ai_enabled":
          type: "boolean"
          title: "Ai Enabled"
          default: false
        "product_description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Product Description"
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "primary_product_category"
        - "primary_product_subcategory"
        - "id"
      title: "ProductConfigRead"
    "ProductConfigUpdate":
      properties:
        "primary_product_category": {"$ref": "#/components/schemas/ProductCategoryEnum"}
        "primary_product_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
        "ai_enabled":
          type: "boolean"
          title: "Ai Enabled"
          default: false
        "product_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Description"
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "primary_product_category"
        - "primary_product_subcategory"
        - "id"
      title: "ProductConfigUpdate"
    "ProductConfigsCreate":
      properties:
        "product_configs":
          items: {"$ref": "#/components/schemas/ProductConfigCreate"}
          type: "array"
          title: "Product Configs"
      type: "object"
      required:
        - "product_configs"
      title: "ProductConfigsCreate"
    "ProductConfigsUpdate":
      properties:
        "product_configs":
          items: {"$ref": "#/components/schemas/ProductConfigUpdate"}
          type: "array"
          title: "Product Configs"
      type: "object"
      required:
        - "product_configs"
      title: "ProductConfigsUpdate"
    "ProductCreateManual":
      properties:
        "external_id":
          type: "string"
          title: "External Id"
          description: "A unique external identifier for the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "A description of the product."
        "status": {"$ref": "#/components/schemas/ProductStatusEnum", "description": "The approval status of the product.", "default": "APPROVED"}
        "product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "string"
          title: "Product Category"
          description: "The high-level category of the product."
        "product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "string"
          title: "Product Subcategory"
          description: "The subcategory of the product."
        "tax_exempt":
          type: "boolean"
          title: "Tax Exempt"
          description: "Specifies whether the product is tax-exempt."
        "source": {"$ref": "#/components/schemas/SourceEnum", "description": "Indicates the source of the product.", "default": "OTHER"}
      type: "object"
      required:
        - "external_id"
        - "name"
        - "product_category"
        - "product_subcategory"
        - "tax_exempt"
      title: "ProductCreateManual"
    "ProductOverview":
      properties:
        "category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "string"
          title: "Category"
        "subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "string"
          title: "Subcategory"
        "total_products":
          type: "integer"
          title: "Total Products"
      type: "object"
      required:
        - "category"
        - "subcategory"
        - "total_products"
      title: "ProductOverview"
    "ProductRead":
      properties:
        "id":
          type: "string"
          title: "Id"
        "external_id":
          type: "string"
          title: "External Id"
        "sku":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Sku"
        "code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - type: "string"
          title: "Code"
        "name":
          type: "string"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "status": {"$ref": "#/components/schemas/ProductStatusEnum"}
        "product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "string"
          title: "Product Category"
        "product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "string"
          title: "Product Subcategory"
        "tax_exempt":
          type: "boolean"
          title: "Tax Exempt"
        "source": {"$ref": "#/components/schemas/SourceEnum"}
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
        "classification_failed":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Classification Failed"
      type: "object"
      required:
        - "id"
        - "external_id"
        - "sku"
        - "code"
        - "name"
        - "description"
        - "status"
        - "product_category"
        - "product_subcategory"
        - "tax_exempt"
        - "source"
        - "connection_id"
        - "classification_failed"
      title: "ProductRead"
    "ProductStatusEnum":
      type: "string"
      enum:
        - "APPROVED"
        - "PARTIALLY_APPROVED"
        - "PENDING"
      title: "ProductStatusEnum"
    "ProductSubCategory":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Name of the product subcategory\n            (e.g., ORAL_HYGIENE, MEDICAL_DEVICES, etc.)"
        "description":
          type: "string"
          title: "Description"
          description: "Description of the subcategory in the context of sales tax"
        "example":
          type: "string"
          title: "Example"
          description: "Example products or services within the subcategory"
        "is_frequent":
          type: "boolean"
          title: "Is Frequent"
          description: "Indicates if the subcategory is a frequent subcategory used by the organization. This field is deprecated."
          default: false
      type: "object"
      required:
        - "name"
        - "description"
        - "example"
      title: "ProductSubCategory"
    "ProductSubCategoryEnum":
      type: "string"
      enum:
        - "UNKNOWN"
        - "SAAS"
        - "DIGITAL_GENERAL"
        - "B2B_SAAS"
        - "SOFTWARE_ON_PERSONAL_PROPERTY"
        - "SOFTWARE_DOWNLOADED"
        - "CUSTOM_SOFTWARE_ON_PERSONAL_PROPERTY"
        - "CUSTOM_SOFTWARE_DOWNLOADED"
        - "CUSTOMIZATION_OF_SOFTWARE"
        - "B2C_SAAS"
        - "IAAS"
        - "SERVICE_GENERAL"
        - "PROFESSIONAL_SERVICE"
        - "TANGIBLE_PROPERTY_SERVICE"
        - "REAL_PROPERTY_SERVICE"
        - "BUSINESS_SERVICE"
        - "PERSONAL_SERVICE"
        - "AMUSEMENT_SERVICE"
        - "MEDICAL_SERVICES"
        - "SECURITY_SERVICES_ELECTRONIC_MONITORING"
        - "FACILITY_MAINTENANCE_REAL_PROPERTY_LABOR_ONLY"
        - "COMMERCIAL_RENOVATION_CAPITAL_IMPROVEMENT_LABOR"
        - "COMMERCIAL_CONSTRUCTION_EXISTING_BUILDINGS_LABOR"
        - "PHYSICAL_GENERAL"
        - "GENERAL_CLOTHING"
        - "CATERING"
        - "GROCERY_FOOD"
        - "LEASES_AND_RENTALS_MOTOR_VEHICLES"
        - "LEASES_AND_RENTALS_TANGIBLE_MEDIA_PROPERTY"
        - "MACHINERY"
        - "RAW_MATERIALS"
        - "UTILITIES_FUEL"
        - "MEDICAL_DEVICES"
        - "MEDICINES"
        - "NEWSPAPERS"
        - "PERIODICALS"
        - "GENERAL_OCCASIONAL_SALES"
        - "MOTOR_VEHICLES_OCCASIONAL_SALES"
        - "GENERAL_OPTIONAL_MAINTENANCE_CONTRACTS"
        - "PARTS_PURCHASED_OPTIONAL_MAINTENANCE_CONTRACTS"
        - "GENERAL_POLLUTION_CONTROL_EQUIPMENT"
        - "GENERAL_TRADE_INS"
        - "FOOD_VENDING_MACHINE"
        - "MERCHANDISE_VENDING_MACHINE"
        - "SUPPLEMENTS"
        - "FEMININE_HYGIENE"
        - "ORAL_HYGIENE"
        - "BEVERAGE_NUTRITION_LABEL_ENERGY_SHOTS_AND_DRINKS"
        - "DIETARY_SUPPLEMENTS_SUPPLEMENT_FACTS_LABEL_RETAIL"
        - "ADVERTISING_MEDIA_INSERT_DISTRIBUTED_BY_NEWSPAPER"
        - "ADVERTISING_MEDIA_INSERT_DISTRIBUTED_BY_MAIL_PACKAGE"
        - "MAINTENANCE_SERVICES_MATERIALS"
        - "NUTRITION_BARS"
        - "SHIPPING"
        - "GIFT_CARD"
        - "CREDIT_CARD_SURCHARGES"
        - "CREDIT_CARD_FEES"
        - "MISCELLANEOUS_EXEMPT"
        - "DISCOUNT"
        - "GIFT_WRAPPING"
        - "HANDLING"
        - "TAX"
        - "DANCE_LESSONS"
      title: "ProductSubCategoryEnum"
    "ProductUpdate":
      properties:
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
          description: "The unique identifier of the product to be updated."
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External identifier provided for the product,\n        typically by the source system."
        "sku":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Sku"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the product."
        "status": {"$ref": "#/components/schemas/ProductStatusEnum", "description": "The approval status of the product.", "default": "APPROVED"}
        "product_category": {"$ref": "#/components/schemas/ProductCategoryEnum", "description": "Main category of the product.\n        For example, PHYSICAL, DIGITAL, etc."}
        "product_subcategory": {"$ref": "#/components/schemas/ProductSubCategoryEnum", "description": "Subcategory of the product.\n        For example, GENERAL_CLOTHING, UNKNOWN, etc."}
        "tax_exempt":
          type: "boolean"
          title: "Tax Exempt"
          description: "Indicates whether the product is tax-exempt."
        "classification_failed":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Classification Failed"
          description: "Indicates if the product classification failed."
          default: false
      type: "object"
      required:
        - "name"
        - "product_category"
        - "product_subcategory"
        - "tax_exempt"
      title: "ProductUpdate"
    "ProductUpdateV2":
      properties:
        "name":
          type: "string"
          title: "Name"
        "status": {"$ref": "#/components/schemas/ProductStatusEnum"}
        "product_category":
          type: "string"
          title: "Product Category"
        "product_subcategory":
          type: "string"
          title: "Product Subcategory"
        "tax_exempt":
          type: "boolean"
          title: "Tax Exempt"
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
        "sku":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Sku"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "classification_failed":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Classification Failed"
      type: "object"
      required:
        - "name"
        - "status"
        - "product_category"
        - "product_subcategory"
        - "tax_exempt"
      title: "ProductUpdateV2"
    "RawImportData":
      properties:
        "file_name":
          type: "string"
          title: "File Name"
        "data":
          type: "string"
          title: "Data"
        "source": {"$ref": "#/components/schemas/SourceEnum"}
      type: "object"
      required:
        - "file_name"
        - "data"
        - "source"
      title: "RawImportData"
    "RefreshTokenRequest":
      properties:
        "refresh_token":
          type: "string"
          title: "Refresh Token"
      type: "object"
      required:
        - "refresh_token"
      title: "RefreshTokenRequest"
    "RegistrationCreatePayload":
      properties:
        "registration_import_type":
          type: "string"
          const: "REGULAR"
          title: "Registration Import Type"
          description: "Specifies this is a regular jurisdiction registration import."
          default: "REGULAR"
        "registration_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Registration Date"
          description: "The date when the registration was created. Format: YYYY-MM-DD."
        "registration_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Email"
          description: "Email address associated with the registration."
        "registration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Key"
          description: "A unique key assigned to the registration."
        "deregistration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deregistration Key"
          description: "A unique key assigned for deregistration."
        "registration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Requested"
          description: "Timestamp when the registration was requested."
        "registration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Completed"
          description: "Timestamp when the registration was completed."
        "deregistration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Requested"
          description: "Timestamp when deregistration was requested."
        "deregistration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Completed"
          description: "Timestamp when the deregistration was completed."
        "auto_registered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Registered"
          description: "Indicates whether the registration was completed automatically."
          default: false
        "registrations_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
          description: "The tax registration regime (e.g., STANDARD, SIMPLIFIED)."
        "change_regime_status":
          anyOf:
            - {"$ref": "#/components/schemas/ChangeRegimeStatusEnum"}
            - type: "null"
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The country code (ISO 3166-1 alpha-2 format) where the registration applies."}
        "state_code":
          type: "string"
          title: "State Code"
          description: "The state/province code where the registration applies."
        "state_name":
          type: "string"
          title: "State Name"
          description: "The name of the state/province."
        "filing_frequency": {"$ref": "#/components/schemas/FilingFrequencyEnum", "description": "Specifies how often tax filings should be made. Possible values: MONTHLY, QUARTERLY, ANNUALLY, UNKNOWN."}
        "filing_days":
          type: "integer"
          title: "Filing Days"
          description: "The number of days before the filing deadline."
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
          description: "Username for accessing tax registration details."
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
          description: "Additional comments related to the registration."
        "create_filings_from":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Create Filings From"
          description: "The date from which filings should be created. should start (YYYY-MM-DD)."
        "initial_sync":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Initial Sync"
          description: "Indicates whether an initial synchronization should be performed."
          default: false
        "amount_fees":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount Fees"
          description: "The amount of fees associated with the registration."
          default: "0.00"
        "vda":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda"
          description: "Indicates whether a Voluntary Disclosure Agreement (VDA) applies."
          default: false
        "imported":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Imported"
          description: "Whether the registration was imported from another system."
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "The sales tax ID associated with the registration."
        "sst_import":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Sst Import"
          description: "Indicates whether the registration is an SST Import."
          default: false
        "password_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Plain Text"
          description: "The plaintext password for accessing the tax registration account."
        "password_metadata_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Metadata Plain Text"
          description: "Metadata related to the password."
      type: "object"
      required:
        - "country_code"
        - "state_code"
        - "state_name"
        - "filing_frequency"
        - "filing_days"
      title: "RegistrationCreatePayload"
    "RegistrationRead":
      properties:
        "registration_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Registration Date"
          description: "The date when the registration was created. Format: YYYY-MM-DD."
        "registration_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Email"
          description: "Email address associated with the registration."
        "registration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Key"
          description: "A unique key assigned to the registration."
        "deregistration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deregistration Key"
          description: "A unique key assigned for deregistration."
        "registration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Requested"
          description: "Timestamp when the registration was requested."
        "registration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Completed"
          description: "Timestamp when the registration was completed."
        "deregistration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Requested"
          description: "Timestamp when deregistration was requested."
        "deregistration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Completed"
          description: "Timestamp when the deregistration was completed."
        "auto_registered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Registered"
          description: "Indicates whether the registration was completed automatically."
          default: false
        "registrations_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
          description: "The tax registration regime (e.g., STANDARD, SIMPLIFIED)."
        "change_regime_status":
          anyOf:
            - {"$ref": "#/components/schemas/ChangeRegimeStatusEnum"}
            - type: "null"
        "third_party_enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Third Party Enabled"
          description: "Indicates whether third-party access is enabled for this registration."
          default: false
        "marked_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marked Collecting"
          description: "Indicates whether the  registration is marked as collecting in shopify"
        "status": {"$ref": "#/components/schemas/RegistrationStatusEnum", "description": "The current status of the registration. Possible values: REGISTERED, PROCESSING, UNREGISTERED, DEREGISTERING, DEREGISTERED, VALIDATING, AWAITING_CLARIFICATION."}
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The country code (ISO 3166-1 alpha-2 format) where the registration applies."}
        "state_code":
          type: "string"
          title: "State Code"
          description: "The state/province code where the registration applies."
        "state_name":
          type: "string"
          title: "State Name"
          description: "The name of the state/province."
        "filing_frequency": {"$ref": "#/components/schemas/FilingFrequencyEnum", "description": "Specifies how often tax filings should be made.\n                                                Possible values: MONTHLY, QUARTERLY, ANNUALLY, UNKNOWN."}
        "filing_days":
          type: "integer"
          title: "Filing Days"
          description: "The number of days before the filing deadline."
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
          description: "Username for accessing tax registration details."
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
          description: "Additional comments related to the registration."
        "create_filings_from":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Create Filings From"
          description: "The date from which filings should be created.\n        should start (YYYY-MM-DD)."
        "initial_sync":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Initial Sync"
          description: "Indicates whether an initial synchronization should be performed."
          default: false
        "amount_fees":
          type: "string"
          title: "Amount Fees"
          description: "The amount of fees associated with the registration."
          default: "0.00"
        "vda":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda"
          description: "Indicates whether a Voluntary Disclosure Agreement (VDA) applies."
          default: false
        "imported":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Imported"
          description: "Whether the registration was imported from another system."
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "The sales tax ID associated with the registration."
        "sst_import":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Sst Import"
          description: "Indicates whether the registration is an SST Import."
          default: false
        "oss_type":
          anyOf:
            - {"$ref": "#/components/schemas/OssTypeEnum"}
            - type: "null"
          description: "The type of OSS registration. Should be filled for ZZ_EU OSS registrations."
        "oss_member_state_of_identification_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "The Member State of Identification code for OSS registrations."
        "marked_collecting_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Marked Collecting Date"
          description: "The date when the registration was marked as collecting."
        "needs_mark_as_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Needs Mark As Collecting"
          description: "Indicates whether the registration needs to be marked as collecting."
          default: false
        "id":
          type: "string"
          title: "Id"
          description: "The unique identifier for the registration."
        "credits_total_available":
          type: "string"
          title: "Credits Total Available"
          default: "0.00"
        "registration_type": {"$ref": "#/components/schemas/RegistrationTypeEnum", "readOnly": true}
      type: "object"
      required:
        - "status"
        - "country_code"
        - "state_code"
        - "state_name"
        - "filing_frequency"
        - "filing_days"
        - "id"
        - "registration_type"
      title: "RegistrationRead"
    "RegistrationReadWithPassword":
      properties:
        "registration_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Registration Date"
          description: "The date when the registration was created. Format: YYYY-MM-DD."
        "registration_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Email"
          description: "Email address associated with the registration."
        "registration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Key"
          description: "A unique key assigned to the registration."
        "deregistration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deregistration Key"
          description: "A unique key assigned for deregistration."
        "registration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Requested"
          description: "Timestamp when the registration was requested."
        "registration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Completed"
          description: "Timestamp when the registration was completed."
        "deregistration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Requested"
          description: "Timestamp when deregistration was requested."
        "deregistration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Completed"
          description: "Timestamp when the deregistration was completed."
        "auto_registered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Registered"
          description: "Indicates whether the registration was completed automatically."
          default: false
        "registrations_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
          description: "The tax registration regime (e.g., STANDARD, SIMPLIFIED)."
        "change_regime_status":
          anyOf:
            - {"$ref": "#/components/schemas/ChangeRegimeStatusEnum"}
            - type: "null"
        "third_party_enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Third Party Enabled"
          description: "Indicates whether third-party access is enabled for this registration."
          default: false
        "marked_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marked Collecting"
          description: "Indicates whether the  registration is marked as collecting in shopify"
        "status": {"$ref": "#/components/schemas/RegistrationStatusEnum", "description": "The current status of the registration. Possible values: REGISTERED, PROCESSING, UNREGISTERED, DEREGISTERING, DEREGISTERED, VALIDATING, AWAITING_CLARIFICATION."}
        "country_code": {"$ref": "#/components/schemas/CountryCodeEnum", "description": "The country code (ISO 3166-1 alpha-2 format) where the registration applies."}
        "state_code":
          type: "string"
          title: "State Code"
          description: "The state/province code where the registration applies."
        "state_name":
          type: "string"
          title: "State Name"
          description: "The name of the state/province."
        "filing_frequency": {"$ref": "#/components/schemas/FilingFrequencyEnum", "description": "Specifies how often tax filings should be made.\n                                                Possible values: MONTHLY, QUARTERLY, ANNUALLY, UNKNOWN."}
        "filing_days":
          type: "integer"
          title: "Filing Days"
          description: "The number of days before the filing deadline."
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
          description: "Username for accessing tax registration details."
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
          description: "Additional comments related to the registration."
        "create_filings_from":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Create Filings From"
          description: "The date from which filings should be created.\n        should start (YYYY-MM-DD)."
        "initial_sync":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Initial Sync"
          description: "Indicates whether an initial synchronization should be performed."
          default: false
        "amount_fees":
          type: "string"
          title: "Amount Fees"
          description: "The amount of fees associated with the registration."
          default: "0.00"
        "vda":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda"
          description: "Indicates whether a Voluntary Disclosure Agreement (VDA) applies."
          default: false
        "imported":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Imported"
          description: "Whether the registration was imported from another system."
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "The sales tax ID associated with the registration."
        "sst_import":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Sst Import"
          description: "Indicates whether the registration is an SST Import."
          default: false
        "oss_type":
          anyOf:
            - {"$ref": "#/components/schemas/OssTypeEnum"}
            - type: "null"
          description: "The type of OSS registration. Should be filled for ZZ_EU OSS registrations."
        "oss_member_state_of_identification_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "The Member State of Identification code for OSS registrations."
        "marked_collecting_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Marked Collecting Date"
          description: "The date when the registration was marked as collecting."
        "needs_mark_as_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Needs Mark As Collecting"
          description: "Indicates whether the registration needs to be marked as collecting."
          default: false
        "id":
          type: "string"
          title: "Id"
          description: "The unique identifier for the registration."
        "credits_total_available":
          type: "string"
          title: "Credits Total Available"
          default: "0.00"
        "password_encrypted":
          anyOf:
            - type: "string"
              format: "binary"
            - type: "null"
          title: "Password Encrypted"
          description: "Encrypted password for accessing the registration,\n        if applicable."
        "has_all_credentials":
          type: "boolean"
          title: "Has All Credentials"
          description: "Indicates if all required credentials are present."
          default: false
        "registration_type": {"$ref": "#/components/schemas/RegistrationTypeEnum", "readOnly": true}
      type: "object"
      required:
        - "status"
        - "country_code"
        - "state_code"
        - "state_name"
        - "filing_frequency"
        - "filing_days"
        - "id"
        - "registration_type"
      title: "RegistrationReadWithPassword"
    "RegistrationStatusEnum":
      type: "string"
      enum:
        - "REGISTERED"
        - "PROCESSING"
        - "UNREGISTERED"
        - "DEREGISTERING"
        - "DEREGISTERED"
        - "VALIDATING"
        - "AWAITING_CLARIFICATION"
      title: "RegistrationStatusEnum"
    "RegistrationTypeEnum":
      type: "string"
      enum:
        - "EU_OSS"
        - "OTHER"
      title: "RegistrationTypeEnum"
    "RegistrationUpdate":
      properties:
        "registration_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Registration Date"
          description: "The date when the registration was created. Format: YYYY-MM-DD."
        "registration_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Email"
          description: "Email address associated with the registration."
        "registration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Key"
          description: "A unique key assigned to the registration."
        "deregistration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deregistration Key"
          description: "A unique key assigned for deregistration."
        "registration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Requested"
          description: "Timestamp when the registration was requested."
        "registration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Completed"
          description: "Timestamp when the registration was completed."
        "deregistration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Requested"
          description: "Timestamp when deregistration was requested."
        "deregistration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Completed"
          description: "Timestamp when the deregistration was completed."
        "auto_registered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Registered"
          description: "Indicates whether the registration was completed automatically."
          default: false
        "registrations_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
          description: "The tax registration regime (e.g., STANDARD, SIMPLIFIED)."
        "change_regime_status":
          anyOf:
            - {"$ref": "#/components/schemas/ChangeRegimeStatusEnum"}
            - type: "null"
        "third_party_enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Third Party Enabled"
          description: "Indicates whether third-party access is enabled for this registration."
          default: false
        "marked_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marked Collecting"
          description: "Indicates whether the  registration is marked as collecting in shopify"
        "status": {"$ref": "#/components/schemas/RegistrationStatusEnum", "description": "The current status of the registration. Possible values: REGISTERED, PROCESSING, UNREGISTERED, DEREGISTERING, DEREGISTERED, VALIDATING, AWAITING_CLARIFICATION."}
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
        "filing_frequency":
          anyOf:
            - {"$ref": "#/components/schemas/FilingFrequencyEnum"}
            - type: "null"
          description: "The updated filing frequency (MONTHLY, QUARTERLY, etc.)."
        "create_filings_from":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Create Filings From"
          description: "The updated date from which filings should start (YYYY-MM-DD)."
        "is_approaching":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Approaching"
          description: "Indicates whether the registration is approaching an action (e.g., renewal)."
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
          description: "Additional notes or comments related to the registration."
        "vda":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda"
          description: "Indicates if the Voluntary Disclosure Agreement (VDA) applies."
        "password_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Plain Text"
        "password_metadata_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Metadata Plain Text"
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
        "auto_register":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Register"
        "registration_type":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationTypeEnum"}
            - type: "null"
      type: "object"
      required:
        - "status"
      title: "RegistrationUpdate"
    "RegistrationUpdateAPI":
      properties:
        "registration_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Registration Date"
          description: "The date when the registration was created. Format: YYYY-MM-DD."
        "registration_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Email"
          description: "Email address associated with the registration."
        "registration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Key"
          description: "A unique key assigned to the registration."
        "deregistration_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deregistration Key"
          description: "A unique key assigned for deregistration."
        "registration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Requested"
          description: "Timestamp when the registration was requested."
        "registration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Registration Completed"
          description: "Timestamp when the registration was completed."
        "deregistration_requested":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Requested"
          description: "Timestamp when deregistration was requested."
        "deregistration_completed":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deregistration Completed"
          description: "Timestamp when the deregistration was completed."
        "auto_registered":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Registered"
          description: "Indicates whether the registration was completed automatically."
          default: false
        "registrations_regime":
          anyOf:
            - {"$ref": "#/components/schemas/RegistrationsRegimeEnum"}
            - type: "null"
          description: "The tax registration regime (e.g., STANDARD, SIMPLIFIED)."
        "change_regime_status":
          anyOf:
            - {"$ref": "#/components/schemas/ChangeRegimeStatusEnum"}
            - type: "null"
        "third_party_enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Third Party Enabled"
          description: "Indicates whether third-party access is enabled for this registration."
          default: false
        "marked_collecting":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marked Collecting"
          description: "Indicates whether the  registration is marked as collecting in shopify"
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
          description: "The username associated with the registration."
        "filing_frequency":
          anyOf:
            - {"$ref": "#/components/schemas/FilingFrequencyEnum"}
            - type: "null"
          description: "The updated filing frequency (MONTHLY, QUARTERLY, etc.)."
        "create_filings_from":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Create Filings From"
          description: "The updated date from which filings should start (YYYY-MM-DD)."
        "is_approaching":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Approaching"
          description: "Indicates whether the registration is approaching an action (e.g., renewal)."
        "comment":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comment"
          description: "Additional notes or comments related to the registration."
        "vda":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Vda"
          description: "Indicates if the Voluntary Disclosure Agreement (VDA) applies."
      type: "object"
      title: "RegistrationUpdateAPI"
    "RegistrationsRegimeEnum":
      type: "string"
      enum:
        - "STANDARD"
        - "SIMPLIFIED"
      title: "RegistrationsRegimeEnum"
    "RelatedEntityType":
      type: "string"
      enum:
        - "EXEMPTION"
        - "REGISTRATION"
        - "FILING"
        - "FILING_PAYMENT"
      title: "RelatedEntityType"
    "Rule":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum", "default": "US"}
        "state":
          type: "string"
          title: "State"
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "postal_code":
          type: "string"
          title: "Postal Code"
        "city":
          type: "string"
          title: "City"
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          default: ""
        "combined_rate":
          type: "string"
          title: "Combined Rate"
        "state_rate":
          type: "string"
          title: "State Rate"
        "county_rate":
          type: "string"
          title: "County Rate"
        "city_rate":
          type: "string"
          title: "City Rate"
        "special_rate":
          type: "string"
          title: "Special Rate"
        "threshold":
          type: "string"
          title: "Threshold"
          default: "0.0"
        "treatment": {"$ref": "#/components/schemas/TaxTreatment", "default": "FULL_AMOUNT"}
        "taxable_rate":
          type: "string"
          title: "Taxable Rate"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
        - "state"
        - "postal_code"
        - "city"
        - "combined_rate"
        - "state_rate"
        - "county_rate"
        - "city_rate"
        - "special_rate"
        - "taxable_rate"
      title: "Rule"
    "RuleRead":
      properties:
        "id":
          type: "string"
          title: "Id"
        "product_code":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCodeEnum"}
            - {"$ref": "#/components/schemas/ProductCodeByCategoryEnum"}
            - type: "string"
          title: "Product Code"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "country": {"$ref": "#/components/schemas/CountryCodeEnum", "default": "US"}
        "state":
          type: "string"
          title: "State"
        "derived_rule_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Derived Rule Id"
        "postal_code":
          type: "string"
          title: "Postal Code"
        "city":
          type: "string"
          title: "City"
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          default: ""
        "combined_rate":
          type: "string"
          title: "Combined Rate"
        "state_rate":
          type: "string"
          title: "State Rate"
        "county_rate":
          type: "string"
          title: "County Rate"
        "city_rate":
          type: "string"
          title: "City Rate"
        "special_rate":
          type: "string"
          title: "Special Rate"
        "threshold":
          type: "string"
          title: "Threshold"
          default: "0.0"
        "treatment": {"$ref": "#/components/schemas/TaxTreatment", "default": "FULL_AMOUNT"}
        "taxable_rate":
          type: "string"
          title: "Taxable Rate"
      type: "object"
      required:
        - "id"
        - "product_code"
        - "start_date"
        - "end_date"
        - "state"
        - "postal_code"
        - "city"
        - "combined_rate"
        - "state_rate"
        - "county_rate"
        - "city_rate"
        - "special_rate"
        - "taxable_rate"
      title: "RuleRead"
    "SSTRegistrationCreatePayload":
      properties:
        "registration_import_type":
          type: "string"
          const: "SST"
          title: "Registration Import Type"
          description: "Specifies this is an SST registration import."
          default: "SST"
        "password_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Plain Text"
          description: "The plaintext password for accessing the tax registration account."
        "password_metadata_plain_text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Password Metadata Plain Text"
          description: "Metadata related to the password."
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
          description: "Username for accessing the tax registration account."
      type: "object"
      title: "SSTRegistrationCreatePayload"
    "SalesOrTransactionsEnum":
      type: "string"
      enum:
        - "EITHER"
        - "SALES"
        - "BOTH"
        - "TRANSACTIONS"
      title: "SalesOrTransactionsEnum"
    "SalesTaxSummary":
      properties:
        "name":
          type: "string"
          title: "Name"
        "rate":
          type: "string"
          title: "Rate"
        "amount":
          type: "string"
          title: "Amount"
        "id":
          type: "string"
          title: "Id"
      type: "object"
      required:
        - "name"
        - "rate"
        - "amount"
        - "id"
      title: "SalesTaxSummary"
    "Seller":
      properties:
        "address": {"$ref": "#/components/schemas/ChargebeeAddress", "description": "Represents the address used for validation."}
        "taxRegistrationNumber":
          anyOf:
            - type: "string"
              maxLength: 30
            - type: "null"
          title: "Taxregistrationnumber"
          description: "The tax registration number of a business in a country. For example, this is the GSTIN for India or the VAT number for EU or Australia."
        "hasNexus":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Hasnexus"
          description: "Determines whether a tax nexus exists between the Seller and the tax authority at the address provided."
      type: "object"
      required:
        - "address"
      title: "Seller"
      description: "The details of the seller involved in the transaction\nincluding company code and address"
    "ShopifyCreateUpdate":
      properties:
        "url":
          type: "string"
          title: "Url"
        "secret":
          type: "string"
          title: "Secret"
      type: "object"
      required:
        - "url"
        - "secret"
      title: "ShopifyCreateUpdate"
    "ShopwareTaxEstimateRequest":
      properties:
        "source": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestSource"}
        "cart": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestCart"}
        "context": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestContext"}
      type: "object"
      required:
        - "source"
        - "cart"
        - "context"
      title: "ShopwareTaxEstimateRequest"
    "ShopwareTaxEstimateRequestCart":
      properties:
        "price":
          additionalProperties: true
          type: "object"
          title: "Price"
        "lineItems":
          items: {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestLineItem"}
          type: "array"
          title: "Lineitems"
        "deliveries":
          anyOf:
            - items: {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestDeliveries"}
              type: "array"
            - type: "null"
          title: "Deliveries"
        "token":
          type: "string"
          title: "Token"
      type: "object"
      required:
        - "price"
        - "lineItems"
        - "token"
      title: "ShopwareTaxEstimateRequestCart"
    "ShopwareTaxEstimateRequestContext":
      properties:
        "currentCustomerGroup":
          anyOf:
            - {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestCustomerGroup"}
            - type: "null"
        "currency": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestCurrency"}
        "customer": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestCustomer"}
        "shippingLocation": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestShippingLocation"}
      type: "object"
      required:
        - "currency"
        - "customer"
        - "shippingLocation"
      title: "ShopwareTaxEstimateRequestContext"
    "ShopwareTaxEstimateRequestCurrency":
      properties:
        "isoCode":
          type: "string"
          title: "Isocode"
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
      type: "object"
      required:
        - "isoCode"
      title: "ShopwareTaxEstimateRequestCurrency"
    "ShopwareTaxEstimateRequestCustomer":
      properties:
        "id":
          type: "string"
          title: "Id"
        "firstName":
          type: "string"
          title: "Firstname"
        "lastName":
          type: "string"
          title: "Lastname"
        "email":
          type: "string"
          title: "Email"
        "customerNumber":
          type: "string"
          title: "Customernumber"
      type: "object"
      required:
        - "id"
        - "firstName"
        - "lastName"
        - "email"
        - "customerNumber"
      title: "ShopwareTaxEstimateRequestCustomer"
    "ShopwareTaxEstimateRequestCustomerGroup":
      properties:
        "id":
          type: "string"
          title: "Id"
        "displayGross":
          type: "boolean"
          title: "Displaygross"
          default: true
      type: "object"
      required:
        - "id"
      title: "ShopwareTaxEstimateRequestCustomerGroup"
    "ShopwareTaxEstimateRequestDeliveries":
      properties:
        "shippingCosts": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestLineItemPrice"}
        "positions":
          anyOf:
            - items: {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestDeliveryPosition"}
              type: "array"
            - type: "null"
          title: "Positions"
      type: "object"
      required:
        - "shippingCosts"
      title: "ShopwareTaxEstimateRequestDeliveries"
    "ShopwareTaxEstimateRequestDeliveryPosition":
      properties:
        "identifier":
          type: "string"
          title: "Identifier"
      type: "object"
      required:
        - "identifier"
      title: "ShopwareTaxEstimateRequestDeliveryPosition"
    "ShopwareTaxEstimateRequestLineItem":
      properties:
        "id":
          type: "string"
          title: "Id"
        "payload": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestLineItemPayload"}
        "label":
          type: "string"
          title: "Label"
        "quantity":
          type: "integer"
          title: "Quantity"
        "price": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestLineItemPrice"}
        "type":
          type: "string"
          title: "Type"
        "uniqueIdentifier":
          type: "string"
          title: "Uniqueidentifier"
      type: "object"
      required:
        - "id"
        - "payload"
        - "label"
        - "quantity"
        - "price"
        - "type"
        - "uniqueIdentifier"
      title: "ShopwareTaxEstimateRequestLineItem"
    "ShopwareTaxEstimateRequestLineItemCalculatedTaxes":
      properties:
        "tax":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax"
        "taxRate":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxrate"
        "price":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Price"
      type: "object"
      required:
        - "tax"
        - "taxRate"
        - "price"
      title: "ShopwareTaxEstimateRequestLineItemCalculatedTaxes"
    "ShopwareTaxEstimateRequestLineItemPayload":
      properties:
        "productNumber":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Productnumber"
        "composition":
          anyOf:
            - items: {"$ref": "#/components/schemas/DiscountComposition"}
              type: "array"
            - type: "null"
          title: "Composition"
        "parentId":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Parentid"
      type: "object"
      title: "ShopwareTaxEstimateRequestLineItemPayload"
    "ShopwareTaxEstimateRequestLineItemPrice":
      properties:
        "unitPrice":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Unitprice"
        "quantity":
          type: "integer"
          title: "Quantity"
        "totalPrice":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Totalprice"
        "calculatedTaxes":
          anyOf:
            - items: {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestLineItemCalculatedTaxes"}
              type: "array"
            - type: "null"
          title: "Calculatedtaxes"
      type: "object"
      required:
        - "unitPrice"
        - "quantity"
        - "totalPrice"
      title: "ShopwareTaxEstimateRequestLineItemPrice"
    "ShopwareTaxEstimateRequestShippingLocation":
      properties:
        "country": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestShippingLocationCountry"}
        "state": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestShippingLocationState"}
        "address": {"$ref": "#/components/schemas/ShopwareTaxEstimateRequestShippingLocationAddress"}
      type: "object"
      required:
        - "country"
        - "state"
        - "address"
      title: "ShopwareTaxEstimateRequestShippingLocation"
    "ShopwareTaxEstimateRequestShippingLocationAddress":
      properties:
        "zipcode":
          type: "string"
          title: "Zipcode"
        "city":
          type: "string"
          title: "City"
        "street":
          type: "string"
          title: "Street"
      type: "object"
      required:
        - "zipcode"
        - "city"
        - "street"
      title: "ShopwareTaxEstimateRequestShippingLocationAddress"
    "ShopwareTaxEstimateRequestShippingLocationCountry":
      properties:
        "iso":
          type: "string"
          title: "Iso"
        "name":
          type: "string"
          title: "Name"
      type: "object"
      required:
        - "iso"
        - "name"
      title: "ShopwareTaxEstimateRequestShippingLocationCountry"
    "ShopwareTaxEstimateRequestShippingLocationState":
      properties:
        "name":
          type: "string"
          title: "Name"
        "shortCode":
          type: "string"
          title: "Shortcode"
      type: "object"
      required:
        - "name"
        - "shortCode"
      title: "ShopwareTaxEstimateRequestShippingLocationState"
    "ShopwareTaxEstimateRequestSource":
      properties:
        "url":
          type: "string"
          title: "Url"
        "shopId":
          type: "string"
          title: "Shopid"
      type: "object"
      required:
        - "url"
        - "shopId"
      title: "ShopwareTaxEstimateRequestSource"
    "ShopwareWebhookEvent":
      properties:
        "data": {"$ref": "#/components/schemas/ShopwareWebhookEventData"}
        "source": {"$ref": "#/components/schemas/ShopwareWebhookEventSource"}
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
      type: "object"
      required:
        - "data"
        - "source"
        - "timestamp"
      title: "ShopwareWebhookEvent"
    "ShopwareWebhookEventData":
      properties:
        "payload":
          items: {"$ref": "#/components/schemas/ShopwareWebhookEventDataPayload"}
          type: "array"
          title: "Payload"
        "event":
          type: "string"
          title: "Event"
      type: "object"
      required:
        - "payload"
        - "event"
      title: "ShopwareWebhookEventData"
    "ShopwareWebhookEventDataPayload":
      properties:
        "entity":
          type: "string"
          title: "Entity"
        "operation":
          type: "string"
          title: "Operation"
        "primaryKey":
          type: "string"
          title: "Primarykey"
        "updatedFields":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Updatedfields"
      type: "object"
      required:
        - "entity"
        - "operation"
        - "primaryKey"
      title: "ShopwareWebhookEventDataPayload"
    "ShopwareWebhookEventSource":
      properties:
        "url":
          type: "string"
          title: "Url"
        "appVersion":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Appversion"
        "shopId":
          type: "string"
          title: "Shopid"
        "eventId":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Eventid"
      type: "object"
      required:
        - "url"
        - "shopId"
      title: "ShopwareWebhookEventSource"
    "SourceEnum":
      type: "string"
      enum:
        - "BIGCOMMERCE"
        - "CHARGEBEE"
        - "SHOPIFY"
        - "STRIPE"
        - "AMAZON"
        - "TIKTOK"
        - "CUSTOM"
        - "UNKNOWN"
        - "IMPORT"
        - "ZUORA"
        - "APIDECK"
        - "QUICKBOOKS"
        - "API"
        - "APPLE_APP_STORE"
        - "GOOGLE_APP_STORE"
        - "WALMART"
        - "PAYPAL"
        - "NETSUITE"
        - "XERO"
        - "MAXIO"
        - "RECURLY"
        - "SALESFORCE"
        - "ETSY"
        - "EBAY"
        - "WIX"
        - "SQUARESPACE"
        - "WOOCOMMERCE"
        - "MAGENTO"
        - "BILLING_PLATFORM"
        - "DEEL"
        - "RIPPLING"
        - "GUSTO"
        - "FACEBOOK"
        - "OTHER"
        - "INSTAGRAM"
        - "PINTEREST"
        - "WAYFAIR"
        - "WISH"
        - "POS"
        - "TARGET"
        - "NEWEGG"
        - "GROUPON"
        - "GOOGLE_EXPRESS"
        - "NOCNOC"
        - "MERCADO_LIBRE"
        - "MODALYST"
        - "NORDSTROM"
        - "FAIRE"
        - "SHOPWARE"
        - "ZOHO"
      title: "SourceEnum"
    "StatusEnum":
      type: "string"
      enum:
        - "ACTIVE"
        - "ARCHIVED"
      title: "StatusEnum"
    "StripeAppConnectionCreateRequest":
      properties:
        "account_id":
          type: "string"
          title: "Account Id"
        "mode": {"$ref": "#/components/schemas/StripeMode"}
        "reuse_existing_connection":
          type: "boolean"
          title: "Reuse Existing Connection"
          default: false
      type: "object"
      required:
        - "account_id"
        - "mode"
      title: "StripeAppConnectionCreateRequest"
    "StripeMode":
      type: "string"
      enum:
        - "test"
        - "live"
      title: "StripeMode"
    "StripeReadUpdate":
      properties:
        "api_key":
          type: "string"
          title: "Api Key"
      type: "object"
      required:
        - "api_key"
      title: "StripeReadUpdate"
    "StripeRefreshTokenRequest":
      properties:
        "refresh_token":
          type: "string"
          title: "Refresh Token"
      type: "object"
      required:
        - "refresh_token"
      title: "StripeRefreshTokenRequest"
    "StripeTokenExchangeRequest":
      properties:
        "code":
          type: "string"
          title: "Code"
        "redirect_uri":
          type: "string"
          title: "Redirect Uri"
      type: "object"
      required:
        - "code"
        - "redirect_uri"
      title: "StripeTokenExchangeRequest"
    "Subscription":
      properties:
        "id":
          type: "string"
          title: "Id"
        "billing_period":
          type: "integer"
          title: "Billing Period"
        "billing_period_unit":
          type: "string"
          title: "Billing Period Unit"
        "customer_id":
          type: "string"
          title: "Customer Id"
        "status":
          type: "string"
          title: "Status"
        "current_term_start":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Current Term Start"
        "current_term_end":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Current Term End"
        "next_billing_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Next Billing At"
        "created_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Created At"
        "started_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Started At"
        "activated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Activated At"
        "created_from_ip":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Created From Ip"
        "updated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Updated At"
        "has_scheduled_changes":
          type: "boolean"
          title: "Has Scheduled Changes"
        "channel":
          type: "string"
          title: "Channel"
        "resource_version":
          type: "integer"
          title: "Resource Version"
        "deleted":
          type: "boolean"
          title: "Deleted"
        "object":
          type: "string"
          title: "Object"
        "coupon":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Coupon"
        "currency_code":
          type: "string"
          title: "Currency Code"
        "subscription_items":
          items: {"$ref": "#/components/schemas/SubscriptionItem"}
          type: "array"
          title: "Subscription Items"
        "shipping_address":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__billing__models__Address"}
            - type: "null"
        "due_invoices_count":
          type: "integer"
          title: "Due Invoices Count"
        "mrr":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Mrr"
        "cf_orgId":
          type: "string"
          title: "Cf Orgid"
        "has_scheduled_advance_invoices":
          type: "boolean"
          title: "Has Scheduled Advance Invoices"
        "create_pending_invoices":
          type: "boolean"
          title: "Create Pending Invoices"
        "auto_close_invoices":
          type: "boolean"
          title: "Auto Close Invoices"
        "discount_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Discount Type"
        "discount_percentage":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Discount Percentage"
        "discount_amount":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Discount Amount"
      type: "object"
      required:
        - "id"
        - "billing_period"
        - "billing_period_unit"
        - "customer_id"
        - "status"
        - "has_scheduled_changes"
        - "channel"
        - "resource_version"
        - "deleted"
        - "object"
        - "currency_code"
        - "subscription_items"
        - "due_invoices_count"
        - "cf_orgId"
        - "has_scheduled_advance_invoices"
        - "create_pending_invoices"
        - "auto_close_invoices"
      title: "Subscription"
    "SubscriptionItem":
      properties:
        "item_price_id":
          type: "string"
          title: "Item Price Id"
        "item_type":
          type: "string"
          title: "Item Type"
        "quantity":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Quantity"
        "unit_price":
          type: "integer"
          title: "Unit Price"
        "amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount"
        "free_quantity":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Free Quantity"
        "object":
          type: "string"
          title: "Object"
        "metered_quantity":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Metered Quantity"
      type: "object"
      required:
        - "item_price_id"
        - "item_type"
        - "unit_price"
        - "object"
      title: "SubscriptionItem"
    "TaxClass":
      properties:
        "class_id":
          type: "string"
          title: "Class Id"
        "code":
          type: "string"
          title: "Code"
        "name":
          type: "string"
          title: "Name"
      type: "object"
      required:
        - "class_id"
        - "code"
        - "name"
      title: "TaxClass"
    "TaxEstimateLineItem":
      properties:
        "number":
          type: "integer"
          minimum: 1
          title: "Number"
          description: "Index or serial number of the line item."
        "itemCode":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Itemcode"
          description: "The unique identifier (in Chargebee) of the product correspondingto the line item. If the line item corresponds to a one-off charge,then this identifier is not present."
        "description":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Description"
          description: "The description of the line item."
        "quantity":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Quantity"
          description: "The quantity associated with this line item."
          default: 1
        "unitPrice":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Unitprice"
          description: "The unit price for this line item. In case of tiered pricingwhere the unit price varies for each quantity tier, this is the average unit price."
        "amount":
          type: "number"
          title: "Amount"
          description: "The amount for this line item. This is unitPrice*quantity."
        "discountAmount":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Discountamount"
          description: "The discount applied to this line item."
        "isTaxInclusive":
          type: "boolean"
          title: "Istaxinclusive"
          description: "Indicates whether (amount - discountAmount) is inclusive of taxes."
        "taxIdentifiers":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaxIdentifier"}
              type: "array"
            - type: "null"
          title: "Taxidentifiers"
          description: "The tax code fields of the product used for tax calculation."
        "subtotal":
          type: "number"
          title: "Subtotal"
          description: "The amount after discounts for this line item. This is amount - discountAmount."
        "isTaxable":
          type: "boolean"
          title: "Istaxable"
          description: "Indicates whether this line item is taxable."
        "taxExemptType":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptType"}
            - type: "null"
          description: "The tax exemption type for a line item. This is a mandatory parameter while applying tax exemption on any line-item."
        "taxExemptReason":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Taxexemptreason"
          description: "The reason due to which a line item is exempted from tax. This is a mandatory parameter while applying tax exemption on any line-item."
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The part of this line item's subtotal that is exempted from tax."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of this line item's subtotal that is taxable."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The tax payable for this line item. This is the sum of all taxes.taxAmount for this line item."
        "total":
          type: "number"
          title: "Total"
          description: "The total for this line item after discounts and taxes. This is the same as subtotal if it is tax inclusive; otherwise it is subtotal + taxAmount. total can also be expressed as exemptAmount + taxableAmount + taxAmount."
        "isPartialTax":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Ispartialtax"
          description: "Indicates if taxes were applied only partially for this line item."
        "taxes":
          items: {"$ref": "#/components/schemas/TaxLineItem-Output"}
          type: "array"
          title: "Taxes"
          description: "List of taxes applied for this line item under each jurisdiction."
      type: "object"
      required:
        - "number"
        - "amount"
        - "isTaxInclusive"
        - "subtotal"
        - "isTaxable"
        - "exemptAmount"
        - "taxableAmount"
        - "taxAmount"
        - "total"
        - "taxes"
      title: "TaxEstimateLineItem"
      description: "Represents the details of a line item in a tax estimation request."
    "TaxEstimateLineItemBase":
      properties:
        "number":
          type: "integer"
          minimum: 1
          title: "Number"
          description: "Index or serial number of the line item."
        "itemCode":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Itemcode"
          description: "The unique identifier (in Chargebee) of the product correspondingto the line item. If the line item corresponds to a one-off charge,then this identifier is not present."
        "description":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Description"
          description: "The description of the line item."
        "quantity":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Quantity"
          description: "The quantity associated with this line item."
          default: 1
        "unitPrice":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Unitprice"
          description: "The unit price for this line item. In case of tiered pricingwhere the unit price varies for each quantity tier, this is the average unit price."
        "amount":
          type: "number"
          title: "Amount"
          description: "The amount for this line item. This is unitPrice*quantity."
        "discountAmount":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Discountamount"
          description: "The discount applied to this line item."
        "isTaxInclusive":
          type: "boolean"
          title: "Istaxinclusive"
          description: "Indicates whether (amount - discountAmount) is inclusive of taxes."
        "taxIdentifiers":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaxIdentifier"}
              type: "array"
            - type: "null"
          title: "Taxidentifiers"
          description: "The tax code fields of the product used for tax calculation."
      type: "object"
      required:
        - "number"
        - "amount"
        - "isTaxInclusive"
      title: "TaxEstimateLineItemBase"
    "TaxExemptType":
      type: "string"
      enum:
        - "PRODUCT_EXEMPT"
        - "CUSTOMER_EXEMPT"
        - "REGION_EXEMPT"
        - "REVERSE_CHARGE"
        - "ZERO_RATE_TAX"
        - "HIGH_VALUE_PHYSICAL_GOODS"
        - "EXPORT"
        - "ZERO_VALUE_ITEM"
        - "TAX_NOT_CONFIGURED"
      title: "TaxExemptType"
      description: "The tax exemption type for a line item.\nThis is a mandatory parameter while applying tax exemption on any line-item"
    "TaxExemptionEnum":
      type: "string"
      enum:
        - "PRODUCT"
        - "TRANSACTION"
        - "CUSTOMER"
        - "REGION"
        - "REVERSE_CHARGE"
        - "ZERO_RATE_TAX"
        - "HIGH_VALUE_PHYSICAL_GOODS"
        - "EXPORT"
        - "ZERO_VALUE_ITEM"
        - "NO_RULE_FOUND"
        - "IMPORTED"
      title: "TaxExemptionEnum"
      description: "This enum is used to determine if a transaction is exempt from tax."
    "TaxIdentifier":
      properties:
        "id":
          type: "string"
          maxLength: 50
          title: "Id"
          description: "The id of the field."
        "value":
          type: "string"
          maxLength: 50
          title: "Value"
          description: "The value of the field."
      type: "object"
      required:
        - "id"
        - "value"
      title: "TaxIdentifier"
      description: "It represents the information related to the customer's tax identifiers.\nThis includes details such as exemption status etc."
    "TaxItemBuilder":
      properties:
        "rule_id":
          type: "string"
          title: "Rule Id"
          description: "The rule ID of the tax item"
          default: "0000"
        "rate":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Rate"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
        "converted_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Amount"
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
        "name":
          type: "string"
          maxLength: 250
          title: "Name"
          description: "Deprecated: use `jurisdiction_type` instead"
        "type": {"$ref": "#/components/schemas/TaxItemTypeEnum", "maxLength": 50, "default": "IMPORTED"}
        "jurisdiction_type":
          anyOf:
            - {"$ref": "#/components/schemas/JurisdictionType"}
            - type: "null"
        "jurisdiction_name":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Jurisdiction Name"
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
      type: "object"
      required:
        - "rate"
        - "amount"
        - "name"
        - "organization_id"
      title: "TaxItemBuilder"
    "TaxItemEstimate":
      properties:
        "rate":
          type: "string"
          title: "The tax rate for this this jurisdiction and tax type."
          default: "0.0"
        "name":
          type: "string"
          title: "The name of the tax item for this jurisdiction and tax type. ie. 'State Tax'"
        "amount":
          type: "string"
          title: "The amount of tax determined for this jurisdiction and tax type."
          default: "0.0"
        "exempt":
          type: "boolean"
          title: "True if this item is tax exempt."
          default: false
        "exempt_reason":
          anyOf:
            - {"$ref": "#/components/schemas/TaxItemReturnReasonEnum"}
            - type: "null"
          title: "The reason why we determined the tax item is exempt."
        "rule":
          anyOf:
            - type: "string"
              maxLength: 50
            - type: "null"
          title: "The rule id that was used to determine the tax."
      type: "object"
      required:
        - "name"
      title: "TaxItemEstimate"
    "TaxItemRead":
      properties:
        "rule_id":
          type: "string"
          title: "Rule Id"
          description: "The rule ID of the tax item"
          default: "0000"
        "rate":
          type: "string"
          title: "Rate"
        "amount":
          type: "string"
          title: "Amount"
        "converted_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Amount"
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
        "name":
          type: "string"
          maxLength: 250
          title: "Name"
          description: "Deprecated: use `jurisdiction_type` instead"
        "type": {"$ref": "#/components/schemas/TaxItemTypeEnum", "maxLength": 50, "default": "IMPORTED"}
        "jurisdiction_type":
          anyOf:
            - {"$ref": "#/components/schemas/JurisdictionType"}
            - type: "null"
        "jurisdiction_name":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Jurisdiction Name"
      type: "object"
      required:
        - "rate"
        - "amount"
        - "name"
      title: "TaxItemRead"
    "TaxItemReturnReasonEnum":
      type: "string"
      enum:
        - "NO_RULE_FOUND"
        - "RULE_FOUND_TAXABLE"
        - "RULE_FOUND_NOT_TAXABLE"
        - "PRODUCT_EXEMPT"
        - "FROM_IMPORT"
      title: "TaxItemReturnReasonEnum"
      description: "We use this to understand the response from get_tax_items"
    "TaxItemTypeEnum":
      type: "string"
      enum:
        - "IMPORTED"
        - "CALCULATED"
      title: "TaxItemTypeEnum"
    "TaxJurisdictionType":
      type: "string"
      enum:
        - "COUNTRY"
        - "FEDERAL"
        - "STATE"
        - "COUNTY"
        - "CITY"
        - "SPECIAL"
        - "OTHER"
      title: "TaxJurisdictionType"
      description: "The type of tax jurisdiction"
    "TaxLiabilitySourceEnum":
      type: "string"
      enum:
        - "CALCULATED"
        - "COLLECTED"
      title: "TaxLiabilitySourceEnum"
    "TaxLineItem-Input":
      properties:
        "number":
          type: "integer"
          title: "Number"
          description: "Index or serial number of this tax line item."
        "jurisdiction": {"$ref": "#/components/schemas/Jurisdiction", "description": "The tax jurisdiction details."}
        "name":
          type: "string"
          title: "Name"
          description: "The name of the tax applied."
        "rate":
          type: "number"
          maximum: 100
          title: "Rate"
          description: "The tax rate expressed in percentage."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of the line item's subtotal that is taxableunder this jurisdiction."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The tax payable for the line item under this jurisdiction."
      type: "object"
      required:
        - "number"
        - "jurisdiction"
        - "name"
        - "rate"
        - "taxableAmount"
        - "taxAmount"
      title: "TaxLineItem"
      description: "List of taxes applied for this line item under each jurisdiction"
    "TaxLineItem-Output":
      properties:
        "number":
          type: "integer"
          title: "Number"
          description: "Index or serial number of this tax line item."
        "jurisdiction": {"$ref": "#/components/schemas/Jurisdiction", "description": "The tax jurisdiction details."}
        "name":
          type: "string"
          title: "Name"
          description: "The name of the tax applied."
        "rate":
          type: "number"
          maximum: 100
          title: "Rate"
          description: "The tax rate expressed in percentage."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of the line item's subtotal that is taxableunder this jurisdiction."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The tax payable for the line item under this jurisdiction."
      type: "object"
      required:
        - "number"
        - "jurisdiction"
        - "name"
        - "rate"
        - "taxableAmount"
        - "taxAmount"
      title: "TaxLineItem"
      description: "List of taxes applied for this line item under each jurisdiction"
    "TaxRate":
      properties:
        "name":
          type: "string"
          title: "Name"
        "rate":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Rate"
      type: "object"
      required:
        - "name"
      title: "TaxRate"
    "TaxTreatment":
      type: "string"
      enum:
        - "FULL_AMOUNT"
        - "AMOUNT_OVER_THRESHOLD"
      title: "TaxTreatment"
    "Taxability":
      type: "string"
      enum:
        - "taxable"
        - "exempt"
      title: "Taxability"
    "TokenData":
      properties:
        "token_type":
          type: "string"
          title: "Token Type"
        "access_token":
          type: "string"
          title: "Access Token"
        "refresh_token":
          type: "string"
          title: "Refresh Token"
        "expires_in":
          type: "integer"
          title: "Expires In"
      type: "object"
      required:
        - "token_type"
        - "access_token"
        - "refresh_token"
        - "expires_in"
      title: "TokenData"
    "TokenExchangeRequest":
      properties:
        "code":
          type: "string"
          title: "Code"
        "verifier":
          type: "string"
          title: "Verifier"
        "redirect_uri":
          type: "string"
          title: "Redirect Uri"
      type: "object"
      required:
        - "code"
        - "verifier"
        - "redirect_uri"
      title: "TokenExchangeRequest"
    "TransactionAddress-Input":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Optional additional enriched data for the address."
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
      type: "object"
      required:
        - "type"
      title: "TransactionAddress"
    "TransactionAddress-Output":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
      type: "object"
      required:
        - "type"
      title: "TransactionAddress"
    "TransactionAddressBuilder":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Optional additional enriched data for the address."
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
      type: "object"
      required:
        - "type"
      title: "TransactionAddressBuilder"
    "TransactionAddressCreateUpdate":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
          description: "The ID of the address."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "The type of address."}
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization the address belongs to."
      type: "object"
      required:
        - "type"
      title: "TransactionAddressCreateUpdate"
    "TransactionAddressPublic":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
      type: "object"
      required:
        - "type"
      title: "TransactionAddressPublic"
      description: "Public address class for transaction addresses"
    "TransactionAddressRead-Input":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Optional additional enriched data for the address."
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
          description: "Unique identifier of the address being updated."
        "transaction_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Transaction Id"
          description: "ID of the transaction associated with the address."
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "ID of the connection associated with the address."
      type: "object"
      required:
        - "type"
      title: "TransactionAddressRead"
    "TransactionAddressRead-Output":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
          description: "Unique identifier of the address being updated."
        "transaction_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Transaction Id"
          description: "ID of the transaction associated with the address."
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "ID of the connection associated with the address."
      type: "object"
      required:
        - "type"
      title: "TransactionAddressRead"
    "TransactionAddressUpdate":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "enriched_fields":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Enriched Fields"
          description: "Optional additional enriched data for the address."
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
          description: "Unique identifier of the address being updated."
        "transaction_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Transaction Id"
          description: "ID of the transaction associated with the address."
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "ID of the connection associated with the address."
      type: "object"
      required:
        - "type"
      title: "TransactionAddressUpdate"
    "TransactionBuilder":
      properties:
        "requires_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionRequired"}
            - type: "null"
          description: "Indicates if transaction requires tax exemption."
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Unique identifier of the organization."
        "external_id":
          type: "string"
          title: "External Id"
          description: "External identifier of the transaction."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Transaction date and time"
        "shop_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Shop Date"
          description: "Transaction date in the shop's local timezone"
        "shop_date_tz":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Shop Date Tz"
          description: "Timezone of the shop"
        "status": {"$ref": "#/components/schemas/TransactionStatusEnum", "description": "Transaction status (e.g., COMMITTED)", "default": "COMMITTED"}
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the transaction."
        "refund_status":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionRefundStatus"}
            - type: "null"
          description: "Status of refund, if applicable"
        "total_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Amount"
          description: "Total amount of the transaction."
          default: "0.00"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier of the customer."
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates if transaction is marketplace-based."
          default: false
        "exempt":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionExemptStatusEnum"}
            - type: "null"
          description: "Exemption status (e.g., NOT_EXEMPT)"
          default: "NOT_EXEMPT"
        "exemptions":
          anyOf:
            - items: {"$ref": "#/components/schemas/Exemption"}
              type: "array"
            - type: "null"
          title: "Exemptions"
          description: "List of exemptions applied (if any)."
        "related_to":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Related To"
          description: "Related transaction identifier."
        "secondary_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary External Id"
          description: "Secondary External Identifier."
        "secondary_source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary Source"
          description: "Secondary source information"
        "external_friendly_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Friendly Id"
          description: "Friendly identifier of the original item."
        "total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Imported"
          description: "Imported tax amount."
          default: "0.00"
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Calculated"
          description: "Calculated tax amount."
          default: "0.00"
        "tax_rate_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Liability Amount"
          description: "Total tax liability amount."
          default: "0.00"
        "tax_liability_source":
          anyOf:
            - {"$ref": "#/components/schemas/TaxLiabilitySourceEnum"}
            - type: "null"
          description: "Source of tax liability."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxable Amount"
          description: "Taxable amount."
          default: "0.00"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "description": "Currency code (ISO 4217, e.g., USD)", "default": "USD"}
        "locked":
          type: "boolean"
          title: "Locked"
          description: "Transaction lock status."
          default: false
        "source": {"$ref": "#/components/schemas/SourceEnum", "description": "Source platform (e.g., STRIPE)", "default": "OTHER"}
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Connection Identifier"
        "filing_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Id"
          description: "Filing identifier."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City of the transaction address."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County of the transaction address."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State of the transaction address."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code (ISO Alpha-2)."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "Postal code of the transaction."
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
          description: "Tax ID associated with the transaction"
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status (e.g., VERIFIED).", "default": "UNVERIFIED"}
        "processing_status": {"$ref": "#/components/schemas/ProcessingStatusEnum", "description": "Status of processing (e.g., ADDRESS_DONE)", "default": "QUEUED"}
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code (ISO 4217, e.g., USD)"
        "converted_total_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Amount"
          description: "Converted total amount."
        "converted_total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Calculated"
          description: "Converted calculated tax amount."
        "conversion_rate":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Conversion Rate"
          description: "Currency conversion rate."
        "converted_taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_total_discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "converted_total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Liability Amount"
          description: "Converted total tax liability amount."
        "addresses":
          anyOf:
            - items: {"$ref": "#/components/schemas/TransactionAddressBuilder"}
              type: "array"
            - items: {"$ref": "#/components/schemas/Address-Input"}
              type: "array"
            - items: {"$ref": "#/components/schemas/TransactionAddress-Input"}
              type: "array"
            - type: "null"
          title: "Addresses"
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemBuilder"}
          type: "array"
          title: "Transaction Items"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/Customer-Input"}
            - {"$ref": "#/components/schemas/TransactionImportCustomer"}
          title: "Customer"
        "operation":
          anyOf:
            - {"$ref": "#/components/schemas/ImportOperationEnum"}
            - type: "null"
          default: "IMPORT"
        "type": {"$ref": "#/components/schemas/TransactionTypeEnum"}
      type: "object"
      required:
        - "organization_id"
        - "external_id"
        - "date"
        - "addresses"
        - "transaction_items"
        - "customer"
        - "type"
      title: "TransactionBuilder"
    "TransactionCreate":
      properties:
        "requires_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionRequired"}
            - type: "null"
          description: "Indicates if transaction requires tax exemption."
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Unique identifier of the organization."
        "external_id":
          type: "string"
          title: "External Id"
          description: "External identifier of the transaction."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Transaction date and time"
        "shop_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Shop Date"
          description: "Transaction date in the shop's local timezone"
        "shop_date_tz":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Shop Date Tz"
          description: "Timezone of the shop"
        "status": {"$ref": "#/components/schemas/TransactionStatusEnum", "description": "Transaction status (e.g., COMMITTED)", "default": "COMMITTED"}
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the transaction."
        "refund_status":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionRefundStatus"}
            - type: "null"
          description: "Status of refund, if applicable"
        "total_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Amount"
          description: "Total amount of the transaction."
          default: "0.00"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier of the customer."
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates if transaction is marketplace-based."
          default: false
        "exempt":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionExemptStatusEnum"}
            - type: "null"
          description: "Exemption status (e.g., NOT_EXEMPT)"
          default: "NOT_EXEMPT"
        "exemptions":
          anyOf:
            - items: {"$ref": "#/components/schemas/Exemption"}
              type: "array"
            - type: "null"
          title: "Exemptions"
          description: "List of exemptions applied (if any)."
        "related_to":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Related To"
          description: "Related transaction identifier."
        "secondary_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary External Id"
          description: "Secondary External Identifier."
        "secondary_source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary Source"
          description: "Secondary source information"
        "external_friendly_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Friendly Id"
          description: "Friendly identifier of the original item."
        "total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Imported"
          description: "Imported tax amount."
          default: "0.00"
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Calculated"
          description: "Calculated tax amount."
          default: "0.00"
        "tax_rate_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Liability Amount"
          description: "Total tax liability amount."
          default: "0.00"
        "tax_liability_source":
          anyOf:
            - {"$ref": "#/components/schemas/TaxLiabilitySourceEnum"}
            - type: "null"
          description: "Source of tax liability."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxable Amount"
          description: "Taxable amount."
          default: "0.00"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "description": "Currency code (ISO 4217, e.g., USD)", "default": "USD"}
        "locked":
          type: "boolean"
          title: "Locked"
          description: "Transaction lock status."
          default: false
        "source": {"$ref": "#/components/schemas/SourceEnum", "description": "Source platform (e.g., STRIPE)", "default": "OTHER"}
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Connection Identifier"
        "filing_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Id"
          description: "Filing identifier."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City of the transaction address."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County of the transaction address."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State of the transaction address."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code (ISO Alpha-2)."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "Postal code of the transaction."
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
          description: "Tax ID associated with the transaction"
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status (e.g., VERIFIED).", "default": "UNVERIFIED"}
        "processing_status": {"$ref": "#/components/schemas/ProcessingStatusEnum", "description": "Status of processing (e.g., ADDRESS_DONE)", "default": "QUEUED"}
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code (ISO 4217, e.g., USD)"
        "converted_total_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Amount"
          description: "Converted total amount."
        "converted_total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Calculated"
          description: "Converted calculated tax amount."
        "conversion_rate":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Conversion Rate"
          description: "Currency conversion rate."
        "converted_taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_total_discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "converted_total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Liability Amount"
          description: "Converted total tax liability amount."
        "addresses":
          anyOf:
            - items: {"$ref": "#/components/schemas/TransactionAddressBuilder"}
              type: "array"
            - items: {"$ref": "#/components/schemas/Address-Input"}
              type: "array"
          title: "Addresses"
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemCreateUpdate"}
          type: "array"
          title: "Transaction Items"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerCreate"}
            - type: "null"
      type: "object"
      required:
        - "organization_id"
        - "external_id"
        - "date"
        - "addresses"
        - "transaction_items"
      title: "TransactionCreate"
    "TransactionEstimatePublicRequest":
      properties:
        "date":
          type: "string"
          format: "date-time"
          title: "Date of this transaction in ISO 8601 format."
          description: "The date of the transaction in ISO 8601 format (e.g., 2025-01-25T12:00:00Z)."
        "external_id":
          type: "string"
          title: "Unique identifier of this transaction in the source system."
          description: "Unique identifier of this transaction in the source system."
        "total_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total amount of the transaction, after discounts."
          description: "Total amount of the transaction."
          default: "0.0"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "title": "Currency of the transaction in ISO 4217 format.", "description": "The currency in which the transaction is conducted (e.g., USD, EUR)."}
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "A description for this transaction."
          description: "An optional description of the transaction."
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          title: "The system from which the transaction originated."
          description: "While currently not used, it may be used in the future to determine taxability. The source of the transaction (e.g., OTHER)."
          deprecated: true
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Use to indicate if this transaction was placed through a Marketplace, which will mean that the item is not taxable."
          description: "Indicates if the transaction involves a marketplace."
          default: false
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemEstimateBase"}
          type: "array"
          title: "The items that make up the transaction."
          description: "List of items involved in the transaction."
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerBasePublic"}
            - type: "null"
          title: "The customer who placed the transaction."
          description: "Details about the customer. If the customer is not found, it will be ignored."
        "addresses":
          items:
            properties:
              "type":
                type: "string"
                enum:
                  - "SHIP_TO"
                  - "BILL_TO"
                description: "Type of the address. Must be either\n                        SHIP_TO or BILL_TO."
              "phone":
                type: "string"
                description: "Phone number associated with the customer."
              "street_1":
                type: "string"
                description: "Primary street address of the customer."
              "street_2":
                type: "string"
                description: "Additional street address details, such as an apartment or suite number."
              "city":
                type: "string"
                description: "City where the customer resides."
              "county":
                type: "string"
                description: "County or district of the customer."
              "state":
                type: "string"
                description: "State or province of the address."
              "postal_code":
                type: "string"
                description: "Postal code of the address."
              "country":
                type: "string"
                description: "Country of the address."
              "full_address":
                type: "string"
                description: "Complete address string of the customer, which can be used as an alternative to individual fields."
              "status":
                type: "string"
                description: "Status of the address. Deprecated and ignored."
                deprecated: true
            type: "object"
            required:
              - "type"
              - "state"
              - "postal_code"
              - "country"
          type: "array"
          title: "The address information for this transaction."
          description: "List of addresses related to the transaction. At least one BILL_TO or SHIP_TO address must be provided. The address will be validated during estimation, and the transaction may be rejected if the address does not pass validation. The SHIP_TO will be preferred to use for determining tax liability."
      type: "object"
      required:
        - "date"
        - "external_id"
        - "currency"
        - "transaction_items"
        - "addresses"
      title: "TransactionEstimatePublicRequest"
      description: "Public request model for tax estimation API documentation.\nThis model excludes internal fields like enriched_fields that should not be exposed in API docs."
    "TransactionEstimateResponse":
      properties:
        "date":
          type: "string"
          format: "date-time"
          title: "Date of this transaction in ISO 8601 format."
          description: "The date of the transaction in ISO 8601 format (e.g., 2025-01-25T12:00:00Z)."
        "external_id":
          type: "string"
          title: "Unique identifier of this transaction in the source system."
          description: "Unique identifier of this transaction in the source system."
        "total_amount":
          type: "string"
          title: "Total amount of the transaction, after discounts."
          description: "Total amount of the transaction."
          default: "0.0"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "title": "Currency of the transaction in ISO 4217 format.", "description": "The currency in which the transaction is conducted (e.g., USD, EUR)."}
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "A description for this transaction."
          description: "An optional description of the transaction."
        "source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          title: "The system from which the transaction originated."
          description: "While currently not used, it may be used in the future to determine taxability. The source of the transaction (e.g., OTHER)."
          deprecated: true
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Use to indicate if this transaction was placed through a Marketplace, which will mean that the item is not taxable."
          description: "Indicates if the transaction involves a marketplace."
          default: false
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemEstimateResponse"}
          type: "array"
          title: "Transaction Items"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerBase"}
            - type: "null"
          title: "The customer who placed the transaction."
          description: "Details about the customer. If the customer is not found, it will be ignored."
        "addresses":
          items:
            properties:
              "type":
                type: "string"
                enum:
                  - "SHIP_TO"
                  - "BILL_TO"
                description: "Type of the address. Must be either\n                        SHIP_TO or BILL_TO."
              "phone":
                type: "string"
                description: "Phone number associated with the customer."
              "street_1":
                type: "string"
                description: "Primary street address of the customer."
              "street_2":
                type: "string"
                description: "Additional street address details, such as an apartment or suite number."
              "city":
                type: "string"
                description: "City where the customer resides."
              "county":
                type: "string"
                description: "County or district of the customer."
              "state":
                type: "string"
                description: "State or province of the address."
              "postal_code":
                type: "string"
                description: "Postal code of the address."
              "country":
                type: "string"
                description: "Country of the address."
              "full_address":
                type: "string"
                description: "Complete address string of the customer, which can be used as an alternative to individual fields."
              "status":
                type: "string"
                description: "Status of the address. Deprecated and ignored."
                deprecated: true
              "enriched_fields":
                type: "string"
                description: "Additional enriched fields related to the address."
            type: "object"
            required:
              - "type"
              - "state"
              - "postal_code"
              - "country"
          type: "array"
          title: "The address information for this transaction."
          description: "List of addresses related to the transaction. At least one BILL_TO or SHIP_TO address must be provided. The address will be validated during estimation, and the transaction may be rejected if the address does not pass validation. The SHIP_TO will be preferred to use for determining tax liability. **Deprecated:** Use of `address.status` in estimate api is ignored and will be removed in the future status will be considered UNVERIFIED by default and always validated"
        "total_tax_amount_calculated":
          type: "string"
          title: "Total Tax Amount Calculated"
          description: "The total amount of tax determined for the transaction."
          default: "0.00"
        "taxable_amount":
          type: "string"
          title: "Taxable Amount"
          description: "The taxable amount for the transaction."
          default: "0.00"
        "tax_rate_calculated":
          type: "string"
          title: "Tax Rate Calculated"
          description: "The calculated tax rate for the transaction."
          default: "0.00"
        "nexus_met":
          type: "boolean"
          title: "Nexus Met"
          description: "Indicates if nexus was met for the transaction.**Deprecated:** Use `has_active_registration` instead."
          default: false
          deprecated: true
        "has_active_registration":
          type: "boolean"
          title: "Active Registration Met"
          description: "Indicates if there is an active registration for the transaction."
          default: false
      type: "object"
      required:
        - "date"
        - "external_id"
        - "currency"
        - "transaction_items"
        - "addresses"
      title: "TransactionEstimateResponse"
    "TransactionExemptStatusEnum":
      type: "string"
      enum:
        - "NOT_EXEMPT"
        - "PARTIALLY_EXEMPT"
        - "FULLY_EXEMPT"
      title: "TransactionExemptStatusEnum"
      description: "Based on transaction item exempt status.\nNOT EXEMPT: None of the items are NOT EXEMPT\nPARTIALLY EXEMPT: At least some of the items are NOT EXEMPT\nFULLY_EXEMPT: All items sold in the transaction are EXEMPT"
    "TransactionImportCustomer":
      properties:
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
        "source": {"$ref": "#/components/schemas/SourceEnum", "default": "OTHER"}
        "registration_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Registration Number"
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "default": "UNVERIFIED"}
      type: "object"
      title: "TransactionImportCustomer"
    "TransactionImportResponse":
      properties:
        "created_count":
          type: "integer"
          title: "Created Count"
        "created_items":
          items:
            type: "string"
          type: "array"
          title: "Created Items"
        "skipped_count":
          type: "integer"
          title: "Skipped Count"
        "skipped_items":
          items:
            type: "string"
          type: "array"
          title: "Skipped Items"
        "updated_count":
          type: "integer"
          title: "Updated Count"
        "updated_items":
          items:
            type: "string"
          type: "array"
          title: "Updated Items"
        "existing_count":
          type: "integer"
          title: "Existing Count"
        "existing_items":
          additionalProperties:
            type: "string"
          type: "object"
          title: "Existing Items"
        "triggered_by":
          type: "string"
          title: "Triggered By"
      type: "object"
      required:
        - "created_count"
        - "created_items"
        - "skipped_count"
        - "skipped_items"
        - "updated_count"
        - "updated_items"
        - "existing_count"
        - "existing_items"
        - "triggered_by"
      title: "TransactionImportResponse"
    "TransactionItemBuilder":
      properties:
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External item identifier."
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
          description: "Organization identifier."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Date/time of item."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Item description"
        "external_product_id":
          type: "string"
          title: "External Product Id"
          description: "External product identifier."
        "product":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product"
          description: "Product name"
        "product_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Id"
          description: "Product identifier."
        "product_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Name"
          description: "Product name (detailed)"
        "product_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Description"
          description: "Product description"
        "quantity":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Quantity"
          description: "Quantity of item."
          default: "1.0"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
          description: "Item amount."
          default: "0.00"
        "tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Amount Imported"
          description: "Imported tax amount for the item."
          default: "0.00"
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Amount Calculated"
          description: "Calculated tax amount for the item."
          default: "0.00"
        "tax_rate_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "original_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Original currency code."
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code."
        "converted_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Amount"
          description: "Converted item amount."
        "converted_taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Tax Amount Calculated"
          description: "Converted calculated tax amount"
        "converted_total_discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxable Amount"
          description: "Taxable amount for the item."
          default: "0.00"
        "tax_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptionEnum"}
            - type: "null"
          description: "Tax exemption status."
        "exempt":
          type: "boolean"
          title: "Exempt"
          description: "Indicates if the item is exempt."
          default: false
        "tax_items":
          items: {"$ref": "#/components/schemas/TaxItemBuilder"}
          type: "array"
          title: "Tax Items"
          default: []
        "discount_builder":
          anyOf:
            - {"$ref": "#/components/schemas/DiscountBuilder"}
            - type: "null"
      type: "object"
      required:
        - "organization_id"
        - "date"
        - "external_product_id"
      title: "TransactionItemBuilder"
    "TransactionItemCreateUpdate":
      properties:
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External item identifier."
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
          description: "Organization identifier."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Date/time of item."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Item description"
        "external_product_id":
          type: "string"
          title: "External Product Id"
          description: "External product identifier."
        "product":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product"
          description: "Product name"
        "product_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Id"
          description: "Product identifier."
        "product_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Name"
          description: "Product name (detailed)"
        "product_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Description"
          description: "Product description"
        "quantity":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Quantity"
          description: "Quantity of item."
          default: "1.0"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Amount"
          description: "Item amount."
          default: "0.00"
        "tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Amount Imported"
          description: "Imported tax amount for the item."
          default: "0.00"
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Amount Calculated"
          description: "Calculated tax amount for the item."
          default: "0.00"
        "tax_rate_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "original_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Original currency code."
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code."
        "converted_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Amount"
          description: "Converted item amount."
        "converted_taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Tax Amount Calculated"
          description: "Converted calculated tax amount"
        "converted_total_discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxable Amount"
          description: "Taxable amount for the item."
          default: "0.00"
        "tax_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptionEnum"}
            - type: "null"
          description: "Tax exemption status."
        "exempt":
          type: "boolean"
          title: "Exempt"
          description: "Indicates if the item is exempt."
          default: false
        "tax_items":
          items: {"$ref": "#/components/schemas/TaxItemBuilder"}
          type: "array"
          title: "Tax Items"
          default: []
        "discount_builder":
          anyOf:
            - {"$ref": "#/components/schemas/DiscountBuilder"}
            - type: "null"
      type: "object"
      required:
        - "organization_id"
        - "date"
        - "external_product_id"
      title: "TransactionItemCreateUpdate"
    "TransactionItemEstimateBase":
      properties:
        "external_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Unique identifier of this transaction item in the source system"
          description: "A unique identifier for the transaction item."
        "date":
          type: "string"
          format: "date-time"
          title: "Date of this transaction item in ISO 8601 format."
          description: "The date of the transaction item."
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description of this transaction item."
          description: "A description of the item."
        "external_product_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Unique identifier of the product in the source system"
          description: "External product identifier. If not found and product_subcategory\n        and product_category are not provided, an error occurs."
        "product_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Name of the product"
          description: "Name of the product. Used if creating a new product."
        "product_description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description of the product"
          description: "Description of the product. Used if creating a new product."
        "product_source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          title: "The source of the product."
        "product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "null"
          title: "Subcategory of the product."
          description: "Subcategory of the product. Required if product_category is used\n        in place of external_product_id."
        "product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "null"
          title: "Category of the product."
          description: "Category of the product. Required if product_subcategory is used\n        in place of external_product_id."
        "quantity":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Quantity of the product."
          description: "Defaults to 1.0. The quantity of the item."
          default: "1.0"
        "amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total amount of this transaction item, after discounts."
          description: "The total amount of the item."
        "exempt":
          type: "boolean"
          title: "Whether or not this transaction item is exempt from tax."
          description: "Defaults to false. Indicates whether the item is exempt from tax."
          default: false
      type: "object"
      required:
        - "date"
        - "amount"
      title: "TransactionItemEstimateBase"
    "TransactionItemEstimateResponse":
      properties:
        "external_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Unique identifier of this transaction item in the source system"
          description: "A unique identifier for the transaction item."
        "date":
          type: "string"
          format: "date-time"
          title: "Date of this transaction item in ISO 8601 format."
          description: "The date of the transaction item."
        "description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description of this transaction item."
          description: "A description of the item."
        "external_product_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Unique identifier of the product in the source system"
          description: "External product identifier. If not found and product_subcategory\n        and product_category are not provided, an error occurs."
        "product_name":
          anyOf:
            - type: "string"
              maxLength: 200
            - type: "null"
          title: "Name of the product"
          description: "Name of the product. Used if creating a new product."
        "product_description":
          anyOf:
            - type: "string"
              maxLength: 1000
            - type: "null"
          title: "Description of the product"
          description: "Description of the product. Used if creating a new product."
        "product_source":
          anyOf:
            - {"$ref": "#/components/schemas/SourceEnum"}
            - type: "null"
          title: "The source of the product."
        "product_subcategory":
          anyOf:
            - {"$ref": "#/components/schemas/ProductSubCategoryEnum"}
            - type: "null"
          title: "Subcategory of the product."
          description: "Subcategory of the product. Required if product_category is used\n        in place of external_product_id."
        "product_category":
          anyOf:
            - {"$ref": "#/components/schemas/ProductCategoryEnum"}
            - type: "null"
          title: "Category of the product."
          description: "Category of the product. Required if product_subcategory is used\n        in place of external_product_id."
        "quantity":
          type: "string"
          title: "Quantity of the product."
          description: "Defaults to 1.0. The quantity of the item."
          default: "1.0"
        "amount":
          type: "string"
          title: "Total amount of this transaction item, after discounts."
          description: "The total amount of the item."
        "exempt":
          type: "boolean"
          title: "True if this item is tax exempt."
          description: "Indicates whether the transaction item is exempt from tax."
          default: false
        "tax_amount":
          type: "string"
          title: "The amount of tax determined for this transaction item."
          description: "The total tax amount for the transaction item."
          default: "0.00"
        "taxable_amount":
          type: "string"
          title: "The amount of this item that was determined to be taxable."
          description: "The taxable amount for the transaction item."
          default: "0.00"
        "tax_rate":
          type: "string"
          title: "The calculated combined tax rate for this transaction item."
          description: "The tax rate applied to the transaction item."
          default: "0.00"
        "exempt_reason":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptionEnum"}
            - type: "null"
          title: "The reason why we determined the transaction item is exempt."
          description: "Reason for exemption, if applicable."
        "tax_items":
          items: {"$ref": "#/components/schemas/TaxItemEstimate"}
          type: "array"
          title: "The tax items that were determined for this transaction item."
          description: "List of tax items applied to the transaction item."
          default: []
      type: "object"
      required:
        - "date"
        - "amount"
      title: "TransactionItemEstimateResponse"
    "TransactionItemRead":
      properties:
        "external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Id"
          description: "External item identifier."
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
          description: "Organization identifier."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Date/time of item."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Item description"
        "external_product_id":
          type: "string"
          title: "External Product Id"
          description: "External product identifier."
        "product":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product"
          description: "Product name"
        "product_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Id"
          description: "Product identifier."
        "product_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Name"
          description: "Product name (detailed)"
        "product_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Product Description"
          description: "Product description"
        "quantity":
          type: "string"
          title: "Quantity"
          description: "Quantity of item."
          default: "1.0"
        "amount":
          type: "string"
          title: "Amount"
          description: "Item amount."
          default: "0.00"
        "tax_amount_imported":
          type: "string"
          title: "Tax Amount Imported"
          description: "Imported tax amount for the item."
          default: "0.00"
        "tax_rate_imported":
          type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "tax_amount_calculated":
          type: "string"
          title: "Tax Amount Calculated"
          description: "Calculated tax amount for the item."
          default: "0.00"
        "tax_rate_calculated":
          type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "original_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Original currency code."
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code."
        "converted_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Amount"
          description: "Converted item amount."
        "converted_taxable_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_tax_amount_imported":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_tax_amount_calculated":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Tax Amount Calculated"
          description: "Converted calculated tax amount"
        "converted_total_discount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "taxable_amount":
          type: "string"
          title: "Taxable Amount"
          description: "Taxable amount for the item."
          default: "0.00"
        "tax_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptionEnum"}
            - type: "null"
          description: "Tax exemption status."
        "exempt":
          type: "boolean"
          title: "Exempt"
          description: "Indicates if the item is exempt."
          default: false
        "id":
          type: "string"
          title: "Id"
          description: "The unique transaction item identifier."
        "tax_items":
          items: {"$ref": "#/components/schemas/TaxItemRead"}
          type: "array"
          title: "Tax Items"
          description: "List of tax items associated with the transaction item."
        "total_discount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Total Discount"
          description: "Total discount amount applied to this transaction item."
        "subtotal":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Subtotal"
          description: "Subtotal amount before any discount is applied."
      type: "object"
      required:
        - "organization_id"
        - "date"
        - "external_product_id"
        - "id"
        - "tax_items"
      title: "TransactionItemRead"
    "TransactionMetrics":
      properties:
        "total_transactions_count":
          type: "integer"
          title: "Total Transactions Count"
          default: 0
        "total_sales":
          type: "string"
          title: "Total Sales"
          default: "0.00"
        "total_taxable_sales":
          type: "string"
          title: "Total Taxable Sales"
          default: "0.00"
        "total_incomplete_address":
          type: "integer"
          title: "Total Incomplete Address"
          default: 0
        "currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
      type: "object"
      title: "TransactionMetrics"
    "TransactionPublicRequest":
      properties:
        "requires_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionRequired"}
            - type: "null"
          description: "Indicates if transaction requires tax exemption."
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Unique identifier of the organization."
        "external_id":
          type: "string"
          title: "External Id"
          description: "External identifier of the transaction."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Transaction date and time"
        "shop_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Shop Date"
          description: "Transaction date in the shop's local timezone"
        "shop_date_tz":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Shop Date Tz"
          description: "Timezone of the shop"
        "status": {"$ref": "#/components/schemas/TransactionStatusEnum", "description": "Transaction status (e.g., COMMITTED)", "default": "COMMITTED"}
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the transaction."
        "refund_status":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionRefundStatus"}
            - type: "null"
          description: "Status of refund, if applicable"
        "total_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Amount"
          description: "Total amount of the transaction."
          default: "0.00"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier of the customer."
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates if transaction is marketplace-based."
          default: false
        "exempt":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionExemptStatusEnum"}
            - type: "null"
          description: "Exemption status (e.g., NOT_EXEMPT)"
          default: "NOT_EXEMPT"
        "exemptions":
          anyOf:
            - items: {"$ref": "#/components/schemas/Exemption"}
              type: "array"
            - type: "null"
          title: "Exemptions"
          description: "List of exemptions applied (if any)."
        "related_to":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Related To"
          description: "Related transaction identifier."
        "secondary_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary External Id"
          description: "Secondary External Identifier."
        "secondary_source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary Source"
          description: "Secondary source information"
        "external_friendly_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Friendly Id"
          description: "Friendly identifier of the original item."
        "total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Imported"
          description: "Imported tax amount."
          default: "0.00"
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Calculated"
          description: "Calculated tax amount."
          default: "0.00"
        "tax_rate_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Liability Amount"
          description: "Total tax liability amount."
          default: "0.00"
        "tax_liability_source":
          anyOf:
            - {"$ref": "#/components/schemas/TaxLiabilitySourceEnum"}
            - type: "null"
          description: "Source of tax liability."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxable Amount"
          description: "Taxable amount."
          default: "0.00"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "description": "Currency code (ISO 4217, e.g., USD)", "default": "USD"}
        "locked":
          type: "boolean"
          title: "Locked"
          description: "Transaction lock status."
          default: false
        "source": {"$ref": "#/components/schemas/SourceEnum", "description": "Source platform (e.g., STRIPE)", "default": "OTHER"}
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Connection Identifier"
        "filing_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Id"
          description: "Filing identifier."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City of the transaction address."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County of the transaction address."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State of the transaction address."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code (ISO Alpha-2)."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "Postal code of the transaction."
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
          description: "Tax ID associated with the transaction"
        "addresses":
          items: {"$ref": "#/components/schemas/TransactionAddressPublic"}
          type: "array"
          title: "Addresses"
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemBuilder"}
          type: "array"
          title: "Transaction Items"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerBaseBase"}
            - {"$ref": "#/components/schemas/TransactionImportCustomer"}
          title: "Customer"
        "type": {"$ref": "#/components/schemas/TransactionTypeEnum"}
      type: "object"
      required:
        - "organization_id"
        - "external_id"
        - "date"
        - "addresses"
        - "transaction_items"
        - "customer"
        - "type"
      title: "TransactionPublicRequest"
    "TransactionRead":
      properties:
        "requires_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionRequired"}
            - type: "null"
          description: "Indicates if transaction requires tax exemption."
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Unique identifier of the organization."
        "external_id":
          type: "string"
          title: "External Id"
          description: "External identifier of the transaction."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Transaction date and time"
        "shop_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Shop Date"
          description: "Transaction date in the shop's local timezone"
        "shop_date_tz":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Shop Date Tz"
          description: "Timezone of the shop"
        "status": {"$ref": "#/components/schemas/TransactionStatusEnum", "description": "Transaction status (e.g., COMMITTED)", "default": "COMMITTED"}
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the transaction."
        "refund_status":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionRefundStatus"}
            - type: "null"
          description: "Status of refund, if applicable"
        "total_amount":
          type: "string"
          title: "Total Amount"
          description: "Total amount of the transaction."
          default: "0.00"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier of the customer."
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates if transaction is marketplace-based."
          default: false
        "exempt":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionExemptStatusEnum"}
            - type: "null"
          description: "Exemption status (e.g., NOT_EXEMPT)"
          default: "NOT_EXEMPT"
        "exemptions":
          anyOf:
            - items: {"$ref": "#/components/schemas/Exemption"}
              type: "array"
            - type: "null"
          title: "Exemptions"
          description: "List of exemptions applied (if any)."
        "related_to":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Related To"
          description: "Related transaction identifier."
        "secondary_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary External Id"
          description: "Secondary External Identifier."
        "secondary_source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary Source"
          description: "Secondary source information"
        "external_friendly_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Friendly Id"
          description: "Friendly identifier of the original item."
        "total_tax_amount_imported":
          type: "string"
          title: "Total Tax Amount Imported"
          description: "Imported tax amount."
          default: "0.00"
        "tax_rate_imported":
          type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "total_tax_amount_calculated":
          type: "string"
          title: "Total Tax Amount Calculated"
          description: "Calculated tax amount."
          default: "0.00"
        "tax_rate_calculated":
          type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "total_tax_liability_amount":
          type: "string"
          title: "Total Tax Liability Amount"
          description: "Total tax liability amount."
          default: "0.00"
        "tax_liability_source":
          anyOf:
            - {"$ref": "#/components/schemas/TaxLiabilitySourceEnum"}
            - type: "null"
          description: "Source of tax liability."
        "taxable_amount":
          type: "string"
          title: "Taxable Amount"
          description: "Taxable amount."
          default: "0.00"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "description": "Currency code (ISO 4217, e.g., USD)", "default": "USD"}
        "locked":
          type: "boolean"
          title: "Locked"
          description: "Transaction lock status."
          default: false
        "source": {"$ref": "#/components/schemas/SourceEnum", "description": "Source platform (e.g., STRIPE)", "default": "OTHER"}
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Connection Identifier"
        "filing_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Id"
          description: "Filing identifier."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City of the transaction address."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County of the transaction address."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State of the transaction address."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code (ISO Alpha-2)."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "Postal code of the transaction."
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
          description: "Tax ID associated with the transaction"
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status (e.g., VERIFIED).", "default": "UNVERIFIED"}
        "processing_status": {"$ref": "#/components/schemas/ProcessingStatusEnum", "description": "Status of processing (e.g., ADDRESS_DONE)", "default": "QUEUED"}
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code (ISO 4217, e.g., USD)"
        "converted_total_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Total Amount"
          description: "Converted total amount."
        "converted_total_tax_amount_imported":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_total_tax_amount_calculated":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Calculated"
          description: "Converted calculated tax amount."
        "conversion_rate":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Conversion Rate"
          description: "Currency conversion rate."
        "converted_taxable_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_total_discount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "converted_total_tax_liability_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Liability Amount"
          description: "Converted total tax liability amount."
        "id":
          type: "string"
          title: "Id"
          description: "The unique transaction identifier."
        "addresses":
          items: {"$ref": "#/components/schemas/TransactionAddressRead-Output"}
          type: "array"
          title: "Addresses"
          description: "List of addresses associated."
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemRead"}
          type: "array"
          title: "Transaction Items"
          description: "List of items in the transaction."
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerRead"}
            - type: "null"
          description: "Customer information associated with the transaction."
        "type": {"$ref": "#/components/schemas/TransactionTypeEnum", "description": "The type of transaction\n                                    (e.g., SALE, REFUND, PARTIAL_CREDIT_NOTE)."}
        "total_discount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Total Discount"
          description: "Total amount of all discounts applied to the transaction."
        "subtotal":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Subtotal"
          description: "Subtotal amount before any discounts are applied."
        "final_total_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Final Total Amount"
          description: "Final total amount including tax liability."
        "converted_final_total_amount":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Converted Final Total Amount"
          description: "Converted final total amount including tax liability."
      type: "object"
      required:
        - "organization_id"
        - "external_id"
        - "date"
        - "id"
        - "addresses"
        - "transaction_items"
        - "type"
      title: "TransactionRead"
    "TransactionRefundStatus":
      type: "string"
      enum:
        - "FULLY_REFUNDED"
        - "PARTIALLY_REFUNDED"
      title: "TransactionRefundStatus"
      description: "Shopify has 2 order statuses for refund case: refunded and partially_refunded\nIf the given order has different status from these 2, we will set the\ntransaction's refund_status to PARTIALLY_REFUNDED by default."
    "TransactionStatusEnum":
      type: "string"
      enum:
        - "PENDING"
        - "COMMITTED"
        - "CANCELLED"
        - "FULLY_REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "INVALID"
        - "ARCHIVED"
      title: "TransactionStatusEnum"
    "TransactionTypeEnum":
      type: "string"
      enum:
        - "SALE"
        - "FULL_CREDIT_NOTE"
        - "PARTIAL_CREDIT_NOTE"
        - "TAX_REFUND"
        - "ARCHIVE"
      title: "TransactionTypeEnum"
    "TransactionUpdate":
      properties:
        "requires_exemption":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionRequired"}
            - type: "null"
          description: "Indicates if transaction requires tax exemption."
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Unique identifier of the organization."
        "external_id":
          type: "string"
          title: "External Id"
          description: "External identifier of the transaction."
        "date":
          type: "string"
          format: "date-time"
          title: "Date"
          description: "Transaction date and time"
        "shop_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Shop Date"
          description: "Transaction date in the shop's local timezone"
        "shop_date_tz":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Shop Date Tz"
          description: "Timezone of the shop"
        "status": {"$ref": "#/components/schemas/TransactionStatusEnum", "description": "Transaction status (e.g., COMMITTED)", "default": "COMMITTED"}
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the transaction."
        "refund_status":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionRefundStatus"}
            - type: "null"
          description: "Status of refund, if applicable"
        "total_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Amount"
          description: "Total amount of the transaction."
          default: "0.00"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier of the customer."
        "marketplace":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Marketplace"
          description: "Indicates if transaction is marketplace-based."
          default: false
        "exempt":
          anyOf:
            - {"$ref": "#/components/schemas/TransactionExemptStatusEnum"}
            - type: "null"
          description: "Exemption status (e.g., NOT_EXEMPT)"
          default: "NOT_EXEMPT"
        "exemptions":
          anyOf:
            - items: {"$ref": "#/components/schemas/Exemption"}
              type: "array"
            - type: "null"
          title: "Exemptions"
          description: "List of exemptions applied (if any)."
        "related_to":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Related To"
          description: "Related transaction identifier."
        "secondary_external_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary External Id"
          description: "Secondary External Identifier."
        "secondary_source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Secondary Source"
          description: "Secondary source information"
        "external_friendly_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "External Friendly Id"
          description: "Friendly identifier of the original item."
        "total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Imported"
          description: "Imported tax amount."
          default: "0.00"
        "tax_rate_imported":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Imported"
          description: "Imported tax rate."
          default: "0.00"
        "total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Amount Calculated"
          description: "Calculated tax amount."
          default: "0.00"
        "tax_rate_calculated":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Tax Rate Calculated"
          description: "Calculated tax rate."
          default: "0.00"
        "total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Total Tax Liability Amount"
          description: "Total tax liability amount."
          default: "0.00"
        "tax_liability_source":
          anyOf:
            - {"$ref": "#/components/schemas/TaxLiabilitySourceEnum"}
            - type: "null"
          description: "Source of tax liability."
        "taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Taxable Amount"
          description: "Taxable amount."
          default: "0.00"
        "currency": {"$ref": "#/components/schemas/CurrencyEnum", "description": "Currency code (ISO 4217, e.g., USD)", "default": "USD"}
        "locked":
          type: "boolean"
          title: "Locked"
          description: "Transaction lock status."
          default: false
        "source": {"$ref": "#/components/schemas/SourceEnum", "description": "Source platform (e.g., STRIPE)", "default": "OTHER"}
        "connection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Connection Id"
          description: "Connection Identifier"
        "filing_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Id"
          description: "Filing identifier."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City of the transaction address."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County of the transaction address."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State of the transaction address."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code (ISO Alpha-2)."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "Postal code of the transaction."
        "tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tax Id"
          description: "Tax ID associated with the transaction"
        "address_status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status (e.g., VERIFIED).", "default": "UNVERIFIED"}
        "processing_status": {"$ref": "#/components/schemas/ProcessingStatusEnum", "description": "Status of processing (e.g., ADDRESS_DONE)", "default": "QUEUED"}
        "destination_currency":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyEnum"}
            - type: "null"
          description: "Destination currency code (ISO 4217, e.g., USD)"
        "converted_total_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Amount"
          description: "Converted total amount."
        "converted_total_tax_amount_imported":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Imported"
          description: "Converted imported tax amount."
        "converted_total_tax_amount_calculated":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Amount Calculated"
          description: "Converted calculated tax amount."
        "conversion_rate":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Conversion Rate"
          description: "Currency conversion rate."
        "converted_taxable_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Taxable Amount"
          description: "Converted taxable amount."
        "converted_total_discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Discount"
          description: "Converted total discount amount."
        "converted_subtotal":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Subtotal"
          description: "Converted subtotal amount."
        "converted_total_tax_liability_amount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Converted Total Tax Liability Amount"
          description: "Converted total tax liability amount."
        "addresses":
          anyOf:
            - items: {"$ref": "#/components/schemas/TransactionAddressBuilder"}
              type: "array"
            - items: {"$ref": "#/components/schemas/Address-Input"}
              type: "array"
          title: "Addresses"
        "transaction_items":
          items: {"$ref": "#/components/schemas/TransactionItemCreateUpdate"}
          type: "array"
          title: "Transaction Items"
        "customer": {"$ref": "#/components/schemas/CustomerUpdate"}
      type: "object"
      required:
        - "organization_id"
        - "external_id"
        - "date"
        - "addresses"
        - "transaction_items"
        - "customer"
      title: "TransactionUpdate"
    "TreatmentEnum":
      type: "string"
      enum:
        - "INCLUDED"
        - "EXCLUDED"
        - "DEPENDS"
        - "YES_SALES_NO_TRANSACTIONS"
      title: "TreatmentEnum"
    "UiOrganizationCreate":
      properties:
        "name":
          type: "string"
          title: "Name"
        "is_test":
          type: "boolean"
          title: "Is Test"
      type: "object"
      required:
        - "name"
        - "is_test"
      title: "UiOrganizationCreate"
    "UpdateExistingItem":
      properties:
        "billing_plan": {"$ref": "#/components/schemas/BillingPlanEnum"}
      type: "object"
      required:
        - "billing_plan"
      title: "UpdateExistingItem"
    "UpdateFilingTemp":
      properties:
        "filing_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Filing Id"
        "organization_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Organization Id"
        "is_test":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Test"
        "status": {"$ref": "#/components/schemas/FilingStatusEnum", "default": "UNFILED"}
        "start_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Start Date"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
        "due_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Due Date"
        "date_filed":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Date Filed"
        "is_manual":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Manual"
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
        "state_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Name"
        "country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
        "jira_issue_key":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jira Issue Key"
        "auto_approved":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto Approved"
          default: false
        "auto_file":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Auto File"
          default: false
      type: "object"
      title: "UpdateFilingTemp"
      description: "This is a temporary serializer for the update filing endpoint.\nIt will be deprecated and with a filing approval endpoint."
    "UpdateUserRoleRequest":
      properties:
        "role":
          type: "string"
          title: "Role"
        "additional_roles":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Additional Roles"
          default: []
      type: "object"
      required:
        - "role"
      title: "UpdateUserRoleRequest"
    "UploadURLsRequest":
      properties:
        "files":
          items: {"$ref": "#/components/schemas/FileUploadData"}
          type: "array"
          title: "Files"
        "source": {"$ref": "#/components/schemas/SourceEnum"}
        "user_id":
          type: "string"
          title: "User Id"
        "manual":
          type: "boolean"
          title: "Manual"
          default: false
      type: "object"
      required:
        - "files"
        - "source"
        - "user_id"
      title: "UploadURLsRequest"
    "UpsertBillingMatrix":
      properties:
        "used_states":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Used States"
        "used_tax_questions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Used Tax Questions"
      type: "object"
      title: "UpsertBillingMatrix"
    "UserCreated":
      properties:
        "email":
          type: "string"
          title: "Email"
        "email_confirmed":
          type: "boolean"
          title: "Email Confirmed"
        "event_type":
          type: "string"
          title: "Event Type"
        "picture_url":
          type: "string"
          title: "Picture Url"
        "user_id":
          type: "string"
          title: "User Id"
      type: "object"
      required:
        - "email"
        - "email_confirmed"
        - "event_type"
        - "picture_url"
        - "user_id"
      title: "UserCreated"
    "UserRead":
      properties:
        "user_id":
          type: "string"
          title: "User Id"
        "org_id_to_org_member_info":
          additionalProperties: true
          type: "object"
          title: "Org Id To Org Member Info"
        "email":
          type: "string"
          title: "Email"
        "first_name":
          type: "string"
          title: "First Name"
        "last_name":
          type: "string"
          title: "Last Name"
        "username":
          type: "string"
          title: "Username"
        "legacy_user_id":
          type: "string"
          title: "Legacy User Id"
        "impersonator_user_id":
          type: "string"
          title: "Impersonator User Id"
        "metadata":
          type: "string"
          title: "Metadata"
        "properties":
          additionalProperties: true
          type: "object"
          title: "Properties"
      type: "object"
      required:
        - "user_id"
        - "org_id_to_org_member_info"
        - "email"
        - "first_name"
        - "last_name"
        - "username"
        - "legacy_user_id"
        - "impersonator_user_id"
        - "metadata"
        - "properties"
      title: "UserRead"
    "UserResponse":
      properties:
        "user_id":
          type: "string"
          title: "User Id"
        "email":
          type: "string"
          title: "Email"
        "email_confirmed":
          type: "boolean"
          title: "Email Confirmed"
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Username"
        "picture_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Picture Url"
        "properties":
          anyOf:
            - additionalProperties: true
              type: "object"
            - type: "null"
          title: "Properties"
        "locked":
          type: "boolean"
          title: "Locked"
        "enabled":
          type: "boolean"
          title: "Enabled"
        "has_password":
          type: "boolean"
          title: "Has Password"
        "update_password_required":
          type: "boolean"
          title: "Update Password Required"
        "mfa_enabled":
          type: "boolean"
          title: "Mfa Enabled"
        "can_create_orgs":
          type: "boolean"
          title: "Can Create Orgs"
        "created_at":
          type: "integer"
          title: "Created At"
        "last_active_at":
          type: "integer"
          title: "Last Active At"
        "user_role":
          anyOf:
            - type: "string"
            - type: "null"
          title: "User Role"
        "user_permissions":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "User Permissions"
        "additional_roles":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Additional Roles"
        "inherited_user_roles_plus_current_role":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Inherited User Roles Plus Current Role"
        "org_metadata":
          anyOf:
            - {"$ref": "#/components/schemas/OrgMetadata"}
            - type: "null"
        "legacy_user_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Legacy User Id"
      type: "object"
      required:
        - "user_id"
        - "email"
        - "email_confirmed"
        - "locked"
        - "enabled"
        - "has_password"
        - "update_password_required"
        - "mfa_enabled"
        - "can_create_orgs"
        - "created_at"
        - "last_active_at"
      title: "UserResponse"
    "UsersResponse":
      properties:
        "users":
          items: {"$ref": "#/components/schemas/UserResponse"}
          type: "array"
          title: "Users"
        "total_users":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Users"
        "current_page":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Current Page"
        "page_size":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Page Size"
        "has_more_results":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Has More Results"
      type: "object"
      required:
        - "users"
        - "total_users"
        - "current_page"
        - "page_size"
        - "has_more_results"
      title: "UsersResponse"
    "ValidationAddress":
      properties:
        "line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line1"
          description: "Primary address line, such as street name and number"
        "line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line2"
          description: "Additional address details, such as an apartment or suite number"
        "line3":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line3"
          description: "Additional address details for complex addresses"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "The city or town name for the address"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State, province, or region of the address"
        "country":
          anyOf:
            - type: "string"
              maxLength: 10
            - type: "null"
          title: "Country"
          description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US' for the United States).\n        Defaults to 'US'.\n        should not be empty. Not validating here as the validation\n        structure can be different for different providers"
          default: "US"
        "postalCode":
          anyOf:
            - type: "string"
              maxLength: 50
            - type: "null"
          title: "Postalcode"
          description: "ZIP or postal code for the address. Can be empty for some locales.\n        Not validating here as the validation structure can be different for different providers"
          default: ""
        "id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Id"
          description: "Unique identifier for the request, if applicable"
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district name for the address"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "A complete address string that can be used as an alternative to providing individual fields."
      type: "object"
      title: "ValidationAddress"
    "ValidationError":
      properties:
        "loc":
          items:
            anyOf:
              - type: "string"
              - type: "integer"
          type: "array"
          title: "Location"
        "msg":
          type: "string"
          title: "Message"
        "type":
          type: "string"
          title: "Error Type"
      type: "object"
      required:
        - "loc"
        - "msg"
        - "type"
      title: "ValidationError"
    "ValidationResult":
      properties:
        "is_valid":
          type: "boolean"
          title: "Is Valid"
        "file_name":
          type: "string"
          title: "File Name"
        "rows":
          type: "integer"
          title: "Rows"
        "detected_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Detected Type"
        "detected_dialect":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Detected Dialect"
        "result_data":
          items: {"$ref": "#/components/schemas/ImportFormat"}
          type: "array"
          title: "Result Data"
          default: []
        "errors":
          title: "Errors"
        "file_errors":
          anyOf:
            - type: "string"
            - type: "null"
          title: "File Errors"
        "encoding":
          type: "string"
          title: "Encoding"
          default: "utf-8"
      type: "object"
      required:
        - "is_valid"
        - "file_name"
        - "rows"
        - "errors"
      title: "ValidationResult"
    "ValidationStatus":
      type: "string"
      enum:
        - "not_validated"
        - "valid"
        - "partially_valid"
        - "invalid"
      title: "ValidationStatus"
    "Webhook":
      properties:
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
        "webhook_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Webhook Status"
        "object":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Object"
      type: "object"
      title: "Webhook"
    "backend__src__address_validation__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Type of validation error"
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__address_validation__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__address_validation__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__addresses__models__Address-Output":
      properties:
        "id":
          type: "string"
          maxLength: 100
          title: "Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp when transaction was created in Kintsugi."
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Timestamp when transaction was last updated."
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
          description: "Phone number associated with the address."
        "street_1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 1"
          description: "Primary street address."
        "street_2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Street 2"
          description: "Additional street address details, such as an apartment or suite number."
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
          description: "City where the customer resides."
        "county":
          anyOf:
            - type: "string"
            - type: "null"
          title: "County"
          description: "County or district of the customer."
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
          description: "State or province of the customer."
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
          description: "ZIP or Postal code of the customer."
        "country":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format"
        "full_address":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Full Address"
          description: "Complete address string of the customer, which can be used as an alternative to individual fields."
        "type": {"$ref": "#/components/schemas/AddressType", "description": "Type of address. Allowed values: BILL_TO, SHIP_TO."}
        "status": {"$ref": "#/components/schemas/AddressStatus", "description": "Address verification status.** This field is ignored when updating addresses. The status of the address is updated automatically. **", "default": "UNVERIFIED"}
        "organization_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Organization Id"
        "transaction_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Transaction Id"
      type: "object"
      required:
        - "type"
      title: "Address"
    "backend__src__billing__models__Address":
      properties:
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line1"
        "line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line2"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
        "state_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State Code"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "country":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Country"
        "zip":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Zip"
        "validation_status":
          type: "string"
          title: "Validation Status"
        "object":
          type: "string"
          title: "Object"
      type: "object"
      required:
        - "validation_status"
        - "object"
      title: "Address"
    "backend__src__billing__models__LineItem":
      properties:
        "id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Id"
        "date_from":
          type: "integer"
          title: "Date From"
        "date_to":
          type: "integer"
          title: "Date To"
        "unit_amount":
          type: "integer"
          title: "Unit Amount"
        "quantity":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Quantity"
        "amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount"
        "pricing_model":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Pricing Model"
        "is_taxed":
          type: "boolean"
          title: "Is Taxed"
        "tax_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Tax Amount"
        "object":
          type: "string"
          title: "Object"
        "subscription_id":
          type: "string"
          title: "Subscription Id"
        "customer_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Id"
        "description":
          type: "string"
          title: "Description"
        "entity_type":
          type: "string"
          title: "Entity Type"
        "entity_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Entity Id"
        "metered":
          type: "boolean"
          title: "Metered"
        "discount_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Discount Amount"
        "item_level_discount_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Item Level Discount Amount"
      type: "object"
      required:
        - "date_from"
        - "date_to"
        - "unit_amount"
        - "is_taxed"
        - "object"
        - "subscription_id"
        - "description"
        - "entity_type"
        - "metered"
      title: "LineItem"
    "backend__src__chargebee_adapter__models__invoice__ChargebeeCustomer":
      properties:
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
          description: "The name of the Customer in Chargebee."
        "customerCode":
          type: "string"
          title: "Customercode"
          description: "The unique identifier for the Customer in Chargebee."
        "address": {"$ref": "#/components/schemas/ChargebeeAddress", "description": "Represents the address used for validation."}
        "taxRegistrationNumber":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Taxregistrationnumber"
          description: "The tax registration number of a business in a country. For example, this is the GSTIN for India or the VAT number for EU or Australia."
        "taxIdentifiers":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaxIdentifier"}
              type: "array"
            - type: "null"
          title: "Taxidentifiers"
          description: "It represents the information related to the customer's tax identifiers. This includes details such as exemption status etc."
      type: "object"
      required:
        - "customerCode"
        - "address"
      title: "ChargebeeCustomer"
      description: "The details of the Customer"
    "backend__src__chargebee_adapter__models__invoice__LineItem-Input":
      properties:
        "number":
          type: "integer"
          title: "Number"
          description: "Index or serial number of the line item."
        "itemCode":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Itemcode"
          description: "The unique identifier (in Chargebee) of the product correspondingto the line item. If the line item corresponds to a one-off charge,then this identifier is not present."
        "description":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Description"
          description: "The description of the line item."
        "quantity":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Quantity"
          description: "The quantity associated with this line item."
          default: 1
        "unitPrice":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Unitprice"
          description: "The unit price for this line item. In case of tiered pricing where theunit price varies for each quantity tier, this is the average unit price."
        "amount":
          type: "number"
          title: "Amount"
          description: "The amount for this line item. This is unitPrice*quantity."
        "isTaxInclusive":
          type: "boolean"
          title: "Istaxinclusive"
          description: "Indicates whether the subtotal for this line item is inclusive of taxes."
        "isTaxable":
          type: "boolean"
          title: "Istaxable"
          description: "Indicates whether this line item is taxable."
        "taxIdentifiers":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaxIdentifier"}
              type: "array"
            - type: "null"
          title: "Taxidentifiers"
          description: "The tax code fields of the product used for tax calculation."
        "taxExemptType":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptType"}
            - type: "null"
          description: "The tax exemption type for a line item. This is a mandatory parameter while applying tax exemption on any line-item."
        "taxExemptReason":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Taxexemptreason"
          description: "The reason due to which a line item is exempted from tax. This is a mandatory parameter while applying tax exemption on any line-item."
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The part of this line item's subtotal that is exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The discount applied to this line item."
        "subtotal":
          type: "number"
          title: "Subtotal"
          description: "The amount after discounts for this line item.This is amount - discountAmount."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of this line item's subtotal that is taxable."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The tax payable for this line item. This is the sum of all taxes.taxAmount for this line item."
        "total":
          type: "number"
          title: "Total"
          description: "The total for this line item after discounts and taxes. This is the same as subtotal if it is tax inclusive; otherwise it is subtotal + taxAmount. total can also be expressed as exemptAmount + taxableAmount + taxAmount."
        "isPartialTax":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Ispartialtax"
          description: "Indicates if taxes were applied only partially for this line item."
        "taxes":
          items: {"$ref": "#/components/schemas/TaxLineItem-Input"}
          type: "array"
          title: "Taxes"
          description: "List of taxes applied for this line item under each jurisdiction."
      type: "object"
      required:
        - "number"
        - "amount"
        - "isTaxInclusive"
        - "isTaxable"
        - "exemptAmount"
        - "discountAmount"
        - "subtotal"
        - "taxableAmount"
        - "taxAmount"
        - "total"
        - "taxes"
      title: "LineItem"
      description: "The details of a line item"
    "backend__src__chargebee_adapter__models__invoice__LineItem-Output":
      properties:
        "number":
          type: "integer"
          title: "Number"
          description: "Index or serial number of the line item."
        "itemCode":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Itemcode"
          description: "The unique identifier (in Chargebee) of the product correspondingto the line item. If the line item corresponds to a one-off charge,then this identifier is not present."
        "description":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Description"
          description: "The description of the line item."
        "quantity":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Quantity"
          description: "The quantity associated with this line item."
          default: 1
        "unitPrice":
          anyOf:
            - type: "number"
              minimum: 0
            - type: "null"
          title: "Unitprice"
          description: "The unit price for this line item. In case of tiered pricing where theunit price varies for each quantity tier, this is the average unit price."
        "amount":
          type: "number"
          title: "Amount"
          description: "The amount for this line item. This is unitPrice*quantity."
        "isTaxInclusive":
          type: "boolean"
          title: "Istaxinclusive"
          description: "Indicates whether the subtotal for this line item is inclusive of taxes."
        "isTaxable":
          type: "boolean"
          title: "Istaxable"
          description: "Indicates whether this line item is taxable."
        "taxIdentifiers":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaxIdentifier"}
              type: "array"
            - type: "null"
          title: "Taxidentifiers"
          description: "The tax code fields of the product used for tax calculation."
        "taxExemptType":
          anyOf:
            - {"$ref": "#/components/schemas/TaxExemptType"}
            - type: "null"
          description: "The tax exemption type for a line item. This is a mandatory parameter while applying tax exemption on any line-item."
        "taxExemptReason":
          anyOf:
            - type: "string"
              maxLength: 250
            - type: "null"
          title: "Taxexemptreason"
          description: "The reason due to which a line item is exempted from tax. This is a mandatory parameter while applying tax exemption on any line-item."
        "exemptAmount":
          type: "number"
          title: "Exemptamount"
          description: "The part of this line item's subtotal that is exempted from tax."
        "discountAmount":
          type: "number"
          title: "Discountamount"
          description: "The discount applied to this line item."
        "subtotal":
          type: "number"
          title: "Subtotal"
          description: "The amount after discounts for this line item.This is amount - discountAmount."
        "taxableAmount":
          type: "number"
          title: "Taxableamount"
          description: "The part of this line item's subtotal that is taxable."
        "taxAmount":
          type: "number"
          title: "Taxamount"
          description: "The tax payable for this line item. This is the sum of all taxes.taxAmount for this line item."
        "total":
          type: "number"
          title: "Total"
          description: "The total for this line item after discounts and taxes. This is the same as subtotal if it is tax inclusive; otherwise it is subtotal + taxAmount. total can also be expressed as exemptAmount + taxableAmount + taxAmount."
        "isPartialTax":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Ispartialtax"
          description: "Indicates if taxes were applied only partially for this line item."
        "taxes":
          items: {"$ref": "#/components/schemas/TaxLineItem-Output"}
          type: "array"
          title: "Taxes"
          description: "List of taxes applied for this line item under each jurisdiction."
      type: "object"
      required:
        - "number"
        - "amount"
        - "isTaxInclusive"
        - "isTaxable"
        - "exemptAmount"
        - "discountAmount"
        - "subtotal"
        - "taxableAmount"
        - "taxAmount"
        - "total"
        - "taxes"
      title: "LineItem"
      description: "The details of a line item"
    "backend__src__connections__bigcommerce__models__Document":
      properties:
        "id":
          type: "string"
          title: "Id"
        "billing_address": {"$ref": "#/components/schemas/BigCommerceAddress"}
        "destination_address": {"$ref": "#/components/schemas/BigCommerceAddress"}
        "origin_address": {"$ref": "#/components/schemas/BigCommerceAddress"}
        "shipping": {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemBase"}
        "handling": {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemBase"}
        "items":
          items: {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItem"}
          type: "array"
          title: "Items"
      type: "object"
      required:
        - "id"
        - "billing_address"
        - "destination_address"
        - "origin_address"
        - "shipping"
        - "handling"
        - "items"
      title: "Document"
    "backend__src__connections__bigcommerce__models__DocumentResponse":
      properties:
        "id":
          type: "string"
          title: "Id"
        "items":
          items: {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemResponse"}
          type: "array"
          title: "Items"
        "shipping":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemResponseBase"}
            - type: "null"
        "handling":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemResponseBase"}
            - type: "null"
      type: "object"
      required:
        - "id"
        - "items"
      title: "DocumentResponse"
    "backend__src__connections__bigcommerce__models__LineItem":
      properties:
        "id":
          type: "string"
          title: "Id"
        "item_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Code"
        "item_reference":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Reference"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "price": {"$ref": "#/components/schemas/Price"}
        "quantity":
          type: "integer"
          title: "Quantity"
        "tax_class":
          anyOf:
            - {"$ref": "#/components/schemas/TaxClass"}
            - type: "null"
        "tax_exempt":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Tax Exempt"
        "type":
          type: "string"
          title: "Type"
        "wrapping":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemBase"}
            - type: "null"
      type: "object"
      required:
        - "id"
        - "price"
        - "quantity"
        - "type"
      title: "LineItem"
    "backend__src__connections__bigcommerce__models__LineItemBase":
      properties:
        "id":
          type: "string"
          title: "Id"
        "item_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Code"
        "item_reference":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Reference"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "price": {"$ref": "#/components/schemas/Price"}
        "quantity":
          type: "integer"
          title: "Quantity"
        "tax_class":
          anyOf:
            - {"$ref": "#/components/schemas/TaxClass"}
            - type: "null"
        "tax_exempt":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Tax Exempt"
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "id"
        - "price"
        - "quantity"
        - "type"
      title: "LineItemBase"
    "backend__src__connections__bigcommerce__models__LineItemResponse":
      properties:
        "id":
          type: "string"
          title: "Id"
        "price":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__PriceResponse"}
            - type: "null"
        "type":
          type: "string"
          title: "Type"
        "wrapping":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__LineItemResponseBase"}
            - type: "null"
      type: "object"
      required:
        - "id"
        - "type"
      title: "LineItemResponse"
    "backend__src__connections__bigcommerce__models__LineItemResponseBase":
      properties:
        "id":
          type: "string"
          title: "Id"
        "price":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__bigcommerce__models__PriceResponse"}
            - type: "null"
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "id"
        - "type"
      title: "LineItemResponseBase"
    "backend__src__connections__bigcommerce__models__PriceResponse":
      properties:
        "amount_inclusive":
          type: "string"
          title: "Amount Inclusive"
        "amount_exclusive":
          type: "string"
          title: "Amount Exclusive"
        "total_tax":
          type: "string"
          title: "Total Tax"
        "tax_rate":
          type: "string"
          title: "Tax Rate"
        "sales_tax_summary":
          items: {"$ref": "#/components/schemas/SalesTaxSummary"}
          type: "array"
          title: "Sales Tax Summary"
      type: "object"
      required:
        - "amount_inclusive"
        - "amount_exclusive"
        - "total_tax"
        - "tax_rate"
        - "sales_tax_summary"
      title: "PriceResponse"
    "backend__src__connections__chargebee__models__customer__ChargebeeCustomer":
      properties:
        "id":
          type: "string"
          title: "Id"
        "first_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "First Name"
        "last_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "phone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Phone"
        "company":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company"
        "created_at":
          type: "integer"
          title: "Created At"
        "taxability":
          anyOf:
            - {"$ref": "#/components/schemas/Taxability"}
            - type: "null"
          default: "taxable"
        "updated_at":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Updated At"
        "channel":
          anyOf:
            - {"$ref": "#/components/schemas/Channel"}
            - type: "null"
        "deleted":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Deleted"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/ChargebeeBillingAddress"}
            - type: "null"
        "vat_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Vat Number"
      type: "object"
      required:
        - "id"
        - "created_at"
      title: "ChargebeeCustomer"
    "backend__src__connections__ecommerce__magento__models__Document":
      properties:
        "id":
          type: "string"
          title: "Id"
        "total_discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Total Discount"
        "shipping_address": {"$ref": "#/components/schemas/MagentoAddress"}
        "shipping":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__LineItemBase"}
            - type: "null"
        "handling":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__LineItemBase"}
            - type: "null"
        "items":
          items: {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__LineItem"}
          type: "array"
          title: "Items"
      type: "object"
      required:
        - "id"
        - "shipping_address"
        - "items"
      title: "Document"
    "backend__src__connections__ecommerce__magento__models__DocumentResponse":
      properties:
        "id":
          type: "string"
          title: "Id"
        "items":
          items: {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__LineItemResponse"}
          type: "array"
          title: "Items"
        "shipping":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__LineItemResponseBase"}
            - type: "null"
        "handling":
          anyOf:
            - {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__LineItemResponseBase"}
            - type: "null"
        "error":
          anyOf:
            - {"$ref": "#/components/schemas/ErrorDetail"}
            - type: "null"
      type: "object"
      required:
        - "id"
        - "items"
      title: "DocumentResponse"
    "backend__src__connections__ecommerce__magento__models__LineItem":
      properties:
        "id":
          type: "string"
          title: "Id"
        "item_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Code"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "price": {"$ref": "#/components/schemas/Price"}
        "quantity":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Quantity"
        "discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Discount"
        "tax_class":
          anyOf:
            - {"$ref": "#/components/schemas/TaxClass"}
            - type: "null"
        "tax_exempt":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Tax Exempt"
      type: "object"
      required:
        - "id"
        - "price"
        - "quantity"
      title: "LineItem"
    "backend__src__connections__ecommerce__magento__models__LineItemBase":
      properties:
        "id":
          type: "string"
          title: "Id"
        "item_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Item Code"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "price": {"$ref": "#/components/schemas/Price"}
        "quantity":
          anyOf:
            - type: "number"
            - type: "string"
          title: "Quantity"
        "discount":
          anyOf:
            - type: "number"
            - type: "string"
            - type: "null"
          title: "Discount"
        "tax_class":
          anyOf:
            - {"$ref": "#/components/schemas/TaxClass"}
            - type: "null"
        "tax_exempt":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Tax Exempt"
      type: "object"
      required:
        - "id"
        - "price"
        - "quantity"
      title: "LineItemBase"
    "backend__src__connections__ecommerce__magento__models__LineItemResponse":
      properties:
        "id":
          type: "string"
          title: "Id"
        "price_response": {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__PriceResponse"}
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "id"
        - "price_response"
        - "type"
      title: "LineItemResponse"
    "backend__src__connections__ecommerce__magento__models__LineItemResponseBase":
      properties:
        "id":
          type: "string"
          title: "Id"
        "price_response": {"$ref": "#/components/schemas/backend__src__connections__ecommerce__magento__models__PriceResponse"}
        "type":
          type: "string"
          title: "Type"
      type: "object"
      required:
        - "id"
        - "price_response"
        - "type"
      title: "LineItemResponseBase"
    "backend__src__connections__ecommerce__magento__models__PriceResponse":
      properties:
        "amount_inclusive":
          type: "string"
          title: "Amount Inclusive"
        "amount_exclusive":
          type: "string"
          title: "Amount Exclusive"
        "total_tax":
          type: "string"
          title: "Total Tax"
        "tax_rate":
          type: "string"
          title: "Tax Rate"
      type: "object"
      required:
        - "amount_inclusive"
        - "amount_exclusive"
        - "total_tax"
        - "tax_rate"
      title: "PriceResponse"
    "backend__src__customers__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Type of validation error"
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__customers__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__customers__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__exemptions__models__ExemptionRead":
      properties:
        "exemption_type": {"$ref": "#/components/schemas/ExemptionType", "description": "The type of exemption (e.g., wholesale, resale)"}
        "jurisdiction":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jurisdiction"
          description: "The jurisdiction identifier for the exemption"
        "country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US')"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "Start date for the exemption validity period (YYYY-MM-DD format)"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "End date for the exemption validity period (YYYY-MM-DD format)"
        "customer_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Customer Id"
          description: "Unique identifier for the customer associated with the exemption"
        "transaction_id":
          anyOf:
            - type: "string"
              maxLength: 100
            - type: "null"
          title: "Transaction Id"
          description: "Unique identifier for the transaction\n        associated with the exemption, if applicable."
        "reseller":
          type: "boolean"
          title: "Reseller"
          description: "Indicates whether the exemption is for a reseller"
          default: false
        "FEIN":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fein"
          description: "Federal Employer Identification Number\n        associated with the exemption."
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "Sales tax ID for the exemption"
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/ExemptionStatus"}
            - type: "null"
          description: "The status of the exemption.\n        Defaults to ACTIVE if not provided."
        "id":
          type: "string"
          title: "Id"
        "customer_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Name"
        "attachment_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Attachment Id"
      type: "object"
      required:
        - "exemption_type"
        - "start_date"
        - "id"
      title: "ExemptionRead"
    "backend__src__exemptions__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Validation issues, such as missing required\n                    fields or invalid field values."
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__exemptions__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__exemptions__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__exemptions__serializers__ExemptionRead":
      properties:
        "country_code":
          anyOf:
            - {"$ref": "#/components/schemas/CountryCodeEnum"}
            - type: "null"
          description: "Country code in ISO 3166-1 alpha-2 format (e.g., 'US')"
        "jurisdiction":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Jurisdiction"
          description: "The jurisdiction identifier for the exemption"
        "start_date":
          type: "string"
          format: "date"
          title: "Start Date"
          description: "Start date for the exemption validity period (YYYY-MM-DD format)"
        "end_date":
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "End date for the exemption validity period (YYYY-MM-DD format)"
        "transaction_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Transaction Id"
          description: "Unique identifier for the transaction, if applicable"
        "reseller":
          type: "boolean"
          title: "Reseller"
          description: "Indicates whether the exemption is for a reseller"
          default: false
        "FEIN":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fein"
          description: "Federal Employer Identification Number"
        "sales_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sales Tax Id"
          description: "Sales tax ID for the exemption"
        "id":
          type: "string"
          title: "Id"
          description: "Unique identifier for the exemption"
        "customer":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerRead"}
            - type: "null"
          description: "Details of the customer associated with the exemption"
        "attachment":
          anyOf:
            - items: {"$ref": "#/components/schemas/AttachmentRead"}
              type: "array"
            - type: "null"
          title: "Attachment"
          description: "List of attachments related to the exemption"
        "exemption_type": {"$ref": "#/components/schemas/ExemptionType", "description": "Type of exemption"}
        "status": {"$ref": "#/components/schemas/ExemptionStatus", "description": "Status of the exemption.\n        Possible values: ACTIVE, INACTIVE, EXPIRED."}
      type: "object"
      required:
        - "start_date"
        - "id"
        - "exemption_type"
        - "status"
      title: "ExemptionRead"
    "backend__src__filings__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Validation issues, such as missing required\n                    fields or invalid field values."
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__filings__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__filings__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__nexus__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Validation issues, such as missing required\n                    fields or invalid field values."
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__nexus__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__nexus__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__products__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Validation issues, such as missing required\n                    fields or invalid field values."
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__products__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__products__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__registrations__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Validation issues, such as missing required\n                    fields or invalid field values."
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__registrations__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__registrations__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__tax_estimation__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Type of validation error"
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__tax_estimation__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__tax_estimation__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "backend__src__transactions__responses__ValidationErrorItem":
      properties:
        "type":
          type: "string"
          title: "Type"
          description: "Validation issues, such as missing required\n                    fields or invalid field values."
        "loc":
          items:
            type: "string"
          type: "array"
          title: "Loc"
          description: "Location of error"
        "msg":
          type: "string"
          title: "Msg"
          description: "Error message"
        "input":
          title: "Input"
          description: "Invalid input value"
        "ctx":
          additionalProperties: true
          type: "object"
          title: "Ctx"
          description: "Additional context"
      type: "object"
      required:
        - "type"
        - "loc"
        - "msg"
        - "input"
        - "ctx"
      title: "ValidationErrorItem"
    "backend__src__transactions__responses__ValidationErrorResponse":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/backend__src__transactions__responses__ValidationErrorItem"}
          type: "array"
          title: "Detail"
      type: "object"
      required:
        - "detail"
      title: "ValidationErrorResponse"
    "fastapi_pagination__default__Page_ExemptionRead___1":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/backend__src__exemptions__serializers__ExemptionRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[ExemptionRead]"
    "fastapi_pagination__default__Page_ExemptionRead___2":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/backend__src__exemptions__models__ExemptionRead"}
          type: "array"
          title: "Items"
        "total":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Total"
        "page":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Page"
        "size":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Size"
        "pages":
          anyOf:
            - type: "integer"
              minimum: 0
            - type: "null"
          title: "Pages"
      type: "object"
      required:
        - "items"
        - "total"
        - "page"
        - "size"
      title: "Page[ExemptionRead]"
  securitySchemes:
    "APIKeyHeader":
      type: "apiKey"
      in: "header"
      name: "X-API-KEY"
    "HTTPBearer":
      type: "http"
      scheme: "bearer"
