/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  TransactionEstimateResponse,
  TransactionEstimateResponse$inboundSchema,
  TransactionEstimateResponse$Outbound,
  TransactionEstimateResponse$outboundSchema,
} from "./transactionestimateresponse.js";

export type PageTransactionEstimateResponse = {
  items: Array<TransactionEstimateResponse>;
  total: number;
  page: number;
  size: number;
  pages?: number | undefined;
};

/** @internal */
export const PageTransactionEstimateResponse$inboundSchema: z.ZodType<
  PageTransactionEstimateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(TransactionEstimateResponse$inboundSchema),
  total: z.number().int(),
  page: z.number().int(),
  size: z.number().int(),
  pages: z.number().int().optional(),
});

/** @internal */
export type PageTransactionEstimateResponse$Outbound = {
  items: Array<TransactionEstimateResponse$Outbound>;
  total: number;
  page: number;
  size: number;
  pages?: number | undefined;
};

/** @internal */
export const PageTransactionEstimateResponse$outboundSchema: z.ZodType<
  PageTransactionEstimateResponse$Outbound,
  z.ZodTypeDef,
  PageTransactionEstimateResponse
> = z.object({
  items: z.array(TransactionEstimateResponse$outboundSchema),
  total: z.number().int(),
  page: z.number().int(),
  size: z.number().int(),
  pages: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PageTransactionEstimateResponse$ {
  /** @deprecated use `PageTransactionEstimateResponse$inboundSchema` instead. */
  export const inboundSchema = PageTransactionEstimateResponse$inboundSchema;
  /** @deprecated use `PageTransactionEstimateResponse$outboundSchema` instead. */
  export const outboundSchema = PageTransactionEstimateResponse$outboundSchema;
  /** @deprecated use `PageTransactionEstimateResponse$Outbound` instead. */
  export type Outbound = PageTransactionEstimateResponse$Outbound;
}

export function pageTransactionEstimateResponseToJSON(
  pageTransactionEstimateResponse: PageTransactionEstimateResponse,
): string {
  return JSON.stringify(
    PageTransactionEstimateResponse$outboundSchema.parse(
      pageTransactionEstimateResponse,
    ),
  );
}

export function pageTransactionEstimateResponseFromJSON(
  jsonString: string,
): SafeParseResult<PageTransactionEstimateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PageTransactionEstimateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PageTransactionEstimateResponse' from JSON`,
  );
}
