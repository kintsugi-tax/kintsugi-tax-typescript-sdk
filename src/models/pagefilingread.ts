/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  FilingRead,
  FilingRead$inboundSchema,
  FilingRead$Outbound,
  FilingRead$outboundSchema,
} from "./filingread.js";

export type PageFilingRead = {
  items: Array<FilingRead>;
  total: number;
  page: number;
  size: number;
  pages?: number | undefined;
};

/** @internal */
export const PageFilingRead$inboundSchema: z.ZodType<
  PageFilingRead,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(FilingRead$inboundSchema),
  total: z.number().int(),
  page: z.number().int(),
  size: z.number().int(),
  pages: z.number().int().optional(),
});

/** @internal */
export type PageFilingRead$Outbound = {
  items: Array<FilingRead$Outbound>;
  total: number;
  page: number;
  size: number;
  pages?: number | undefined;
};

/** @internal */
export const PageFilingRead$outboundSchema: z.ZodType<
  PageFilingRead$Outbound,
  z.ZodTypeDef,
  PageFilingRead
> = z.object({
  items: z.array(FilingRead$outboundSchema),
  total: z.number().int(),
  page: z.number().int(),
  size: z.number().int(),
  pages: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PageFilingRead$ {
  /** @deprecated use `PageFilingRead$inboundSchema` instead. */
  export const inboundSchema = PageFilingRead$inboundSchema;
  /** @deprecated use `PageFilingRead$outboundSchema` instead. */
  export const outboundSchema = PageFilingRead$outboundSchema;
  /** @deprecated use `PageFilingRead$Outbound` instead. */
  export type Outbound = PageFilingRead$Outbound;
}

export function pageFilingReadToJSON(pageFilingRead: PageFilingRead): string {
  return JSON.stringify(PageFilingRead$outboundSchema.parse(pageFilingRead));
}

export function pageFilingReadFromJSON(
  jsonString: string,
): SafeParseResult<PageFilingRead, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PageFilingRead$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PageFilingRead' from JSON`,
  );
}
