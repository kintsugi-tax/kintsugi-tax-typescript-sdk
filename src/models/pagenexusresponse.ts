/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  NexusResponse,
  NexusResponse$inboundSchema,
  NexusResponse$Outbound,
  NexusResponse$outboundSchema,
} from "./nexusresponse.js";

export type PageNexusResponse = {
  items: Array<NexusResponse>;
  total: number;
  page: number;
  size: number;
  pages?: number | undefined;
};

/** @internal */
export const PageNexusResponse$inboundSchema: z.ZodType<
  PageNexusResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(NexusResponse$inboundSchema),
  total: z.number().int(),
  page: z.number().int(),
  size: z.number().int(),
  pages: z.number().int().optional(),
});

/** @internal */
export type PageNexusResponse$Outbound = {
  items: Array<NexusResponse$Outbound>;
  total: number;
  page: number;
  size: number;
  pages?: number | undefined;
};

/** @internal */
export const PageNexusResponse$outboundSchema: z.ZodType<
  PageNexusResponse$Outbound,
  z.ZodTypeDef,
  PageNexusResponse
> = z.object({
  items: z.array(NexusResponse$outboundSchema),
  total: z.number().int(),
  page: z.number().int(),
  size: z.number().int(),
  pages: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PageNexusResponse$ {
  /** @deprecated use `PageNexusResponse$inboundSchema` instead. */
  export const inboundSchema = PageNexusResponse$inboundSchema;
  /** @deprecated use `PageNexusResponse$outboundSchema` instead. */
  export const outboundSchema = PageNexusResponse$outboundSchema;
  /** @deprecated use `PageNexusResponse$Outbound` instead. */
  export type Outbound = PageNexusResponse$Outbound;
}

export function pageNexusResponseToJSON(
  pageNexusResponse: PageNexusResponse,
): string {
  return JSON.stringify(
    PageNexusResponse$outboundSchema.parse(pageNexusResponse),
  );
}

export function pageNexusResponseFromJSON(
  jsonString: string,
): SafeParseResult<PageNexusResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PageNexusResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PageNexusResponse' from JSON`,
  );
}
