/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * Based on transaction item exempt status.
 *
 * @remarks
 * NOT EXEMPT: None of the items are NOT EXEMPT
 * PARTIALLY EXEMPT: At least some of the items are NOT EXEMPT
 * FULLY_EXEMPT: All items sold in the transaction are EXEMPT
 */
export const TransactionExemptStatusEnum = {
  NotExempt: "NOT_EXEMPT",
  PartiallyExempt: "PARTIALLY_EXEMPT",
  FullyExempt: "FULLY_EXEMPT",
} as const;
/**
 * Based on transaction item exempt status.
 *
 * @remarks
 * NOT EXEMPT: None of the items are NOT EXEMPT
 * PARTIALLY EXEMPT: At least some of the items are NOT EXEMPT
 * FULLY_EXEMPT: All items sold in the transaction are EXEMPT
 */
export type TransactionExemptStatusEnum = ClosedEnum<
  typeof TransactionExemptStatusEnum
>;

/** @internal */
export const TransactionExemptStatusEnum$inboundSchema: z.ZodNativeEnum<
  typeof TransactionExemptStatusEnum
> = z.nativeEnum(TransactionExemptStatusEnum);

/** @internal */
export const TransactionExemptStatusEnum$outboundSchema: z.ZodNativeEnum<
  typeof TransactionExemptStatusEnum
> = TransactionExemptStatusEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionExemptStatusEnum$ {
  /** @deprecated use `TransactionExemptStatusEnum$inboundSchema` instead. */
  export const inboundSchema = TransactionExemptStatusEnum$inboundSchema;
  /** @deprecated use `TransactionExemptStatusEnum$outboundSchema` instead. */
  export const outboundSchema = TransactionExemptStatusEnum$outboundSchema;
}
