/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest =
  {
    /**
     * The unique identifier of the physical
     *
     * @remarks
     *                                 nexus to delete.
     */
    physicalNexusId: string;
  };

/** @internal */
export const DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$inboundSchema:
  z.ZodType<
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    physical_nexus_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "physical_nexus_id": "physicalNexusId",
    });
  });

/** @internal */
export type DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$Outbound =
  {
    physical_nexus_id: string;
  };

/** @internal */
export const DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$outboundSchema:
  z.ZodType<
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$Outbound,
    z.ZodTypeDef,
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest
  > = z.object({
    physicalNexusId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      physicalNexusId: "physical_nexus_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$ {
  /** @deprecated use `DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$inboundSchema;
  /** @deprecated use `DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$outboundSchema;
  /** @deprecated use `DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$Outbound` instead. */
  export type Outbound =
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$Outbound;
}

export function deletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequestToJSON(
  deletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest:
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest,
): string {
  return JSON.stringify(
    DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$outboundSchema
      .parse(
        deletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest,
      ),
  );
}

export function deletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeletePhysicalNexusV1NexusPhysicalNexusPhysicalNexusIdDeleteRequest' from JSON`,
  );
}
