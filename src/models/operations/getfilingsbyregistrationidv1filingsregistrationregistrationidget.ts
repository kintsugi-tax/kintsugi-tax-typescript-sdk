/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest =
  {
    /**
     * Unique identifier for the registration
     *
     * @remarks
     *         associated with the filings.
     */
    registrationId: string;
    /**
     * Page number
     */
    page?: number | undefined;
    /**
     * Page size
     */
    size?: number | undefined;
  };

/** @internal */
export const GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$inboundSchema:
  z.ZodType<
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    registration_id: z.string(),
    page: z.number().int().default(1),
    size: z.number().int().default(50),
  }).transform((v) => {
    return remap$(v, {
      "registration_id": "registrationId",
    });
  });

/** @internal */
export type GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$Outbound =
  {
    registration_id: string;
    page: number;
    size: number;
  };

/** @internal */
export const GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$outboundSchema:
  z.ZodType<
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$Outbound,
    z.ZodTypeDef,
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest
  > = z.object({
    registrationId: z.string(),
    page: z.number().int().default(1),
    size: z.number().int().default(50),
  }).transform((v) => {
    return remap$(v, {
      registrationId: "registration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$ {
  /** @deprecated use `GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$inboundSchema;
  /** @deprecated use `GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$outboundSchema;
  /** @deprecated use `GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$Outbound` instead. */
  export type Outbound =
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$Outbound;
}

export function getFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequestToJSON(
  getFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest:
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest,
): string {
  return JSON.stringify(
    GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$outboundSchema
      .parse(
        getFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest,
      ),
  );
}

export function getFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetFilingsByRegistrationIdV1FilingsRegistrationRegistrationIdGetRequest' from JSON`,
  );
}
