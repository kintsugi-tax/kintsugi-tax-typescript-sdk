/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetFilingsV1FilingsGetRequest = {
  /**
   * Filter filings by status
   */
  statusIn?: string | undefined;
  /**
   * Filter filings with a start date greater than or equal to this date.
   */
  startDate?: string | undefined;
  /**
   * Filter filings with an end date less than or equal to this date.
   */
  endDate?: string | undefined;
  /**
   * Filter filings filed on or after this date.
   */
  dateFiledGte?: string | undefined;
  /**
   * Filter filings filed on or before this date.
   */
  dateFiledLte?: string | undefined;
  /**
   * Comma-separated list of fields to sort the results.
   */
  orderBy?: string | undefined;
  /**
   * Filter filings by state code (e.g., CA for California).
   */
  stateCode?: string | undefined;
  /**
   * Filter filings by country code in ISO 3166-1 alpha-2 format (e.g., US).
   */
  countryCode?: Array<models.CountryCodeEnum> | undefined;
  /**
   * Page number
   */
  page?: number | undefined;
  /**
   * Page size
   */
  size?: number | undefined;
};

/** @internal */
export const GetFilingsV1FilingsGetRequest$inboundSchema: z.ZodType<
  GetFilingsV1FilingsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  status__in: z.string().default("FILED,FILING,UNFILED"),
  start_date: z.string().optional(),
  end_date: z.string().optional(),
  date_filed__gte: z.string().optional(),
  date_filed__lte: z.string().optional(),
  order_by: z.string().optional(),
  state_code: z.string().optional(),
  country_code: z.array(models.CountryCodeEnum$inboundSchema).optional(),
  page: z.number().int().default(1),
  size: z.number().int().default(50),
}).transform((v) => {
  return remap$(v, {
    "status__in": "statusIn",
    "start_date": "startDate",
    "end_date": "endDate",
    "date_filed__gte": "dateFiledGte",
    "date_filed__lte": "dateFiledLte",
    "order_by": "orderBy",
    "state_code": "stateCode",
    "country_code": "countryCode",
  });
});

/** @internal */
export type GetFilingsV1FilingsGetRequest$Outbound = {
  status__in: string;
  start_date?: string | undefined;
  end_date?: string | undefined;
  date_filed__gte?: string | undefined;
  date_filed__lte?: string | undefined;
  order_by?: string | undefined;
  state_code?: string | undefined;
  country_code?: Array<string> | undefined;
  page: number;
  size: number;
};

/** @internal */
export const GetFilingsV1FilingsGetRequest$outboundSchema: z.ZodType<
  GetFilingsV1FilingsGetRequest$Outbound,
  z.ZodTypeDef,
  GetFilingsV1FilingsGetRequest
> = z.object({
  statusIn: z.string().default("FILED,FILING,UNFILED"),
  startDate: z.string().optional(),
  endDate: z.string().optional(),
  dateFiledGte: z.string().optional(),
  dateFiledLte: z.string().optional(),
  orderBy: z.string().optional(),
  stateCode: z.string().optional(),
  countryCode: z.array(models.CountryCodeEnum$outboundSchema).optional(),
  page: z.number().int().default(1),
  size: z.number().int().default(50),
}).transform((v) => {
  return remap$(v, {
    statusIn: "status__in",
    startDate: "start_date",
    endDate: "end_date",
    dateFiledGte: "date_filed__gte",
    dateFiledLte: "date_filed__lte",
    orderBy: "order_by",
    stateCode: "state_code",
    countryCode: "country_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFilingsV1FilingsGetRequest$ {
  /** @deprecated use `GetFilingsV1FilingsGetRequest$inboundSchema` instead. */
  export const inboundSchema = GetFilingsV1FilingsGetRequest$inboundSchema;
  /** @deprecated use `GetFilingsV1FilingsGetRequest$outboundSchema` instead. */
  export const outboundSchema = GetFilingsV1FilingsGetRequest$outboundSchema;
  /** @deprecated use `GetFilingsV1FilingsGetRequest$Outbound` instead. */
  export type Outbound = GetFilingsV1FilingsGetRequest$Outbound;
}

export function getFilingsV1FilingsGetRequestToJSON(
  getFilingsV1FilingsGetRequest: GetFilingsV1FilingsGetRequest,
): string {
  return JSON.stringify(
    GetFilingsV1FilingsGetRequest$outboundSchema.parse(
      getFilingsV1FilingsGetRequest,
    ),
  );
}

export function getFilingsV1FilingsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetFilingsV1FilingsGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFilingsV1FilingsGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFilingsV1FilingsGetRequest' from JSON`,
  );
}
