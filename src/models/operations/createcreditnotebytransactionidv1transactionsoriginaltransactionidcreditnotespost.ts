/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity =
  {
    apiKeyHeader?: string | undefined;
    httpBearer?: string | undefined;
  };

export type CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest =
  {
    originalTransactionId: string;
    /**
     * The unique identifier for the organization making the request
     */
    xOrganizationId: string | null;
    creditNoteCreate: models.CreditNoteCreate;
  };

/** @internal */
export const CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$inboundSchema:
  z.ZodType<
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    APIKeyHeader: z.string().optional(),
    HTTPBearer: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "APIKeyHeader": "apiKeyHeader",
      "HTTPBearer": "httpBearer",
    });
  });

/** @internal */
export type CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$Outbound =
  {
    APIKeyHeader?: string | undefined;
    HTTPBearer?: string | undefined;
  };

/** @internal */
export const CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$outboundSchema:
  z.ZodType<
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$Outbound,
    z.ZodTypeDef,
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity
  > = z.object({
    apiKeyHeader: z.string().optional(),
    httpBearer: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      apiKeyHeader: "APIKeyHeader",
      httpBearer: "HTTPBearer",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$ {
  /** @deprecated use `CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$inboundSchema` instead. */
  export const inboundSchema =
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$inboundSchema;
  /** @deprecated use `CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$outboundSchema` instead. */
  export const outboundSchema =
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$outboundSchema;
  /** @deprecated use `CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$Outbound` instead. */
  export type Outbound =
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$Outbound;
}

export function createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurityToJSON(
  createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity:
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity,
): string {
  return JSON.stringify(
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$outboundSchema
      .parse(
        createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity,
      ),
  );
}

export function createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurityFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostSecurity' from JSON`,
  );
}

/** @internal */
export const CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$inboundSchema:
  z.ZodType<
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    original_transaction_id: z.string(),
    "x-organization-id": z.nullable(z.string()),
    CreditNoteCreate: models.CreditNoteCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "original_transaction_id": "originalTransactionId",
      "x-organization-id": "xOrganizationId",
      "CreditNoteCreate": "creditNoteCreate",
    });
  });

/** @internal */
export type CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$Outbound =
  {
    original_transaction_id: string;
    "x-organization-id": string | null;
    CreditNoteCreate: models.CreditNoteCreate$Outbound;
  };

/** @internal */
export const CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$outboundSchema:
  z.ZodType<
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$Outbound,
    z.ZodTypeDef,
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest
  > = z.object({
    originalTransactionId: z.string(),
    xOrganizationId: z.nullable(z.string()),
    creditNoteCreate: models.CreditNoteCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      originalTransactionId: "original_transaction_id",
      xOrganizationId: "x-organization-id",
      creditNoteCreate: "CreditNoteCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$ {
  /** @deprecated use `CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$inboundSchema;
  /** @deprecated use `CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$outboundSchema;
  /** @deprecated use `CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$Outbound` instead. */
  export type Outbound =
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$Outbound;
}

export function createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequestToJSON(
  createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest:
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest,
): string {
  return JSON.stringify(
    CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$outboundSchema
      .parse(
        createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest,
      ),
  );
}

export function createCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateCreditNoteByTransactionIdV1TransactionsOriginalTransactionIdCreditNotesPostRequest' from JSON`,
  );
}
