/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest =
  {
    customerId: string;
  };

/** @internal */
export const GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$inboundSchema:
  z.ZodType<
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    customer_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "customer_id": "customerId",
    });
  });

/** @internal */
export type GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$Outbound =
  {
    customer_id: string;
  };

/** @internal */
export const GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$outboundSchema:
  z.ZodType<
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$Outbound,
    z.ZodTypeDef,
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest
  > = z.object({
    customerId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      customerId: "customer_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$ {
  /** @deprecated use `GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$inboundSchema;
  /** @deprecated use `GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$outboundSchema;
  /** @deprecated use `GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$Outbound` instead. */
  export type Outbound =
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$Outbound;
}

export function getTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequestToJSON(
  getTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest:
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest,
): string {
  return JSON.stringify(
    GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$outboundSchema
      .parse(
        getTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest,
      ),
  );
}

export function getTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetTransactionsByCustomerIdV1CustomersCustomerIdTransactionsGetRequest' from JSON`,
  );
}
