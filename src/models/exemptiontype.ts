/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const ExemptionType = {
  Customer: "customer",
  Wholesale: "wholesale",
  Transaction: "transaction",
} as const;
export type ExemptionType = ClosedEnum<typeof ExemptionType>;

/** @internal */
export const ExemptionType$inboundSchema: z.ZodNativeEnum<
  typeof ExemptionType
> = z.nativeEnum(ExemptionType);

/** @internal */
export const ExemptionType$outboundSchema: z.ZodNativeEnum<
  typeof ExemptionType
> = ExemptionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExemptionType$ {
  /** @deprecated use `ExemptionType$inboundSchema` instead. */
  export const inboundSchema = ExemptionType$inboundSchema;
  /** @deprecated use `ExemptionType$outboundSchema` instead. */
  export const outboundSchema = ExemptionType$outboundSchema;
}
