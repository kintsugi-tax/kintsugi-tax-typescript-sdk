/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * Our transaction state, used to determine when/if a transaction needs additional
 *
 * @remarks
 * processing.
 */
export const ProcessingStatusEnum = {
  New: "NEW",
  Updated: "UPDATED",
  Queued: "QUEUED",
  AddressDone: "ADDRESS_DONE",
  ExemptDone: "EXEMPT_DONE",
  NexusDone: "NEXUS_DONE",
  Processed: "PROCESSED",
  FilingStarted: "FILING_STARTED",
  FilingDone: "FILING_DONE",
  Locked: "LOCKED",
  Pending: "PENDING",
  Archived: "ARCHIVED",
  NeedsRefetch: "NEEDS_REFETCH",
} as const;
/**
 * Our transaction state, used to determine when/if a transaction needs additional
 *
 * @remarks
 * processing.
 */
export type ProcessingStatusEnum = ClosedEnum<typeof ProcessingStatusEnum>;

/** @internal */
export const ProcessingStatusEnum$inboundSchema: z.ZodNativeEnum<
  typeof ProcessingStatusEnum
> = z.nativeEnum(ProcessingStatusEnum);

/** @internal */
export const ProcessingStatusEnum$outboundSchema: z.ZodNativeEnum<
  typeof ProcessingStatusEnum
> = ProcessingStatusEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProcessingStatusEnum$ {
  /** @deprecated use `ProcessingStatusEnum$inboundSchema` instead. */
  export const inboundSchema = ProcessingStatusEnum$inboundSchema;
  /** @deprecated use `ProcessingStatusEnum$outboundSchema` instead. */
  export const outboundSchema = ProcessingStatusEnum$outboundSchema;
}
