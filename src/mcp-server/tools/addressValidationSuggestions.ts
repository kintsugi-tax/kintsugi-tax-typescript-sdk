/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { addressValidationSuggestions } from "../../funcs/addressValidationSuggestions.js";
import * as models from "../../models/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: models.ValidationAddress$inboundSchema,
};

export const tool$addressValidationSuggestions: ToolDefinition<typeof args> = {
  name: "address-validation-suggestions",
  description: `Suggestions

This API endpoint provides address suggestions based on
    partial input data. It helps users auto-complete and validate addresses efficiently
    by returning a list of suggested addresses that match the input criteria.
    This improves accuracy, increases speed, reduces errors,
    and streamlines the data entry process.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await addressValidationSuggestions(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
