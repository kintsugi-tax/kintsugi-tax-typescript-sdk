/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersGetCustomerByExternalIdV1CustomersExternalExternalIdGet } from "../../funcs/customersGetCustomerByExternalIdV1CustomersExternalExternalIdGet.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .GetCustomerByExternalIdV1CustomersExternalExternalIdGetRequest$inboundSchema,
};

export const tool$customersGetCustomerByExternalIdV1CustomersExternalExternalIdGet:
  ToolDefinition<typeof args> = {
    name:
      "customers-get-customer-by-external-id-v1-customers-external-external-id-get",
    description: `Get Customer By External Id

The Get Customer By External ID API retrieves the details of a single customer using
their external identifier. This endpoint is useful for accessing customer data when only
an external ID is available.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await customersGetCustomerByExternalIdV1CustomersExternalExternalIdGet(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
