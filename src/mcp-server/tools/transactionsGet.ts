/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

<<<<<<<< HEAD:src/mcp-server/tools/transactionsGet.ts
import { transactionsGet } from "../../funcs/transactionsGet.js";
========
import { transactionsGetTransactionsV1TransactionsGet } from "../../funcs/transactionsGetTransactionsV1TransactionsGet.js";
>>>>>>>> 68f5712d768e774ab185da2f28d4e8cecdd8bee7:src/mcp-server/tools/transactionsGetTransactionsV1TransactionsGet.ts
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetTransactionsV1TransactionsGetRequest$inboundSchema
    .optional(),
};

<<<<<<<< HEAD:src/mcp-server/tools/transactionsGet.ts
export const tool$transactionsGet: ToolDefinition<typeof args> = {
  name: "transactions-get",
========
export const tool$transactionsGetTransactionsV1TransactionsGet: ToolDefinition<
  typeof args
> = {
  name: "transactions-get-transactions-v1-transactions-get",
>>>>>>>> 68f5712d768e774ab185da2f28d4e8cecdd8bee7:src/mcp-server/tools/transactionsGetTransactionsV1TransactionsGet.ts
  description: `Get Transactions

The Get Transactions API retrieves a list of transactions with
    optional filtering, sorting, and pagination.`,
  args,
  tool: async (client, args, ctx) => {
<<<<<<<< HEAD:src/mcp-server/tools/transactionsGet.ts
    const [result, apiCall] = await transactionsGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();
========
    const [result, apiCall] =
      await transactionsGetTransactionsV1TransactionsGet(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();
>>>>>>>> 68f5712d768e774ab185da2f28d4e8cecdd8bee7:src/mcp-server/tools/transactionsGetTransactionsV1TransactionsGet.ts

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
