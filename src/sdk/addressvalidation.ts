/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { addressValidationSearch } from "../funcs/addressValidationSearch.js";
import { addressValidationSuggestions } from "../funcs/addressValidationSuggestions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AddressValidation extends ClientSDK {
  /**
   * Search
   *
   * @remarks
   * This API validates and enriches address information
   *     submitted by the user. It ensures that the address is standardized, accurate,
   *     and compliant with geographical and postal standards.
   *     The API also adds additional fields, such as county, when possible.
   */
  async search(
    security: operations.SearchV1AddressValidationSearchPostSecurity,
    request: models.AddressBase,
    options?: RequestOptions,
  ): Promise<Array<models.AddressSearchResponse>> {
    return unwrapAsync(addressValidationSearch(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Suggestions
   *
   * @remarks
   * This API endpoint provides address suggestions based on
   *     partial input data. It helps users auto-complete and validate addresses efficiently
   *     by returning a list of suggested addresses that match the input criteria.
   *     This improves accuracy, increases speed, reduces errors,
   *     and streamlines the data entry process.
   */
  async suggestions(
    request: models.ValidationAddress,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(addressValidationSuggestions(
      this,
      request,
      options,
    ));
  }
}
